/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface XxxIcon {
        "content": string;
        "src": string;
    }
    interface XxxInput {
        "data": any;
        "label": string;
        "placeholder": string;
        "size": 'xs' | 'sm' | 'md' | 'lg' | 'xl';
        "type": 'button' | 'calendar' | 'checkbox' | 'color' | 'currency' | 'date' | 'datetime' | 'email' | 'file' | 'geolocation' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'select' | 'submit' | 'tel' | 'text' | 'textarea' | 'time' | 'toggle' | 'typeahead' | 'url' | 'week';
        "uuid": string;
        "value": string;
        "variant": 'blank' | 'browser' | 'desktop' | 'ios' | 'md' | 'mac' | 'windows' | 'web';
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLXxxIconElement extends Components.XxxIcon, HTMLStencilElement {
    }
    var HTMLXxxIconElement: {
        prototype: HTMLXxxIconElement;
        new (): HTMLXxxIconElement;
    };
    interface HTMLXxxInputElement extends Components.XxxInput, HTMLStencilElement {
    }
    var HTMLXxxInputElement: {
        prototype: HTMLXxxInputElement;
        new (): HTMLXxxInputElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "xxx-icon": HTMLXxxIconElement;
        "xxx-input": HTMLXxxInputElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface XxxIcon {
        "content"?: string;
        "src"?: string;
    }
    interface XxxInput {
        "data"?: any;
        "label"?: string;
        "placeholder"?: string;
        "size"?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
        "type"?: 'button' | 'calendar' | 'checkbox' | 'color' | 'currency' | 'date' | 'datetime' | 'email' | 'file' | 'geolocation' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'select' | 'submit' | 'tel' | 'text' | 'textarea' | 'time' | 'toggle' | 'typeahead' | 'url' | 'week';
        "uuid"?: string;
        "value"?: string;
        "variant"?: 'blank' | 'browser' | 'desktop' | 'ios' | 'md' | 'mac' | 'windows' | 'web';
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "xxx-icon": XxxIcon;
        "xxx-input": XxxInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "xxx-icon": LocalJSX.XxxIcon & JSXBase.HTMLAttributes<HTMLXxxIconElement>;
            "xxx-input": LocalJSX.XxxInput & JSXBase.HTMLAttributes<HTMLXxxInputElement>;
        }
    }
}
