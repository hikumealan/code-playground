{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-6f6ddccb8dac086d8653d3e9647b16eb9a8a76906d1f6c29aa304402f66a693b61f6022368d7207105b1111fa2ef1a2095fce40ee94d442e9905ca97ac305561",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise<any>;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "PlaybookDirective",
            "id": "directive-PlaybookDirective-9c7f8c3dc3d1a784551d8a9206c3fe120f4f7eec334655dd5731a7d9a0a12393d64f48671eb376f302b6178d31d12acc257b31368c8f02d2f11953feb5e06e31",
            "file": "src/app/playbook-component.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appComponent]'\n})\nexport class PlaybookDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n",
            "selector": "[appComponent]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "viewContainerRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AccordionAlignmentComponent",
            "id": "component-AccordionAlignmentComponent-76a4c166f35ded6ecb74264fccc620f7f5e866e6e4dcd48b830d7acb565bedd2c533b66932b9a22a0a7e4310503a96080646dfa1dc9918b6c1e1816bb25f2061",
            "file": "src/app/sb/components/accordion/02_accordionAlignment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion-alignment",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_accordionAlignment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "openExample2",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "openExample3",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-accordion-alignment',\n  templateUrl: './02_accordionAlignment.component.html'\n})\nexport default class AccordionAlignmentComponent {\n  @Input() open: boolean = false;\n\n  @Input() openExample2 = false;\n\n  @Input() openExample3 = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div data-testid=\"acc-align-start\" class=\"nexus-col-md-10\">\n        <nexus-accordion [open]=\"open\" (toggleEvent)=\"open = !open\" size=\"md\">\n            <nexus-accordion-trigger>\n                <h1 class=\"nexus-body\">Start aligned Accordion</h1>\n            </nexus-accordion-trigger>\n            <nexus-accordion-content>\n                Start property modifies the css style, aligning the header title to the left side.\n            </nexus-accordion-content>\n        </nexus-accordion>\n    </div>\n</div>\n<br />\n\n<div class=\"nexus-row\">\n    <div data-testid=\"acc-align-center\" class=\"nexus-col-md-10\">\n        <nexus-accordion [open]=\"openExample2\" (toggleEvent)=\"openExample2 = !openExample2\" size=\"md\">\n            <nexus-accordion-trigger align=\"center\">\n                <h1 class=\"nexus-body\">Center aligned Accordion</h1>\n            </nexus-accordion-trigger>\n            <nexus-accordion-content>\n                Center property modifies the css style, aligning the header title to the center.\n            </nexus-accordion-content>\n        </nexus-accordion>\n    </div>\n</div>\n<br />\n\n<div class=\"nexus-row\">\n    <div data-testid=\"acc-align-end\" class=\"nexus-col-md-10\">\n        <nexus-accordion [open]=\"openExample3\" (toggleEvent)=\"openExample3 = !openExample3\" size=\"md\">\n            <nexus-accordion-trigger align=\"end\">\n                <h1 class=\"nexus-body\">End aligned Accordion</h1>\n            </nexus-accordion-trigger>\n            <nexus-accordion-content>\n                End property modifies the css style, aligning the header title to the right side.\n            </nexus-accordion-content>\n        </nexus-accordion>\n    </div>\n</div>"
        },
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-ee03251d05d65ac23ebf471254bf68e6a7a778d9569b3b2a86f25455fa1b26e4bb16ddc9981eea49c3ba1d5f07e1c9357d4e5a2cd06fe2914ab67995016fff46",
            "file": "src/app/components/accordion/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion",
            "styleUrls": [
                "./accordion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionComponent {\n  @Input() open: boolean = false;\n\n  @Input() size: string = 'sm';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./accordion.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-accordion [open]=\"open\" (toggleEvent)=\"open = !open\" size=\"size\">\n  <nexus-accordion-trigger>\n    <h1 class=\"nexus-body\">Accordion Title</h1>\n  </nexus-accordion-trigger>\n  <nexus-accordion-content>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget aliquam justo, nec iaculis enim. Praesent at\n    cursus nisl, vel molestie sapien. Donec gravida metus sem, non iaculis nisl sodales at. Cras tristique magna nisi,\n    nec imperdiet lectus aliquet imperdiet. Quisque at hendrerit felis. Orci varius natoque penatibus et magnis dis\n    parturient montes, nascetur ridiculus mus. Etiam vitae quam et lorem tincidunt feugiat. Sed id massa eu ex bibendum\n    suscipit. Praesent urna est, vestibulum vitae porttitor sed, mattis id nisi. In eu semper augue. Sed viverra finibus\n    pellentesque. Etiam non ultricies mauris. Nullam eu aliquet tellus.\n  </nexus-accordion-content>\n</nexus-accordion>\n"
        },
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-815edc18986fbc082670a846ad2559558cf752f991c97d4bbcf1ac4c6667fa634637db2048cfee7f4cf00deb59e09874c99d230ba6d6ea1b2e07149801939bd2-1",
            "file": "src/app/sb/components/accordion/01_accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "align",
                    "defaultValue": "accordion.align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "open",
                    "defaultValue": "accordion.open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "accordion.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "defaultValue": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { accordion } from '../../constants';\n\n@Component({\n  selector: 'app-accordion',\n  templateUrl: './01_accordion.component.html'\n})\nexport default class AccordionComponent {\n  @Input() align: string = accordion.align;\n\n  @Input() open: boolean = accordion.open;\n\n  @Input() size: string = accordion.size;\n\n  accordion = accordion;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AccordionComponent-1",
            "templateData": "<nexus-accordion [open]=\"open\" (toggleEvent)=\"open = !open\" [size]=\"size\" [align]=\"align\">\n  <nexus-accordion-trigger [align]=\"align\">\n    <h1 class=\"nexus-body\">{{accordion.title}}</h1>\n  </nexus-accordion-trigger>\n  <nexus-accordion-content>\n    {{accordion.description}}\n  </nexus-accordion-content>\n</nexus-accordion>"
        },
        {
            "name": "AccordionExamplesComponent",
            "id": "component-AccordionExamplesComponent-cb961ab76ebeea2f0fbad97ba51e8c08858bfb8525ad10a3b9082c22087a30a409e3701f980be8d6775c4c8bdb7f7ae488b77a6e126e69e8ba05936a165b8f87",
            "file": "src/app/components/accordion-examples/accordion-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion-examples",
            "styleUrls": [
                "./accordion-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExample2",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExample3",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExampleL",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExampleM",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExampleS",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExampleXL",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openExampleXS",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-accordion-examples',\n  templateUrl: './accordion-examples.component.html',\n  styleUrls: ['./accordion-examples.component.scss']\n})\nexport class AccordionExamplesComponent {\n  public open = false;\n\n  public openExample2 = false;\n\n  public openExample3 = false;\n\n  public openExampleXS = false;\n\n  public openExampleS = false;\n\n  public openExampleM = false;\n\n  public openExampleL = false;\n\n  public openExampleXL = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./accordion-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"row\">\n  <div data-testid=\"acc-align-start\" class=\"nexus-col-md-10\">\n    <p class=\"nexus-h5\">Set <code>align=\"start | center | end\"</code> to align nexus accordion title to float in\n      \"start | center | end\". However the default accordion header aligns to left.</p>\n    <nexus-accordion [open]=\"open\" (toggleEvent)=\"open = !open\" size=\"md\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget aliquam justo, nec iaculis enim. Praesent at\n        cursus nisl, vel molestie sapien. Donec gravida metus sem, non iaculis nisl sodales at. Cras tristique magna\n        nisi,\n        nec imperdiet lectus aliquet imperdiet. Quisque at hendrerit felis. Orci varius natoque penatibus et magnis dis\n        parturient montes, nascetur ridiculus mus. Etiam vitae quam et lorem tincidunt feugiat. Sed id massa eu ex\n        bibendum\n        suscipit. Praesent urna est, vestibulum vitae porttitor sed, mattis id nisi. In eu semper augue. Sed viverra\n        finibus\n        pellentesque. Etiam non ultricies mauris. Nullam eu aliquet tellus.\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div data-testid=\"acc-align-center\" class=\"nexus-col-md-10\">\n    <nexus-accordion [open]=\"openExample2\" (toggleEvent)=\"openExample2 = !openExample2\" size=\"md\">\n      <nexus-accordion-trigger align=\"center\">\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget aliquam justo, nec iaculis enim. Praesent at\n        cursus nisl, vel molestie sapien. Donec gravida metus sem, non iaculis nisl sodales at. Cras tristique magna\n        nisi,\n        nec imperdiet lectus aliquet imperdiet. Quisque at hendrerit felis. Orci varius natoque penatibus et magnis dis\n        parturient montes, nascetur ridiculus mus. Etiam vitae quam et lorem tincidunt feugiat. Sed id massa eu ex\n        bibendum\n        suscipit. Praesent urna est, vestibulum vitae porttitor sed, mattis id nisi. In eu semper augue. Sed viverra\n        finibus\n        pellentesque. Etiam non ultricies mauris. Nullam eu aliquet tellus.\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div data-testid=\"acc-align-end\"  class=\"nexus-col-md-10\">\n    <nexus-accordion [open]=\"openExample3\" (toggleEvent)=\"openExample3 = !openExample3\" size=\"md\">\n      <nexus-accordion-trigger align=\"end\">\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget aliquam justo, nec iaculis enim. Praesent at\n        cursus nisl, vel molestie sapien. Donec gravida metus sem, non iaculis nisl sodales at. Cras tristique magna\n        nisi,\n        nec imperdiet lectus aliquet imperdiet. Quisque at hendrerit felis. Orci varius natoque penatibus et magnis dis\n        parturient montes, nascetur ridiculus mus. Etiam vitae quam et lorem tincidunt feugiat. Sed id massa eu ex\n        bibendum\n        suscipit. Praesent urna est, vestibulum vitae porttitor sed, mattis id nisi. In eu semper augue. Sed viverra\n        finibus\n        pellentesque. Etiam non ultricies mauris. Nullam eu aliquet tellus.\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div class=\"nexus-col-md-10\">\n    <p class=\"nexus-h5\">Different size variants for accordion based on which the content is padded within the accordion.\n    </p>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div data-testid=\"acc-size-xs\" class=\"nexus-col-md-10\">\n    <p class=\"nexus-h5\">Accordion Size: <code>xs | sm | md | lg | xl </code>.</p>\n    <nexus-accordion [open]=\"openExampleXS\" (toggleEvent)=\"openExampleXS = !openExampleXS\" size=\"xs\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        <span>Ths accordion is an example for extremely <strong>mobile screen (xs) sized</strong> contents.</span>\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n\n<div class=\"row\">\n  <div data-testid=\"acc-size-sm\" class=\"nexus-col-md-10\">\n    <nexus-accordion [open]=\"openExampleS\" (toggleEvent)=\"openExampleS = !openExampleS\" size=\"sm\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        <span>Ths accordion is an example for extremely <strong>small sized</strong> contents.</span>\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div data-testid=\"acc-size-md\" class=\"nexus-col-md-10\">\n    <nexus-accordion [open]=\"openExampleM\" (toggleEvent)=\"openExampleM = !openExampleM\" size=\"md\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        <span>Ths accordion is an example for extremely <strong>medium sized</strong> contents.</span>\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div data-testid=\"acc-size-lg\" class=\"nexus-col-md-10\">\n    <nexus-accordion [open]=\"openExampleL\" (toggleEvent)=\"openExampleL = !openExampleL\" size=\"lg\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        <span>Ths accordion is an example for extremely <strong>large sized</strong> contents.</span>\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div data-testid=\"acc-size-xl\" class=\"nexus-col-md-10\">\n    <nexus-accordion [open]=\"openExampleXL\" (toggleEvent)=\"openExampleXL = !openExampleXL\" size=\"xl\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">Accordion Title</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content>\n        <span>Ths accordion is an example for extremely <strong>extra large sized</strong> contents.</span>\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div class=\"nexus-col-md-10\">\n    <p class=\"nexus-h5\">Accordion Group.</p>\n    <app-accordion-group-examples></app-accordion-group-examples>\n  </div>\n</div>"
        },
        {
            "name": "AccordionGroupComponent",
            "id": "component-AccordionGroupComponent-a78994db000516140dc450c356f091ab611182065c215e61ecac7eb586045dd0cd03ab405e4b5946b023d2f0276208d81f2024b60029fdddeff45aae6d78d8d3",
            "file": "src/app/sb/components/accordion/04_accordionGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_accordionGroup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordionGroupData",
                    "defaultValue": "accordionGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "checkForOpenDrawerStatus",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { accordionGroup } from '../../constants';\n\n\n@Component({\n  selector: 'app-accordion-group',\n  templateUrl: './04_accordionGroup.component.html'\n})\nexport default class AccordionGroupComponent {\n  public open = false;\n\n  public accordionGroupData = accordionGroup;\n\n  checkForOpenDrawerStatus = (index: number) => {\n    this.accordionGroupData.forEach((element) => element.isOpen = false);\n    this.accordionGroupData[index].isOpen = !this.accordionGroupData[index].isOpen;\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-accordion-group>\n  <nexus-accordion *ngFor=\"let props of accordionGroupData; let idx=index\" [open]=\"props.isOpen\"\n    (toggleEvent)=\"checkForOpenDrawerStatus(idx)\" size=\"md\">\n    <nexus-accordion-trigger>\n      <h1 class=\"nexus-body\">{{props.title}}</h1>\n    </nexus-accordion-trigger>\n    <nexus-accordion-content>\n      <div class=\"nexus-row\">\n        <div class=\"nexus-col-md-1\" style=\"position:relative\">\n          <nexus-icon src={{props.icon}} style=\"position:absolute; top: -5px\"></nexus-icon>\n        </div>\n        <div class=\"nexus-col-md-5\">\n          {{props.info}}\n        </div>\n      </div>\n    </nexus-accordion-content>\n  </nexus-accordion>\n</nexus-accordion-group>"
        },
        {
            "name": "AccordionGroupExamplesComponent",
            "id": "component-AccordionGroupExamplesComponent-afc791892b7477e3bc6670786b03f567daed93b713efb53ff32ee3080ec4b7408d7d388854fce2dfcc738bcf3d615f131eeea70eaf8635bf5bcc547798303995",
            "file": "src/app/components/accordion-examples/accordion-group-examples/accordion-group-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion-group-examples",
            "styleUrls": [
                "./accordion-group-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion-group-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordionGroupData",
                    "defaultValue": "[\n    {\n      title: 'Accordion Title 1',\n      info: 'Lorem ipsum consectetur adipiscing dolor sit amet,  elit. Fusce eget aliquam justo, nec iaculis enim.',\n      isOpen: false\n    },\n    {\n      title: 'Accordion Title 2',\n      info: 'Lorem ipsum dolor , consectetur sit amet adipiscing elit. Fusce eget aliquam justo, nec iaculis enim.',\n      isOpen: false\n    },\n    {\n      title: 'Accordion Title 3',\n      info: 'Lorem ipsum dolor Fusce eget aliquam sit amet, consectetur adipiscing elit.  justo, nec iaculis enim.',\n      isOpen: false\n    },\n    {\n      title: 'Accordion Title 4',\n      info: 'Lorem ipsum dolor sit amet, adipiscing elit consectetur . Fusce eget aliquam justo, nec iaculis enim.',\n      isOpen: false\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "checkForOpenDrawerStatus",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-accordion-group-examples',\n  templateUrl: './accordion-group-examples.component.html',\n  styleUrls: ['./accordion-group-examples.component.scss']\n})\nexport class AccordionGroupExamplesComponent {\n  public open = false;\n\n  public accordionGroupData: { title: string; info: string; isOpen: boolean }[] = [\n    {\n      title: 'Accordion Title 1',\n      info: 'Lorem ipsum consectetur adipiscing dolor sit amet,  elit. Fusce eget aliquam justo, nec iaculis enim.',\n      isOpen: false\n    },\n    {\n      title: 'Accordion Title 2',\n      info: 'Lorem ipsum dolor , consectetur sit amet adipiscing elit. Fusce eget aliquam justo, nec iaculis enim.',\n      isOpen: false\n    },\n    {\n      title: 'Accordion Title 3',\n      info: 'Lorem ipsum dolor Fusce eget aliquam sit amet, consectetur adipiscing elit.  justo, nec iaculis enim.',\n      isOpen: false\n    },\n    {\n      title: 'Accordion Title 4',\n      info: 'Lorem ipsum dolor sit amet, adipiscing elit consectetur . Fusce eget aliquam justo, nec iaculis enim.',\n      isOpen: false\n    }\n  ];\n\n  checkForOpenDrawerStatus = (index: number) => {\n    this.accordionGroupData.forEach((element) => element.isOpen = false);\n    this.accordionGroupData[index].isOpen = !this.accordionGroupData[index].isOpen;\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./accordion-group-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-accordion-group>\n  <nexus-accordion *ngFor=\"let props of accordionGroupData; let idx=index\" [open]=\"props.isOpen\"\n    (toggleEvent)=\"checkForOpenDrawerStatus(idx)\" size=\"md\">\n    <nexus-accordion-trigger>\n      <h1 class=\"nexus-body\">{{props.title}}</h1>\n    </nexus-accordion-trigger>\n    <nexus-accordion-content>\n      {{props.info}}\n    </nexus-accordion-content>\n  </nexus-accordion>\n</nexus-accordion-group>"
        },
        {
            "name": "AccordionGroupWithTableSlotComponent",
            "id": "component-AccordionGroupWithTableSlotComponent-fde1bca76fa38e3b7d8b81101833e1cda2e12a476e2b9ad3589ef85a3a5c22a915f7ee4ad35f166c5a170f3b32d3c01182090a23615746f3d25c8bfaa41f2b93",
            "file": "src/app/sb/components/accordion/05_accordionGroupWithTableSlot.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion-group-with-table-slot",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_accordionGroupWithTableSlot.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordionGroupData",
                    "defaultValue": "AccordionGroupWithTableSlotData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "checkForOpenDrawerStatus",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { AccordionGroupWithTableSlotData } from '../../constants';\n\n@Component({\n  selector: 'app-accordion-group-with-table-slot',\n  templateUrl: './05_accordionGroupWithTableSlot.html'\n})\nexport default class AccordionGroupWithTableSlotComponent {\n  public open = false;\n\n  public accordionGroupData = AccordionGroupWithTableSlotData;\n\n  checkForOpenDrawerStatus = (index: number) => {\n    this.accordionGroupData.forEach((element) => element.isOpen = false);\n    this.accordionGroupData[index].isOpen = !this.accordionGroupData[index].isOpen;\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-accordion-group>\n    <nexus-accordion *ngFor=\"let props of accordionGroupData; let idx=index\" [open]=\"props.isOpen\"\n      (toggleEvent)=\"checkForOpenDrawerStatus(idx)\" size=\"md\">\n      <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">{{props.title}}</h1>\n      </nexus-accordion-trigger>\n      <nexus-accordion-content [innerHTML]=\"props.info\">\n      </nexus-accordion-content>\n    </nexus-accordion>\n  </nexus-accordion-group>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-73f9512237f75d76ec56edc98106392a6ffaa741c2887588701e0261f0793639f33225509b9c0f8582ab39bc2534c11245b9cbf29d9f24f3ef94b944153a852f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "defaultValue": "AccordionComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "accordionExamples",
                    "defaultValue": "AccordionExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "accordionGroupExamples",
                    "defaultValue": "AccordionGroupExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "avatar",
                    "defaultValue": "AvatarComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "avatarExamples",
                    "defaultValue": "AvatarExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "badge",
                    "defaultValue": "BadgeComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "badgeExamples",
                    "defaultValue": "BadgeExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "barChart",
                    "defaultValue": "BarChartComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 210
                },
                {
                    "name": "breadcrumb",
                    "defaultValue": "BreadcrumbComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 200
                },
                {
                    "name": "breadcrumbExample",
                    "defaultValue": "BreadcrumbExampleComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 202
                },
                {
                    "name": "button",
                    "defaultValue": "ButtonComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "buttonExamples",
                    "defaultValue": "ButtonExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "card",
                    "defaultValue": "CardComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "cardExamples",
                    "defaultValue": "CardExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "carousel",
                    "defaultValue": "CarouselComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "checkbox",
                    "defaultValue": "CheckboxComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "checkboxExamples",
                    "defaultValue": "CheckboxExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "chip",
                    "defaultValue": "ChipComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "chipExamples",
                    "defaultValue": "ChipExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "dropdown",
                    "defaultValue": "DropdownComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 206
                },
                {
                    "name": "dropdownExamples",
                    "defaultValue": "DropdownExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 208
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "ErrorMessageComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "fileUpload",
                    "defaultValue": "FileUploadComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "footer",
                    "defaultValue": "FooterComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "formField",
                    "defaultValue": "FormFieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "formFieldExamples",
                    "defaultValue": "FormFieldExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "header",
                    "defaultValue": "HeaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "icon",
                    "defaultValue": "IconComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "iconExamples",
                    "defaultValue": "IconExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "index",
                    "defaultValue": "IndexComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "input",
                    "defaultValue": "InputComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "inputExamples",
                    "defaultValue": "InputExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "label",
                    "defaultValue": "LabelComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "lineChart",
                    "defaultValue": "LineChartComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 212
                },
                {
                    "name": "loader",
                    "defaultValue": "LoaderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "loaderExamples",
                    "defaultValue": "LoaderExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "menu",
                    "defaultValue": "MenuComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "modal",
                    "defaultValue": "ModalComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "modalExamples",
                    "defaultValue": "ModalExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "notification",
                    "defaultValue": "NotificationComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 162
                },
                {
                    "name": "pagination",
                    "defaultValue": "PaginationComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "pieChart",
                    "defaultValue": "PieChartComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 214
                },
                {
                    "name": "pinEntry",
                    "defaultValue": "PinEntryComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "pinEntryExamples",
                    "defaultValue": "PinEntryExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "playbookDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PlaybookDirective",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "PlaybookDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "progressBar",
                    "defaultValue": "ProgressBarComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "progressBarExamples",
                    "defaultValue": "ProgressBarExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "radio",
                    "defaultValue": "RadioComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "radioExamples",
                    "defaultValue": "RadioExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "search",
                    "defaultValue": "SearchComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "searchExamples",
                    "defaultValue": "SearchExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 176
                },
                {
                    "name": "select",
                    "defaultValue": "SelectComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "selectExample",
                    "defaultValue": "SelectExampleComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 204
                },
                {
                    "name": "slider",
                    "defaultValue": "SliderComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "sliderExamples",
                    "defaultValue": "SliderExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "stackedBarChart",
                    "defaultValue": "StackedBarChartComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "stepper",
                    "defaultValue": "StepperComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "stepperExamples",
                    "defaultValue": "StepperExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 184
                },
                {
                    "name": "tabBar",
                    "defaultValue": "TabBarComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 158
                },
                {
                    "name": "table",
                    "defaultValue": "TableComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "tableExamples",
                    "defaultValue": "TableExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "textarea",
                    "defaultValue": "TextareaComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "toast",
                    "defaultValue": "ToastComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "toastExamples",
                    "defaultValue": "ToastExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 148
                },
                {
                    "name": "toggle",
                    "defaultValue": "ToggleComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "toggleExamples",
                    "defaultValue": "ToggleExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 192
                },
                {
                    "name": "tooltip",
                    "defaultValue": "TooltipComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "tooltipExamples",
                    "defaultValue": "TooltipExamplesComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "tree",
                    "defaultValue": "TreeComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 154
                }
            ],
            "methodsClass": [
                {
                    "name": "loadComponent",
                    "args": [
                        {
                            "name": "component",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, OnInit, ComponentFactoryResolver } from '@angular/core';\nimport { PlaybookDirective } from './playbook-component.directive';\nimport { IndexComponent } from './views/index/index.component';\nimport { InputComponent } from './components/input/input.component';\nimport { InputExamplesComponent } from './components/input-examples/input-examples.component';\nimport { LabelComponent } from './components/label/label.component';\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { ErrorMessageComponent } from './components/error-message/error-message.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { IconExamplesComponent } from './components/icon-examples/icon-examples.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { ButtonExamplesComponent } from './components/button-examples/button-examples.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { CheckboxExamplesComponent } from './components/checkbox-examples/checkbox-examples.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { RadioExamplesComponent } from './components/radio-examples/radio-examples.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoaderExamplesComponent } from './components/loader-examples/loader-examples.component';\nimport { BadgeComponent } from './components/badge/badge.component';\nimport { AvatarComponent } from './components/avatar/avatar.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { BadgeExamplesComponent } from './components/badge-examples/badge-examples.component';\nimport { AvatarExamplesComponent } from './components/avatar-examples/avatar-examples.component';\nimport { ChipComponent } from './components/chip/chip.component';\nimport { ChipExamplesComponent } from './components/chip-examples/chip-examples.component';\nimport { AccordionComponent } from './components/accordion/accordion.component';\nimport { AccordionExamplesComponent } from './components/accordion-examples/accordion-examples.component';\nimport { TooltipComponent } from './components/tooltip/tooltip.component';\nimport { TooltipExamplesComponent } from './components/tooltip-examples/tooltip-examples.component';\nimport { CardComponent } from './components/card/card.component';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { ToastExamplesComponent } from './components/toast-examples/toast-examples.component';\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { TreeComponent } from './components/tree/tree.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { TabBarComponent } from './components/tab-bar/tab-bar.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { FormFieldExamplesComponent } from './components/form-field-examples/form-field-examples.component';\nimport { CardExamplesComponent } from './components/card-examples/card-examples.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\nimport { ProgressBarExamplesComponent } from './components/progress-bar-examples/progress-bar-examples.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SearchExamplesComponent } from './components/search-examples/search-examples.component';\nimport { SliderComponent } from './components/slider/slider.component';\nimport { SliderExamplesComponent } from './components/slider-examples/slider-examples.component';\nimport { PinEntryComponent } from './components/pin-entry/pin-entry.component';\nimport { PinEntryExamplesComponent } from './components/pin-entry-examples/pin-entry-examples.component';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { ToggleExamplesComponent } from './components/toggle-examples/toggle-examples.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\nimport { TableComponent } from './components/table/table.component';\nimport { TableExamplesComponent } from './components/table-examples/table-examples.component';\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\nimport { BreadcrumbExampleComponent } from './components/breadcrumb-example/breadcrumb-example.component';\nimport { AccordionGroupExamplesComponent } from './components/accordion-examples/accordion-group-examples/accordion-group-examples.component';\nimport { SelectExampleComponent } from './components/select-example/select-example.component';\nimport { ModalExamplesComponent } from './components/modal-examples/modal-examples.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { DropdownExamplesComponent } from './components/dropdown-examples/dropdown-examples.component';\nimport { StepperComponent } from './components/stepper/stepper.component';\nimport { StepperExamplesComponent } from './components/stepper-examples/stepper-examples.component';\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\nimport { StackedBarChartComponent } from './components/stacked-bar-chart/stacked-bar-chart.component';\n\n// New Import Here\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(PlaybookDirective, { static: true }) playbookDirective: PlaybookDirective;\n\n  index = IndexComponent;\n\n  input = InputComponent;\n\n  inputExamples = InputExamplesComponent;\n\n  label = LabelComponent;\n\n  formField = FormFieldComponent;\n\n  errorMessage = ErrorMessageComponent;\n\n  textarea = TextareaComponent;\n\n  icon = IconComponent;\n\n  iconExamples = IconExamplesComponent;\n\n  button = ButtonComponent;\n\n  buttonExamples = ButtonExamplesComponent;\n\n  checkbox = CheckboxComponent;\n\n  checkboxExamples = CheckboxExamplesComponent;\n\n  radio = RadioComponent;\n\n  radioExamples = RadioExamplesComponent;\n\n  select = SelectComponent;\n\n  loader = LoaderComponent;\n\n  loaderExamples = LoaderExamplesComponent;\n\n  badge = BadgeComponent;\n\n  avatar = AvatarComponent;\n\n  modal = ModalComponent;\n\n  modalExamples = ModalExamplesComponent;\n\n  badgeExamples = BadgeExamplesComponent;\n\n  avatarExamples = AvatarExamplesComponent;\n\n  chip = ChipComponent;\n\n  chipExamples = ChipExamplesComponent;\n\n  accordion = AccordionComponent;\n\n  accordionExamples = AccordionExamplesComponent;\n\n  accordionGroupExamples = AccordionGroupExamplesComponent;\n\n  tooltip = TooltipComponent;\n\n  tooltipExamples = TooltipExamplesComponent;\n\n  card = CardComponent;\n\n  toast = ToastComponent;\n\n  toastExamples = ToastExamplesComponent;\n\n  fileUpload = FileUploadComponent;\n\n  pagination = PaginationComponent;\n\n  tree = TreeComponent;\n\n  menu = MenuComponent;\n\n  tabBar = TabBarComponent;\n\n  header = HeaderComponent;\n\n  notification = NotificationComponent;\n\n  formFieldExamples = FormFieldExamplesComponent;\n\n  cardExamples = CardExamplesComponent;\n\n  footer = FooterComponent;\n\n  progressBar = ProgressBarComponent;\n\n  progressBarExamples = ProgressBarExamplesComponent;\n\n  search = SearchComponent;\n\n  searchExamples = SearchExamplesComponent;\n\n  slider = SliderComponent;\n\n  sliderExamples = SliderExamplesComponent;\n\n  stepper = StepperComponent;\n\n  stepperExamples = StepperExamplesComponent;\n\n  pinEntry = PinEntryComponent;\n\n  pinEntryExamples = PinEntryExamplesComponent;\n\n  toggle = ToggleComponent;\n\n  toggleExamples = ToggleExamplesComponent;\n\n  carousel = CarouselComponent;\n\n  table = TableComponent;\n\n  tableExamples = TableExamplesComponent;\n\n  breadcrumb = BreadcrumbComponent;\n\n  breadcrumbExample = BreadcrumbExampleComponent;\n\n  selectExample = SelectExampleComponent;\n\n  dropdown = DropdownComponent;\n\n  dropdownExamples = DropdownExamplesComponent;\n\n  barChart = BarChartComponent;\n\n  lineChart = LineChartComponent;\n\n  pieChart = PieChartComponent;\n\n  stackedBarChart = StackedBarChartComponent;\n  // New Map Here\n\n  constructor(private readonly componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit() {\n    this.loadComponent(window.location.search.split('?')[1]);\n  }\n\n  loadComponent(component) {\n    const app = component ? this[component] : this.index;\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(app);\n\n    const { viewContainerRef } = this.playbookDirective;\n    viewContainerRef.clear();\n\n    viewContainerRef.createComponent(componentFactory);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 216,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-template appComponent></ng-template>\n"
        },
        {
            "name": "AppearenceComponent",
            "id": "component-AppearenceComponent-6807699b500afc02b0ba139f9bc0e8d19225c119a7daf7dbb0ea256b07b6c39acda8841ea21740da6b73fb8914b469866a21cb574557af502d60dc6457106b4b",
            "file": "src/app/sb/components/badge/02_appearence.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge-variant",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_appearence.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "badgeVariant",
                    "defaultValue": "appearence",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { appearence } from '../../constants';\n\n@Component({\n  selector: 'app-badge-variant',\n  templateUrl: './02_appearence.component.html'\n})\nexport default class AppearenceComponent {\n  badgeVariant = appearence;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-body nexus-center-xs nexus-mt-1\">\n    <!-- Default Badge Example -->\n    <div class=\"nexus-row nexus-mt-1 nexus-mt-1\">\n        <div class=\"nexus-col-xs-1\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-4 nexus-center-xs\">\n                    <span>{{badgeVariant.default}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"nexus-col-xs-2\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge>{{badgeVariant.oneDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge>{{badgeVariant.twoDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge>{{badgeVariant.threeDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge>{{badgeVariant.fourDigit}}</nexus-badge>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Success Badge Example -->\n    <div class=\"nexus-row nexus-mt-1 nexus-mt-1\">\n        <div class=\"nexus-col-xs-1\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-4 nexus-center-xs\">\n                    <span>{{badgeVariant.success}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"nexus-col-xs-2\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"success\">{{badgeVariant.oneDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"success\">{{badgeVariant.twoDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"success\">{{badgeVariant.threeDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"success\">{{badgeVariant.fourDigit}}</nexus-badge>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Warning Badge Example -->\n    <div class=\"nexus-row nexus-mt-1 nexus-mt-1\">\n        <div class=\"nexus-col-xs-1\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-4 nexus-center-xs\">\n                    <span>{{badgeVariant.warning}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"nexus-col-xs-2\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"warning\">{{badgeVariant.oneDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"warning\">{{badgeVariant.twoDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"warning\">{{badgeVariant.threeDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"warning\">{{badgeVariant.fourDigit}}</nexus-badge>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Error Badge Example -->\n    <div class=\"nexus-row nexus-mt-1 nexus-mt-1\">\n        <div class=\"nexus-col-xs-1\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-4 nexus-center-xs\">\n                    <span>{{badgeVariant.error}}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"nexus-col-xs-2\">\n            <div class=\"nexus-row\">\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"error\">{{badgeVariant.oneDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"error\">{{badgeVariant.twoDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"error\">{{badgeVariant.threeDigit}}</nexus-badge>\n                </div>\n                <div class=\"nexus-col-xs-1\">\n                    <nexus-badge variant=\"error\">{{badgeVariant.fourDigit}}</nexus-badge>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-b26eb01b4ba44fb334bb2ccb2a8c6b10cfaf7f1a04df0923a4994911f7a0478d99f24588a6f1a948c65bc5fcfa4cdf1b9f442341c85831989f31706689f96fe6",
            "file": "src/app/components/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "avatarClassName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarDark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "avatarImageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarLogoIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarNameDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "avatarNotification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarSize",
                    "defaultValue": "'lg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "userName",
                    "defaultValue": "'No Name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html'\n})\nexport class AvatarComponent {\n  @Input() userName: string = 'No Name';\n\n  @Input() avatarImageSrc: string;\n\n  @Input() avatarClassName: string;\n\n  @Input() avatarSize: string = 'lg';\n\n  @Input() avatarStatus: string;\n\n  @Input() description: string;\n\n  @Input() avatarNotification: string;\n\n  @Input() avatarLogoIcon: string;\n\n  @Input() avatarNameDisplay: boolean;\n\n  @Input() avatarDark: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-avatar\n  [userName]=\"userName\"\n  [avatarSize]=\"avatarSize\"\n  [avatarNotification]=\"avatarNotification\"\n  [avatarStatus]=\"avatarStatus\"\n  [avatarNameDisplay]=\"avatarNameDisplay\"\n  [avatarDark]=\"avatarDark\"\n>\n</nexus-avatar>\n"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-5d98b2ae8b957a9365ada3b59cdf12800cefe7d7ee510974715e5ef0ef55ca05f4f74dd01613f5d1a82e201638260aa6c3d5cbf9b446337e20f95e3e601f1256-1",
            "file": "src/app/sb/components/avatar/01_avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "avatarClassName",
                    "defaultValue": "avatar.class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarDark",
                    "defaultValue": "avatar.dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "avatarImageSrc",
                    "defaultValue": "avatar.image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarLogoIcon",
                    "defaultValue": "avatar.logoIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarNameDisplay",
                    "defaultValue": "avatar.nameDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "avatarNotification",
                    "defaultValue": "avatar.notification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarSize",
                    "defaultValue": "avatar.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "avatarStatus",
                    "defaultValue": "avatar.status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "description",
                    "defaultValue": "avatar.descript",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { avatar } from '../../constants';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './01_avatar.component.html'\n})\nexport default class AvatarComponent {\n  @Input() userName: string;\n\n  @Input() avatarImageSrc: string = avatar.image;\n\n  @Input() avatarClassName: string = avatar.class;\n\n  @Input() avatarSize: string = avatar.size;\n\n  @Input() avatarStatus: string = avatar.status;\n\n  @Input() description: string = avatar.descript;\n\n  @Input() avatarNotification: string = avatar.notification;\n\n  @Input() avatarLogoIcon: string = avatar.logoIcon;\n\n  @Input() avatarNameDisplay: boolean = avatar.nameDisplay;\n\n  @Input() avatarDark: boolean = avatar.dark;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AvatarComponent-1",
            "templateData": "<nexus-avatar\n  [userName]=\"userName\"\n  [avatarSize]=\"avatarSize\"\n  [avatarNotification]=\"avatarNotification\"\n  [avatarStatus]=\"avatarStatus\"\n  [avatarNameDisplay]=\"avatarNameDisplay\"\n  [avatarDark]=\"avatarDark\"\n>\n</nexus-avatar>\n"
        },
        {
            "name": "AvatarExamplesComponent",
            "id": "component-AvatarExamplesComponent-99fce367e5c4b225cdc98564a677dbedb972dde189aa8d9b3ae05dd2988b3fb807ed8089018832f1e9fa5307525e986037c101070fab34fe07d1a5abb38cfd05",
            "file": "src/app/components/avatar-examples/avatar-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./avatar-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-avatar-examples',\n  templateUrl: './avatar-examples.component.html'\n})\nexport class AvatarExamplesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p class=\"nexus-h4\">Avatar sizes</p>\n<div class=\"nexus-row\">\n    <div class=\"nexus-col-xl-1\">\n        <p class=\"nexus-h6\">xs</p>\n        <nexus-avatar\n            avatar-size='xs'\n            user-name='Joseph Benjamin'\n            avatar-logo-icon='./assets/icons/action/ic_perm_identity_24px.svg'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-1\">\n        <p class=\"nexus-h6\">sm</p>\n        <nexus-avatar\n            avatar-size='sm'\n            user-name='Joseph Benjamin'\n            avatar-logo-icon='./assets/icons/action/ic_perm_identity_24px.svg'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-1\">\n        <p class=\"nexus-h6\">md</p>\n        <nexus-avatar\n            avatar-size='md'\n            user-name='Joseph Benjamin'\n            avatar-logo-icon='./assets/icons/action/ic_perm_identity_24px.svg'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-1\">\n        <p class=\"nexus-h6\">lg</p>\n        <nexus-avatar\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n            avatar-logo-icon='./assets/icons/action/ic_perm_identity_24px.svg'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-1\">\n        <p class=\"nexus-h6\">xl</p>\n        <nexus-avatar\n            avatar-size='xl'\n            user-name='Joseph Benjamin'\n            avatar-logo-icon='./assets/icons/action/ic_perm_identity_24px.svg'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n</div>\n<p class=\"nexus-h4\">Avatar types</p>\n<div class=\"nexus-row\">\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Initials</p>\n        <nexus-avatar\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Status</p>\n        <nexus-avatar\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n            avatar-status='online'\n            avatar-name-display= 'false'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Initials and Name</p>\n        <nexus-avatar\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Logo and Name</p>\n        <nexus-avatar\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n            avatar-logo-icon='./assets/icons/action/ic_perm_identity_24px.svg'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Initials, Name and Notification</p>\n        <nexus-avatar\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n            avatar-notification='14'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Image and Name</p>\n        <nexus-avatar\n            avatar-image-src=\"./assets/images/avatar.png\"\n            avatar-size='lg'\n            user-name='Joseph Benjamin'\n        >\n        </nexus-avatar>\n    </div>\n    <div class=\"nexus-col-xl-2\">\n        <p class=\"nexus-h6\">Avatar with Initials in dark mode</p>\n        <nexus-avatar\n        avatar-size='lg'\n        user-name='Joseph Benjamin'\n        avatar-name-display= 'false'\n        avatar-dark='true'\n        >\n        </nexus-avatar>\n    </div>\n</div>"
        },
        {
            "name": "AvatarInitialsAndNameComponent",
            "id": "component-AvatarInitialsAndNameComponent-6060db1db510c4deca5d7587d49c650fb62a053f6b37925002f2258d7fafc736481cf81dc3384fa31c7abebc83f351df90d5ef2e33f31e7ae005aa02d33aa438",
            "file": "src/app/sb/components/avatar/04_initialsAndName.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-initialandname",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_initialsAndName.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name",
                    "defaultValue": "initialsAndName.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "defaultValue": "initialsAndName.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { initialsAndName } from '../../constants';\n@Component({\n  selector: 'app-avatar-examples-initialandname',\n  templateUrl: './04_initialsAndName.component.html'\n})\nexport default class AvatarInitialsAndNameComponent {\n  name = initialsAndName.name;\n\n  size = initialsAndName.size;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xl-2\">\n  <p><nexus-avatar [avatarSize]=\"size\" [userName]=\"name\"> </nexus-avatar></p>\n</div>\n"
        },
        {
            "name": "AvatarInitialsComponent",
            "id": "component-AvatarInitialsComponent-1dadeae83ca6d59a33ddf3028a75255a922e952fcf31f9bae02f6aef5745473785995ddfccf3bfa318bfdc28a19326964a153b395d62dd45e87b7b2190474767",
            "file": "src/app/sb/components/avatar/03_initials.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-initials",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_initials.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatarNameDisplay",
                    "defaultValue": "initials.avatarNameDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "defaultValue": "initials.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "size",
                    "defaultValue": "initials.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { initials } from '../../constants';\n\n@Component({\n  selector: 'app-avatar-examples-initials',\n  templateUrl: './03_initials.component.html'\n})\nexport default class AvatarInitialsComponent {\n  name = initials.name;\n\n  size = initials.size;\n\n  avatarNameDisplay = initials.avatarNameDisplay;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xl-2\">\n  <p><nexus-avatar [avatarSize]=\"size\" [userName]=\"name\" [avatarNameDisplay]=\"avatarNameDisplay\"> </nexus-avatar></p>\n</div>\n"
        },
        {
            "name": "AvatarSizeComponent",
            "id": "component-AvatarSizeComponent-cae2de900f2414a20ad64e3e2ec03f1dd58145c5ec7402bc473eb9358d860814e0f2b1f36a461b2e4b66350a5d4a7b5d82584b7c8549440f5f708a8165b1c1ee",
            "file": "src/app/sb/components/avatar/08_size.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-size",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./08_size.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatarNameDisplay",
                    "defaultValue": "sizeAvatar.avatarNameDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "logoIcon",
                    "defaultValue": "sizeAvatar.logoIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "name",
                    "defaultValue": "sizeAvatar.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "sizeLG",
                    "defaultValue": "sizeAvatar.sizeLG",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sizeMD",
                    "defaultValue": "sizeAvatar.sizeMD",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sizeSM",
                    "defaultValue": "sizeAvatar.sizeSM",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "sizeXL",
                    "defaultValue": "sizeAvatar.sizeXL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sizeXS",
                    "defaultValue": "sizeAvatar.sizeXS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { sizeAvatar } from '../../constants';\n@Component({\n  selector: 'app-avatar-examples-size',\n  templateUrl: './08_size.component.html'\n})\nexport default class AvatarSizeComponent {\n  sizeXS = sizeAvatar.sizeXS;\n\n  sizeSM = sizeAvatar.sizeSM;\n\n  sizeMD = sizeAvatar.sizeMD;\n\n  sizeLG = sizeAvatar.sizeLG;\n\n  sizeXL = sizeAvatar.sizeXL;\n\n  logoIcon = sizeAvatar.logoIcon;\n\n  name = sizeAvatar.name;\n\n  avatarNameDisplay = sizeAvatar.avatarNameDisplay;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row nexus-around-xs\">\n  <div class=\"nexus-col-md-1\">\n    <p class=\"nexus-h6\">xs</p>\n    <nexus-avatar\n      [avatarSize]=\"sizeXS\"\n      [userName]=\"name\"\n      [avatarLogoIcon]=\"logoIcon\"\n      [avatarNameDisplay]=\"avatarNameDisplay\"\n    >\n    </nexus-avatar>\n  </div>\n  <div class=\"nexus-col-md-1\">\n    <p class=\"nexus-h6\">SM</p>\n    <nexus-avatar\n      [avatarSize]=\"sizeSM\"\n      [userName]=\"name\"\n      [avatarLogoIcon]=\"logoIcon\"\n      [avatarNameDisplay]=\"avatarNameDisplay\"\n    >\n    </nexus-avatar>\n  </div>\n  <div class=\"nexus-col-md-1\">\n    <p class=\"nexus-h6\">MD</p>\n    <nexus-avatar\n      [avatarSize]=\"sizeMD\"\n      [userName]=\"name\"\n      [avatarLogoIcon]=\"logoIcon\"\n      [avatarNameDisplay]=\"avatarNameDisplay\"\n    >\n    </nexus-avatar>\n  </div>\n  <div class=\"nexus-col-md-1\">\n    <p class=\"nexus-h6\">LG</p>\n    <nexus-avatar\n      [avatarSize]=\"sizeLG\"\n      [userName]=\"name\"\n      [avatarLogoIcon]=\"logoIcon\"\n      [avatarNameDisplay]=\"avatarNameDisplay\"\n    >\n    </nexus-avatar>\n  </div>\n  <div class=\"nexus-col-md-1\">\n    <p class=\"nexus-h6\">XL</p>\n    <nexus-avatar\n      [avatarSize]=\"sizeXL\"\n      [userName]=\"name\"\n      [avatarLogoIcon]=\"logoIcon\"\n      [avatarNameDisplay]=\"avatarNameDisplay\"\n    >\n    </nexus-avatar>\n  </div>\n</div>\n"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-29ac36d7562ba917ecb7704aeabb3b7a938b1ef01c65d9a541d5ba01834c456988a61dbd51e68e84c9501b9883741d72585a1d823a6698ebd9b42b2f398d4c5e",
            "file": "src/app/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "overlap",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "'1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  templateUrl: './badge.component.html'\n})\nexport class BadgeComponent {\n  @Input() variant: string = 'default';\n\n  @Input() text: string = '1';\n\n  @Input() overlap: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-badge [variant]=\"variant\" [overlap]=\"overlap\">1</nexus-badge>\n"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-f982d80a98a50ad7a43807758bc1e0d2d3fd2d83224aaf53ccb65a0936ebcb3452478bb83c1b80f8361e948955531ba980fb82fcb3a0439e483bc4ace31c9dad-1",
            "file": "src/app/sb/components/badge/01_badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "badge.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "overlap",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { badge } from '../../constants';\n\n@Component({\n  selector: 'app-badge',\n  templateUrl: './01_badge.component.html'\n})\nexport default class BadgeComponent {\n  @Input() variant: string = 'default';\n\n  @Input() label = badge.text;\n\n  @Input() overlap: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BadgeComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <nexus-badge data-testid=\"nexus-badge\" [variant]=\"variant\" [overlap]=\"overlap\">\n        <span class=\"nexus-body\">{{label}}</span>\n    </nexus-badge>\n</div>"
        },
        {
            "name": "BadgeExamplesComponent",
            "id": "component-BadgeExamplesComponent-588d179e587a706d5c4722a6d067d2192c02340ac0a3bf020ab883bbe6f461946b4f8094f997774941c07419659bedffca8c422f2e85fe5ba5252f5edb6c38fa",
            "file": "src/app/components/badge-examples/badge-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge-examples",
            "styleUrls": [
                "./badge-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-badge-examples',\n  templateUrl: './badge-examples.component.html',\n  styleUrls: ['./badge-examples.component.scss']\n})\nexport class BadgeExamplesComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./badge-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Error</p>\n<nexus-badge variant=\"error\">1</nexus-badge>\n\n<p class=\"nexus-h5\">Success</p>\n<nexus-badge variant=\"success\">1</nexus-badge>\n\n<p class=\"nexus-h5\">Warning</p>\n<nexus-badge variant=\"warning\">1</nexus-badge>\n\n<p class=\"nexus-h5\">Badge on Button</p>\n<div class=\"margin-top\">\n  <button class=\"nexus-btn\">\n    Click me!\n    <nexus-badge overlap=\"true\">New</nexus-badge>\n  </button>\n</div>\n\n<p class=\"nexus-h5\">Badge on Icon</p>\n<div style=\"margin-top: 10px;\">\n  <button class=\"nexus-btn-icon\">\n    <nexus-icon src=\"./assets/icons/alert/ic_add_alert_24px.svg\"></nexus-icon>\n    <nexus-badge overlap=\"true\" variant=\"error\"></nexus-badge>\n  </button>\n</div>\n"
        },
        {
            "name": "BarChartComponent",
            "id": "component-BarChartComponent-4de2ec7d332ea6bcb3fda2a2bd54afb851781e561cd85eacc5749fce031e02541b6c05b5827e6d38ef8d9bfe914ad537d4d89045d7790dda6dc9e79bce2b555f",
            "file": "src/app/components/bar-chart/bar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bar-chart",
            "styleUrls": [
                "./bar-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bar-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[\n    {\n      ticker: 'KO',\n      name: 'Coca-Cola',\n      value: 52.36\n    },\n    {\n      ticker: 'BZH',\n      name: 'Beazer Homes',\n      value: 11.11\n    },\n    {\n      ticker: 'ADM',\n      name: 'Arch-Dan-Mid',\n      value: 37.17\n    },\n    {\n      ticker: 'ABCB',\n      name: 'Ameris Bancorp',\n      value: 36.44\n    },\n    {\n      ticker: 'ORCL',\n      name: 'Oracle',\n      value: 53.75\n    },\n    {\n      ticker: 'MIL',\n      name: 'MILD',\n      value: 37.17\n    },\n    {\n      ticker: 'HCL',\n      name: 'HCL',\n      value: 36.44\n    },\n    {\n      ticker: 'MFL',\n      name: 'Madras',\n      value: 53.75\n    },\n    {\n      ticker: 'PLNT',\n      name: 'Planet Fitness',\n      value: 77.27\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gridlines",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideXAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideYAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "htmlElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inverse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showPieLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showXLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showXTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showYLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vertices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 381,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateBarChartData",
                    "args": [
                        {
                            "name": "numBars",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 371,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "numBars",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getChartEl",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 399,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "randomizer",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectArcStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisLabelFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontFamily",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStrokeWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectColorScheme",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInnerRadius",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInterpolation",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLegendFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLinearDomain",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLineStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMargin",
                    "args": [
                        {
                            "name": "marginAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "marginAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMaxBarWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectNumBars",
                    "args": [
                        {
                            "name": "numBars",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 377,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "numBars",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectXTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectYTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleGridlines",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleInverse",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleLegend",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleOrientation",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXAxis",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXTicks",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 320,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYAxis",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 325,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 361,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYTicks",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 366,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleVertices",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 266,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss']\n})\nexport class BarChartComponent implements OnInit {\n  public data: Array<any> = [\n    {\n      ticker: 'KO',\n      name: 'Coca-Cola',\n      value: 52.36\n    },\n    {\n      ticker: 'BZH',\n      name: 'Beazer Homes',\n      value: 11.11\n    },\n    {\n      ticker: 'ADM',\n      name: 'Arch-Dan-Mid',\n      value: 37.17\n    },\n    {\n      ticker: 'ABCB',\n      name: 'Ameris Bancorp',\n      value: 36.44\n    },\n    {\n      ticker: 'ORCL',\n      name: 'Oracle',\n      value: 53.75\n    },\n    {\n      ticker: 'MIL',\n      name: 'MILD',\n      value: 37.17\n    },\n    {\n      ticker: 'HCL',\n      name: 'HCL',\n      value: 36.44\n    },\n    {\n      ticker: 'MFL',\n      name: 'Madras',\n      value: 53.75\n    },\n    {\n      ticker: 'PLNT',\n      name: 'Planet Fitness',\n      value: 77.27\n    }\n  ];\n\n  public gridlines: any;\n\n  public inverse: any;\n\n  public showLegend: any;\n\n  public showPieLegend: any;\n\n  public vertices: any;\n\n  public hideYAxis: any;\n\n  public showYLabel: any;\n\n  public showYTicks: any;\n\n  public hideXAxis: any;\n\n  public showXLabel: any;\n\n  public showXTicks: any;\n\n  private htmlElement: HTMLElement;\n\n  constructor(public elRef: ElementRef) {\n    this.htmlElement = this.elRef.nativeElement;\n\n    this.gridlines = false;\n    this.inverse = false;\n    this.showLegend = false;\n    this.showPieLegend = true;\n    this.vertices = true;\n\n    this.hideYAxis = false;\n    this.showYLabel = true;\n    this.showYTicks = true;\n\n    this.hideXAxis = false;\n    this.showXLabel = true;\n    this.showXTicks = true;\n  }\n\n  public changeXLabel(args: any, value: any): any {\n    this.getChartEl(args).xLabel = value;\n    const xLabelInput = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInput.value = '';\n  }\n\n  public changeYLabel(args: any, value: any): any {\n    this.getChartEl(args).yLabel = value;\n    const yLabelInput = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInput.value = '';\n  }\n\n  public getChartEl(id: string): any {\n    return document.querySelector(id);\n  }\n\n  public randomizer(): any {\n    return Math.floor(Math.random() * 500) - 250;\n  }\n\n  public selectArcStroke(args: string): any {\n    const arcStroke = this.htmlElement.querySelector('#arcStroke') as HTMLInputElement;\n    this.getChartEl(args).stroke = arcStroke.value;\n  }\n\n  public selectAxisLabelFontSize(args: string): void {\n    const axisLabelFontSize = this.htmlElement.querySelector('#axisLabelFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisLabelFontSize = axisLabelFontSize.value;\n  }\n\n  public selectAxisTickFontSize(args: string): void {\n    const axisTickFontSize = this.htmlElement.querySelector('#axisTickFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontSize = axisTickFontSize.value;\n  }\n\n  public selectAxisTickFontFamily(args: string): void {\n    const axisTickFontFamily = this.htmlElement.querySelector('#axisTickFontFamily') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontFamily = axisTickFontFamily.value;\n  }\n\n  public selectBarStroke(args: string): void {\n    const barStroke = this.htmlElement.querySelector('#barStroke') as HTMLInputElement;\n    this.getChartEl(args).barStroke = barStroke.value;\n  }\n\n  public selectBarStrokeWidth(args: string): void {\n    const barStrokeWidth = this.htmlElement.querySelector('#barStrokeWidth') as HTMLInputElement;\n    this.getChartEl(args).barStrokeWidth = barStrokeWidth.value;\n  }\n\n  public selectColorScheme(args: string): void {\n    const colorScheme = this.htmlElement.querySelector('#colorScheme') as HTMLInputElement;\n    this.getChartEl(args).colorScheme = colorScheme.value;\n  }\n\n  public selectInnerRadius(args: string): void {\n    const innerRadius = this.htmlElement.querySelector('#innerRadius') as HTMLInputElement;\n    this.getChartEl(args).innerRadius = innerRadius.value;\n  }\n\n  public selectInterpolation(args: string): void {\n    const interpolation = this.htmlElement.querySelector('#interpolation') as HTMLInputElement;\n    this.getChartEl(args).interpolation = interpolation.value;\n  }\n\n  public selectLegendFontSize(args: string): void {\n    const legendFontSize = this.htmlElement.querySelector('#legendFontSize') as HTMLInputElement;\n    this.getChartEl(args).legendFontSize = legendFontSize.value;\n  }\n\n  public selectLinearDomain(args: string): void {\n    const val = this.htmlElement.querySelector('#linearDomain') as HTMLInputElement;\n    const el = this.getChartEl(args);\n    if (val.value === 'percent') {\n      el.linearTickFormat = 'percent1d';\n    } else {\n      el.linearTickFormat = 'localestring';\n    }\n    this.getChartEl(args).linearDomain = val.value;\n  }\n\n  public selectLineStroke(args: string): void {\n    const val = this.htmlElement.querySelector('#lineStroke') as HTMLInputElement;\n    this.getChartEl(args).strokeWidth = val.value;\n  }\n\n  public selectMargin(marginAttribute: string, args: any): any {\n    const val = this.htmlElement.querySelector(`#${marginAttribute}`) as HTMLInputElement;\n    const el = this.getChartEl(args);\n    el[marginAttribute] = val.value;\n  }\n\n  public selectMaxBarWidth(args: string): void {\n    const val = this.htmlElement.querySelector('#maxBarWidth') as HTMLInputElement;\n    this.getChartEl(args).maxBarWidth = val.value;\n  }\n\n  public selectXTickSize(args: string): void {\n    const val = this.htmlElement.querySelector('#xTickSize') as HTMLInputElement;\n    this.getChartEl(args).xTickSize = val.value;\n  }\n\n  public selectYTickSize(args: string): void {\n    const val = this.htmlElement.querySelector('#yTickSize') as HTMLInputElement;\n    this.getChartEl(args).yTickSize = val.value;\n  }\n\n  public toggleGridlines(args: string): void {\n    this.gridlines = !this.gridlines;\n    this.getChartEl(args).gridlines = this.gridlines;\n  }\n\n  public toggleInverse(args: string): void {\n    this.inverse = !this.inverse;\n    this.getChartEl(args).inverse = this.inverse;\n\n    if (this.inverse) {\n      this.htmlElement.querySelector('div.chart').classList.add('inverse');\n    } else {\n      this.htmlElement.querySelector('div.chart').classList.remove('inverse');\n    }\n  }\n\n  public toggleLegend(args: string): void {\n    if (args === 'nexus-pie-chart') {\n      this.showPieLegend = !this.showPieLegend;\n      this.getChartEl(args).legend = this.showPieLegend;\n\n      return;\n    }\n\n    this.showLegend = !this.showLegend;\n\n    this.getChartEl(args).legend = this.showLegend;\n  }\n\n  public toggleOrientation(args: string): void {\n    const orientationValue = this.htmlElement.querySelector('#orientation') as HTMLInputElement;\n    const val = orientationValue.value || 'vertical';\n    const el = this.getChartEl(args);\n    let xLabel: any;\n    let yLabel: any;\n\n    // horizontal orientation\n    if (val === 'horizontal') {\n      if (args === 'nexus-stacked-bar-chart') {\n        xLabel = 'Production';\n        yLabel = 'Year';\n      } else {\n        xLabel = 'Price';\n        yLabel = 'Ticker Symbol';\n      }\n    } else if (args === 'nexus-stacked-bar-chart') {\n      xLabel = 'Year';\n      yLabel = 'Production';\n    } else {\n      xLabel = 'Ticker Symbol';\n      yLabel = 'Price';\n    }\n\n    el.orientation = val;\n    el.xLabel = xLabel;\n    el.yLabel = yLabel;\n  }\n\n  public toggleVertices(args: string): void {\n    this.vertices = !this.vertices;\n    this.getChartEl(args).vertices = this.vertices;\n  }\n\n  public toggleShowHideXAxis(args: string): void {\n    this.hideXAxis = !this.hideXAxis;\n    const el = this.getChartEl(args);\n\n    if (this.hideXAxis) {\n      el.xLabel = '';\n      el.hideXAxis = true;\n      el.hideXTicks = true;\n\n      this.showXLabel = false;\n      this.showXTicks = false;\n\n      const xLabelItem = this.htmlElement.querySelector('#xLabel') as HTMLInputElement;\n      xLabelItem.checked = false;\n      xLabelItem.disabled = true;\n\n      const xTicksItem = this.htmlElement.querySelector('#xTicks') as HTMLInputElement;\n      xTicksItem.checked = false;\n      xTicksItem.disabled = true;\n    } else {\n      el.xLabel = 'Date';\n      el.hideXAxis = false;\n      el.hideXTicks = false;\n\n      this.showXLabel = true;\n      this.showXTicks = true;\n\n      const xLabelItem1 = this.htmlElement.querySelector('#xLabel') as HTMLInputElement;\n      xLabelItem1.checked = true;\n      xLabelItem1.disabled = false;\n\n      const xTicksItem1 = this.htmlElement.querySelector('#xTicks') as HTMLInputElement;\n      xTicksItem1.checked = true;\n      xTicksItem1.disabled = false;\n    }\n  }\n\n  public toggleShowHideXLabel(args: string): void {\n    this.showXLabel = !this.showXLabel;\n    let label: any;\n    label = '';\n    switch (args) {\n      default:\n        label = 'Date';\n        break;\n    }\n    this.getChartEl(args).xLabel = this.showXLabel ? label : '';\n  }\n\n  public toggleShowHideXTicks(args: string): void {\n    this.showXTicks = !this.showXTicks;\n    this.getChartEl(args).hideXTicks = !this.showXTicks;\n  }\n\n  public toggleShowHideYAxis(args: string): void {\n    this.hideYAxis = !this.hideYAxis;\n    const el = this.getChartEl(args);\n\n    if (this.hideYAxis) {\n      el.yLabel = '';\n      el.hideYAxis = true;\n      el.hideYTicks = true;\n\n      this.showYLabel = false;\n      this.showYTicks = false;\n\n      const yLabelItem2 = this.htmlElement.querySelector('#yLabel') as HTMLInputElement;\n      yLabelItem2.checked = false;\n      yLabelItem2.disabled = true;\n\n      const yTicksItem2 = this.htmlElement.querySelector('#yTicks') as HTMLInputElement;\n      yTicksItem2.checked = false;\n      yTicksItem2.disabled = true;\n    } else {\n      el.yLabel = 'Score';\n      el.hideYAxis = false;\n      el.hideYTicks = false;\n\n      this.showYLabel = true;\n      this.showYTicks = true;\n\n      const yLabelItem3 = this.htmlElement.querySelector('#yLabel') as HTMLInputElement;\n      yLabelItem3.checked = true;\n      yLabelItem3.disabled = false;\n      const yTicksItem3 = this.htmlElement.querySelector('#yTicks') as HTMLInputElement;\n      yTicksItem3.checked = true;\n      yTicksItem3.disabled = false;\n    }\n  }\n\n  public toggleShowHideYLabel(args: string): void {\n    this.showYLabel = !this.showYLabel;\n    this.getChartEl(args).yLabel = this.showYLabel ? 'Score' : '';\n  }\n\n  public toggleShowHideYTicks(args: string): void {\n    this.showYTicks = !this.showYTicks;\n    this.getChartEl(args).hideYTicks = !this.showYTicks;\n  }\n\n  public generateBarChartData(numBars: number): any {\n    this.data.sort((aItem, bItem) => aItem.ticker > bItem.ticker ? 1 : -1);\n\n    return this.data.slice(0, numBars);\n  }\n\n  public selectNumBars(numBars: number): any {\n    this.getChartEl('nexus-bar-chart').chartData = this.generateBarChartData(numBars);\n  }\n\n  public addListeners(): void {\n    const xLabelInputMethod = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInputMethod.addEventListener('keyup', (evt) => {\n      if (evt.key === 'Enter') {\n        const evtVal = evt.target as HTMLInputElement;\n        this.changeXLabel('nexus-bar-chart', evtVal.value);\n      }\n    });\n\n    const yLabelInputMethod = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInputMethod.addEventListener('keyup', (evt) => {\n      if (evt.key === 'Enter') {\n        const evtVal = evt.target as HTMLInputElement;\n        this.changeYLabel('nexus-bar-chart', evtVal.value);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.htmlElement.querySelector('nexus-bar-chart').chartData = this.generateBarChartData(3);\n    this.addListeners();\n    this.selectNumBars(9);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '@nexus/core/dist/styles/variables';\n\nh1,\nh2,\nh3 {\n  color: $grey-700;\n}\n\na {\n  color: $blue-400;\n  text-decoration: none;\n}\n\na:hover {\n  color: $blue-700;\n  text-decoration: none;\n}\n\npre.code {\n  white-space: pre-wrap;\n  background: hsl(30, 80%, 90%);\n  padding: 1.25 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  font-size: 1.25 * $rhythm;\n  border: solid 1px $grey-100;\n  color: $grey-900;\n}\n\n/*********************************************\n * Form\n *********************************************/\n\nselect {\n  padding: $rhythm 2 * $rhythm $rhythm $rhythm;\n  display: inline-block;\n  line-height: 3 * $rhythm;\n  font-size: 2 * $rhythm;\n  width: 100%;\n}\n\n/*********************************************\n * Classes\n *********************************************/\n\nbutton.action {\n  background: $grey-700;\n  font-size: 2 * $rhythm;\n  color: $grey-100;\n  height: 3.5 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  padding: 0 1.25 * $rhythm;\n  cursor: pointer;\n}\n\nbutton.action:hover {\n  background: $grey-900;\n}\n\ndiv.btn-item,\ndiv.cbx-item,\ndiv.select-item {\n  padding-left: 0.5 * $rhythm;\n  padding-right: 0.5 * $rhythm;\n}\n\ndiv.chart {\n  min-height: 60 * $rhythm;\n}\n\ndiv.inverse {\n  background: $grey-900;\n}\n\ndiv.control-category {\n  border-bottom: solid 1px $grey-100;\n  padding-bottom: 0.5 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n  font-weight: 600;\n}\n\ndiv.control-item {\n  margin-top: 1.25 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n}\n\ndiv.header-link {\n  margin-right: 2 * $rhythm;\n}\n\ndiv.header-link a {\n  color: $grey-100;\n}\n\ndiv.header-link a:hover {\n  color: $orange-400;\n}\n\ndiv.hoz-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.1em;\n}\n\ndiv.page-title {\n  font-size: 2.25 * $rhythm;\n  color: $grey-900;\n  padding: 0.5 * $rhythm $rhythm;\n  border-radius: 0.5 * $rhythm;\n  background: $grey-100;\n  margin-bottom: 2 * $rhythm;\n  text-align: center;\n}\n\ndiv.select-el {\n  margin-top: 0.5 * $rhythm;\n}\n\ndiv.select-group {\n  font-size: 2 * $rhythm;\n  font-style: italic;\n  color: $blue-400;\n}\n\ndiv.select-item > label {\n  font-size: 0.8em;\n}\n\ndiv.select-item > label,\ndiv.select-item > select {\n  display: inline;\n}\n\n.position {\n  position: inherit;\n}\n",
                    "styleUrl": "./bar-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 81,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xs-1 nexus-col-md-2 nexus-col-lg-3\">\n        <nexus-label for=\"xTickSize\" class=\"select\">Tick Size / Length</nexus-label>\n        <select name=\"x-tick-size\" id=\"xTickSize\" (input)=\"selectXTickSize('nexus-bar-chart')\">\n            <option value=\"2\" selected>2</option>\n            <option value=\"4\">4</option>\n            <option value=\"10\">10</option>\n            <option value=\"12\">12</option>\n            <option value=\"16\">16</option>\n        </select>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"xLabelInput\" class=\"select\">Label</nexus-label>\n            <nexus-input type=\"text\" placeholder=\"Enter text\" id=\"xLabelInput\"></nexus-input>\n        </div>\n\n        <!-- Y axis -->\n        <div class=\"control-category\">Y-axis</div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"y-label\" id=\"yLabel\" checked (change)=\"toggleShowHideYLabel('nexus-bar-chart')\">Show\n                Label</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"y-ticks\" id=\"yTicks\" checked (change)=\"toggleShowHideYTicks('nexus-bar-chart')\">Show\n                Tick\n                Values</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"hide-y\" id=\"hideY\" (change)=\"toggleShowHideYAxis('nexus-bar-chart')\">Hide Entire\n                Y-axis</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-label for=\"yTickSize\" class=\"select\">Tick Size / Length</nexus-label>\n            <select name=\"y-tick-size\" id=\"yTickSize\" (input)=\"selectYTickSize('nexus-bar-chart')\">\n                <option value=\"2\" selected>2</option>\n                <option value=\"4\">4</option>\n                <option value=\"10\">10</option>\n                <option value=\"12\">12</option>\n                <option value=\"16\">16</option>\n            </select>\n        </div>\n        <div class=\"control-item\">\n            <nexus-label for=\"yLabelInput\" class=\"select\">Label</nexus-label>\n            <nexus-input type=\"text\" placeholder=\"Enter text\" id=\"yLabelInput\"></nexus-input>\n        </div>\n\n        <!-- miscellaneous options -->\n        <div class=\"control-category\">Options</div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"show-gridlines\" id=\"showGridlines\"\n                (change)=\"toggleGridlines('nexus-bar-chart')\">Gridlines</nexus-checkbox>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"inverse\" id=\"inverse\"\n                (change)=\"toggleInverse('nexus-bar-chart')\">Inverse</nexus-checkbox>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"show-legend\" id=\"showLegend\"\n                (change)=\"toggleLegend('nexus-bar-chart')\">Legend</nexus-checkbox>\n        </div>\n\n        <!-- other axis stuff -->\n        <div class=\"control-item\">\n            <nexus-label for=\"axisLabelFontSize\" class=\"select\">Axis Label Font Size</nexus-label>\n            <select name=\"axis-label-font-size\" id=\"axisLabelFontSize\"\n                (input)=\"selectAxisLabelFontSize('nexus-bar-chart')\">\n                <option value=\"9\">9px</option>\n                <option value=\"12\">12px</option>\n                <option value=\"14\" selected>14px</option>\n                <option value=\"16\">16px</option>\n                <option value=\"20\">20px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"axisTickFontFamily\" class=\"select\">Axis Tick Font Family</nexus-label>\n            <select name=\"axis-tick-font-family\" id=\"axisTickFontFamily\"\n                (input)=\"selectAxisTickFontFamily('nexus-bar-chart')\">\n                <option value=\"sans\" selected>sans-serif</option>\n                <option value=\"serif\">serif</option>\n                <option value=\"monospace\">monospace</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"axisTickFontSize\" class=\"select\">Axis Tick Font Size</nexus-label>\n            <select name=\"axis-tick-font-size\" id=\"axisTickFontSize\"\n                (input)=\"selectAxisTickFontSize('nexus-bar-chart')\">\n                <option value=\"8\">8px</option>\n                <option value=\"9\">9px</option>\n                <option value=\"10\" selected>10px</option>\n                <option value=\"12\">12px</option>\n            </select>\n        </div>\n\n        <!-- bar stuff -->\n        <div class=\"control-item\">\n            <nexus-label for=\"barStroke\" class=\"select\">Bar Stroke</nexus-label>\n            <select name=\"bar_stroke\" id=\"barStroke\" (input)=\"selectBarStroke('nexus-bar-chart')\">\n                <option value=\"transparent\" selected>transparent</option>\n                <option value=\"#000000\">black</option>\n                <option value=\"#ffffff\">white</option>\n                <option value=\"#999999\">gray</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"barStrokeWidth\" class=\"select\">Bar Stroke Width</nexus-label>\n            <select name=\"bar_stroke_width\" id=\"barStrokeWidth\" (input)=\"selectBarStrokeWidth('nexus-bar-chart')\">\n                <option value=\"0\">none</option>\n                <option value=\"1\" selected>1px</option>\n                <option value=\"2\">2px</option>\n                <option value=\"5\">5px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"maxBarWidth\" class=\"select\">Bar Width, Max</nexus-label>\n            <select name=\"max_bar_width\" id=\"maxBarWidth\" (input)=\"selectMaxBarWidth('nexus-bar-chart')\">\n                <option value=\"5\">5px</option>\n                <option value=\"25\">25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\" selected>75px</option>\n                <option value=\"2000\">fill space</option>\n            </select>\n        </div>\n\n        <!-- color scheme --->\n        <div class=\"control-item\">\n            <nexus-label for=\"colorScheme\" class=\"select\">Color Scheme</nexus-label>\n            <select name=\"color-scheme\" id=\"colorScheme\" (input)=\"selectColorScheme('nexus-bar-chart')\">\n                <option value=\"category10\" selected>Category 10</option>\n                <option value=\"accent\">Accent</option>\n                <option value=\"paired\">Paired</option>\n                <option value=\"set1\">Set 1</option>\n                <option value=\"set2\">Set 2</option>\n                <option value=\"set3\">Set 3</option>\n                <option value=\"black\">Black</option>\n                <option value=\"gray\">Gray</option>\n            </select>\n        </div>\n\n        <!-- legend font size -->\n        <div class=\"control-item\">\n            <nexus-label for=\"legendFontSize\" class=\"select\">Legend Font Size</nexus-label>\n            <select name=\"legend_font_size\" id=\"legendFontSize\" (input)=\"selectLegendFontSize('nexus-bar-chart')\">\n                <option value=\"10\">10px</option>\n                <option value=\"12\" selected>12px</option>\n                <option value=\"14\">14px</option>\n            </select>\n        </div>\n\n        <!-- orientation -->\n        <div class=\"control-item\">\n            <nexus-label for=\"orientation\" class=\"select\">Orientation</nexus-label>\n            <select name=\"orient\" id=\"orientation\" (input)=\"toggleOrientation('nexus-bar-chart')\">\n                <option value=\"vertical\" selected>vertical</option>\n                <option value=\"horizontal\">horizontal</option>\n            </select>\n        </div>\n\n        <!-- top, right, bottom, left margins -->\n        <div class=\"control-item\">\n            <nexus-label for=\"marginBottom\" class=\"select\">Margin Bottom></nexus-label>\n            <select name=\"margin-bottom\" id=\"marginBottom\" (input)=\"selectMargin('marginBottom', 'nexus-bar-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"marginRight\" class=\"select\">Margin Right</nexus-label>\n            <select name=\"margin_right\" id=\"marginRight\" (input)=\"selectMargin('marginRight', 'nexus-bar-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"marginLeft\" class=\"select\">Margin Left</nexus-label>\n            <select name=\"margin_left\" id=\"marginLeft\" (input)=\"selectMargin('marginLeft', 'nexus-bar-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"marginTop\" class=\"select\">Margin Top></nexus-label>\n            <select name=\"margin_top\" id=\"marginTop\" (input)=\"selectMargin('marginTop', 'nexus-bar-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n    </div>\n    <!-- chart container -->\n    <div class=\"nexus-col-xs-3 nexus-col-md-6 nexus-col-lg-9 position\">\n        <div class=\"page-title\">&lt;nexus-bar-chart&gt;</div>\n\n        <p>Demonstrating a bar chart with stock ticker symbols / prices.</p>\n\n        <div class=\"hoz-group\">\n            <div class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumBars(1)\">1 Stock</button>\n            </div>\n            <div class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumBars(2)\">2 Stocks</button>\n            </div>\n            <div class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumBars(3)\">3 Stocks</button>\n            </div>\n            <div class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumBars(4)\">4 Stocks</button>\n            </div>\n            <div class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumBars(5)\">5 Stocks</button>\n            </div>\n        </div>\n\n        <div class=\"chart\">\n            <nexus-bar-chart chart-id=\"myStvBarChart\" legend-metric=\"name\" linear-metric=\"value\"\n                linear-tick-format=\"USD\" margin-left=\"35\" ordinal-metric=\"ticker\" responsive tooltips\n                x-label=\"Ticker Symbol\" y-label=\"Price\"></nexus-bar-chart>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "BarChartComponent",
            "id": "component-BarChartComponent-f5f060665d6de1f7d55cee415a634dcaaf7ef5a8e4d94084e3ce87c6006bfbdbbcddaa57ee77a869f53b7bbe4fae25eeb1ce4943b664d8b31d9a18003cbc3026-1",
            "file": "src/app/sb/components/bar-chart/01_bar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bar-chart",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_bar-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "axisLabelFontSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "axisTickFontFamily",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "axisTickFontSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "barStroke",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "barStrokeWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "chartId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "colorScheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "gridlines",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "hideXAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "hideXTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "hideYAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "hideYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inverse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "legend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "legendFontSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "legendMetric",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "legendWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "linearMetric",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "linearTickFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "marginBottom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "marginLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "marginRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "marginTop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "maxBarWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 105,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "ordinalMetric",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "orientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "responsive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tooltips",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 111,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "xLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "xTickSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "yLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 117,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "yTickSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[\n    {\n      ticker: 'KO',\n      name: 'Coca-Cola',\n      value: 52.36\n    },\n    {\n      ticker: 'BZH',\n      name: 'Beazer Homes',\n      value: 11.11\n    },\n    {\n      ticker: 'ADM',\n      name: 'Arch-Dan-Mid',\n      value: 37.17\n    },\n    {\n      ticker: 'ABCB',\n      name: 'Ameris Bancorp',\n      value: 36.44\n    },\n    {\n      ticker: 'ORCL',\n      name: 'Oracle',\n      value: 53.75\n    },\n    {\n      ticker: 'MIL',\n      name: 'MILD',\n      value: 37.17\n    },\n    {\n      ticker: 'HCL',\n      name: 'HCL',\n      value: 36.44\n    },\n    {\n      ticker: 'MFL',\n      name: 'Madras',\n      value: 53.75\n    },\n    {\n      ticker: 'PLNT',\n      name: 'Planet Fitness',\n      value: 77.27\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "htmlElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './01_bar-chart.component.html'\n})\nexport default class BarChartComponent implements OnInit {\n  data = [\n    {\n      ticker: 'KO',\n      name: 'Coca-Cola',\n      value: 52.36\n    },\n    {\n      ticker: 'BZH',\n      name: 'Beazer Homes',\n      value: 11.11\n    },\n    {\n      ticker: 'ADM',\n      name: 'Arch-Dan-Mid',\n      value: 37.17\n    },\n    {\n      ticker: 'ABCB',\n      name: 'Ameris Bancorp',\n      value: 36.44\n    },\n    {\n      ticker: 'ORCL',\n      name: 'Oracle',\n      value: 53.75\n    },\n    {\n      ticker: 'MIL',\n      name: 'MILD',\n      value: 37.17\n    },\n    {\n      ticker: 'HCL',\n      name: 'HCL',\n      value: 36.44\n    },\n    {\n      ticker: 'MFL',\n      name: 'Madras',\n      value: 53.75\n    },\n    {\n      ticker: 'PLNT',\n      name: 'Planet Fitness',\n      value: 77.27\n    }\n  ];\n\n  @Input() axisLabelFontSize: any;\n\n  @Input() axisTickFontFamily: any;\n\n  @Input() axisTickFontSize: any;\n\n  @Input() barStroke: any;\n\n  @Input() barStrokeWidth: any;\n\n  @Input() chartData: any;\n\n  @Input() chartId: any;\n\n  @Input() colorScheme: any;\n\n  @Input() gridlines: any;\n\n  @Input() hideXAxis: any;\n\n  @Input() hideXTicks: any;\n\n  @Input() hideYAxis: any;\n\n  @Input() hideYTicks: any;\n\n  @Input() inverse: any;\n\n  @Input() legend: any;\n\n  @Input() legendFontSize: any;\n\n  @Input() legendMetric: any;\n\n  @Input() legendWidth: any;\n\n  @Input() linearMetric: any;\n\n  @Input() linearTickFormat: any;\n\n  @Input() marginBottom: any;\n\n  @Input() marginLeft: any;\n\n  @Input() marginRight: any;\n\n  @Input() marginTop: any;\n\n  @Input() maxBarWidth: any;\n\n  @Input() orientation: any;\n\n  @Input() responsive: any;\n\n  @Input() tooltips: any;\n\n  @Input() xLabel: any;\n\n  @Input() xTickSize: any;\n\n  @Input() yLabel: any;\n\n  @Input() yTickSize: any;\n\n  @Input() ordinalMetric: any;\n\n  private htmlElement: HTMLElement;\n\n  constructor(public elRef: ElementRef) {\n    this.htmlElement = this.elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.htmlElement.querySelector('nexus-bar-chart').chartData = this.data;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 123,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BarChartComponent-1",
            "templateData": "<nexus-bar-chart\n    chart-id=\"myStvBarChart\"\n    legend-metric=\"name\"\n    linear-metric=\"value\"\n    linear-tick-format=\"USD\"\n    margin-left=\"35\"\n    ordinal-metric=\"ticker\"\n    bar-stroke=\"barStroke\"\n    bar-stroke-width=\"barStrokeWidth\"\n    color-scheme=\"colorScheme\"\n    gridlines=\"gridlines\"\n    hide-X-Axis=\"hideXAxis\"\n    hidex-y-Ticks=\"hideXTicks\"\n    hide-Y-Axis=\"hideYAxis\"\n    hide-Y-Ticks=\"hideYTicks\"\n    inverse=\"inverse\"\n    legend=\"legend\"\n    responsive\n    tooltips\n    x-label=\"Ticker Symbol\"\n    y-label=\"Price\"></nexus-bar-chart>"
        },
        {
            "name": "BreadcrumbComponent",
            "id": "component-BreadcrumbComponent-0a9a04e09093fd7033c3cdbd8fcb7709635802a2e0c65981b49fce7c173fa6a129cbb52b7bb36295372dff9a059ac2237eefe1b523b065365289e4bb8b561c42",
            "file": "src/app/components/breadcrumb/breadcrumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb",
            "styleUrls": [
                "./breadcrumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "separator",
                    "defaultValue": "'/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent {\n  @Input() separator: string = '/';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./breadcrumb.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-breadcrumb [separator]=\"separator\">\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 1</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 2</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 3</a></nexus-breadcrumb-item>\n</nexus-breadcrumb>\n"
        },
        {
            "name": "BreadcrumbComponent",
            "id": "component-BreadcrumbComponent-47980b6b3eb357e332c5800d8967cf607e172fe4fa6327dc0b911265418098a6a725c5df06a6585baa3c2af680b47aaa35ce06c85f6d1f2364cfe237236ccb59-1",
            "file": "src/app/sb/components/breadcrumb/01_breadcrumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "separator",
                    "defaultValue": "'/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './01_breadcrumb.component.html'\n})\nexport default class BreadcrumbComponent {\n  @Input() separator: string = '/';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BreadcrumbComponent-1",
            "templateData": "<div class=\"nexus-row\">\n  <div class=\"nexus-col-xl-11\">\n    <div class=\"nexus-center-xs nexus-pt-4\">\n      <nexus-breadcrumb [separator]=\"separator\">\n        <nexus-breadcrumb-item><a href=\"javascript:void(0)\"\n            style=\"text-decoration: none; \">Home</a></nexus-breadcrumb-item>\n        <nexus-breadcrumb-item><a href=\"javascript:void(0)\"\n            style=\"text-decoration: none; \">Library</a></nexus-breadcrumb-item>\n        <nexus-breadcrumb-item><a href=\"javascript:void(0)\"\n            style=\"text-decoration: none; \">Academics</a></nexus-breadcrumb-item>\n      </nexus-breadcrumb>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "BreadcrumbExampleComponent",
            "id": "component-BreadcrumbExampleComponent-b6309c316cd680bf6ba82023407dcf307fd35cfecf6480a0cd6847fc68770c1db95ffb1d5931f70c1e50ca233ca2a5299e4c5d6a9bd1317af810376427342dc3",
            "file": "src/app/components/breadcrumb-example/breadcrumb-example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb-example",
            "styleUrls": [
                "./breadcrumb-example.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumb-example.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumb-example',\n  templateUrl: './breadcrumb-example.component.html',\n  styleUrls: ['./breadcrumb-example.component.scss']\n})\nexport class BreadcrumbExampleComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./breadcrumb-example.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Custom Content</p>\n\n<p class=\"nexus-h6\">Breadcrumb Separators</p>\n<p>Default</p>\n<nexus-breadcrumb>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 1</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 2</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 3</a></nexus-breadcrumb-item>\n</nexus-breadcrumb>\n\n<p>Backward Slash: \\</p>\n<nexus-breadcrumb separator=\"\\\">\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 1</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 2</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 3</a></nexus-breadcrumb-item>\n</nexus-breadcrumb>\n\n<p>Greaterthan: &gt;</p>\n<nexus-breadcrumb separator=\">\">\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 1</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 2</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 3</a></nexus-breadcrumb-item>\n</nexus-breadcrumb>\n\n<p class=\"nexus-h6\">Breadcrumb with Icons</p>\n<nexus-breadcrumb>\n  <nexus-breadcrumb-item>\n    <nexus-icon src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"sm\"></nexus-icon>\n    Breadcrumb 1\n  </nexus-breadcrumb-item>\n  <nexus-breadcrumb-item>\n    <nexus-icon src=\"./assets/icons/action/ic_settings_24px.svg\" size=\"sm\"></nexus-icon>\n    Breadcrumb 2\n  </nexus-breadcrumb-item>\n  <nexus-breadcrumb-item>\n    <nexus-icon src=\"./assets/icons/action/ic_account_balance_24px.svg\" size=\"sm\"></nexus-icon>\n    Breadcrumb 3\n  </nexus-breadcrumb-item>\n</nexus-breadcrumb>\n\n<p class=\"nexus-h6\">BreadcrumbItem disabled</p>\n<nexus-breadcrumb>\n  <nexus-breadcrumb-item disabled><a href=\"javascript:void(0)\" target=\"_blank\">Breadcrumb 1</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 2</a></nexus-breadcrumb-item>\n  <nexus-breadcrumb-item><a href=\"javascript:void(0)\">Breadcrumb 3</a></nexus-breadcrumb-item>\n</nexus-breadcrumb>\n"
        },
        {
            "name": "BreadcrumbWithIconComponent",
            "id": "component-BreadcrumbWithIconComponent-b2b80e4e428faf459a1fa7c37da2ef6ebdea2d2fff52daf0ae648afc2e3e6e3f293347bb222fff9bfb7275b8b2ac021c05cc36ccfcf2e789bed5c9a878d28731",
            "file": "src/app/sb/components/breadcrumb/02_breadcrumbWithIcon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb-with-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_breadcrumbWithIcon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumb-with-icon',\n  templateUrl: './02_breadcrumbWithIcon.component.html'\n})\nexport default class BreadcrumbWithIconComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xl-11\">\n        <div class=\"nexus-center-xs nexus-pt-5\">\n            <nexus-breadcrumb>\n                <nexus-breadcrumb-item>\n                    <nexus-icon src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"sm\"></nexus-icon>\n                    Breadcrumb 1\n                </nexus-breadcrumb-item>\n                <nexus-breadcrumb-item>\n                    <nexus-icon src=\"./assets/icons/action/ic_settings_24px.svg\" size=\"sm\"></nexus-icon>\n                    Breadcrumb 2\n                </nexus-breadcrumb-item>\n                <nexus-breadcrumb-item>\n                    <nexus-icon src=\"./assets/icons/action/ic_account_balance_24px.svg\" size=\"sm\"></nexus-icon>\n                    Breadcrumb 3\n                </nexus-breadcrumb-item>\n            </nexus-breadcrumb>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e526e0b1c582dfd8944b3bda2c14cfa2bc039b61ecb2010f85fe79fe0de6adfb333fef1381a5a8a7431838149fd08a35560586cabfda428f5926117376301b1a",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "children",
                    "defaultValue": "'Click Me!'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "classNames",
                    "defaultValue": "'nexus-btn'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n  @Input() classNames: string = 'nexus-btn';\n\n  @Input() children: string = 'Click Me!';\n\n  @Input() disabled: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button data-testid=\"btnButton\" [ngClass]=\"classNames\" [disabled]=\"disabled\">{{ children }}</button>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8a93dc412a335db2baa03c1ad95f30471b6b813f4c30ae91a62ad0842c2d7364347ba7efba52eef3d2e47641e9e55a7b0d5d4c3651416cf29e47b3c847f4bc33-1",
            "file": "src/app/sb/components/button/01_button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "children",
                    "defaultValue": "button.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "classNames",
                    "defaultValue": "'nexus-btn'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { button } from '../../constants';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './01_button.component.html'\n})\nexport default class ButtonComponent {\n  @Input() classNames: string = 'nexus-btn';\n\n  @Input() children = button.text;\n\n  @Input() disabled: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <button data-testid=\"btnButton\" [ngClass]=\"classNames\" [disabled]=\"disabled\">{{ children }}</button>\n</div>"
        },
        {
            "name": "ButtonExamplesComponent",
            "id": "component-ButtonExamplesComponent-a9d8237651e785e102ea527e67d44d78428cf586f9e52348c2efcc2c15463f65394e72037a007e43ce61114d2d88c576430ba8fdb59e646cd728a43bbfd7a642",
            "file": "src/app/components/button-examples/button-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-examples",
            "styleUrls": [
                "./button-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-button-examples',\n  templateUrl: './button-examples.component.html',\n  styleUrls: ['./button-examples.component.scss']\n})\nexport class ButtonExamplesComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./button-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>\n  <span class=\"nexus-h5\">NOTE:</span>\n  <span>\n    The absence of the <strong>type</strong> attribute on a <strong>&lt;button&gt;</strong> defaults to\n    <strong>submit</strong> (which will auto-submit a form on click).\n  </span>\n  <span>\n    [Instead use <strong>type=&quot;button&quot;</strong> if you want to control the submit of the <strong>form</strong>.]\n  </span>\n</p>\n<br/>\n<br/>\n\n<p class=\"nexus-h5\">Variants</p>\n\n<button data-testid=\"btnVariantDefault\" class=\"nexus-btn\">Default</button>\n<button data-testid=\"btnVariantPrimary\" class=\"nexus-btn-primary\" style=\"margin: 0 4px;\">Primary</button>\n<button data-testid=\"btnVariantWarn\" class=\"nexus-btn-warn\">Warn</button>\n<a href=\"?buttonExamples#\" class=\"nexus-link\" style=\"margin: 0 4px;\">Link</a>\n\n<p class=\"nexus-h5\">Size</p>\n\n<button data-testid=\"btnSzMed\" class=\"nexus-btn nexus-btn-medium\">Medium</button>\n<br/>\n<br/>\n<button data-testid=\"btnSzLar\" class=\"nexus-btn nexus-btn-large\">Large</button>\n<br/>\n<br/>\n<button data-testid=\"btnSzFlu\" class=\"nexus-btn nexus-btn-fluid\">Fluid</button>\n\n<p data-testid=\"btnDisabled\" class=\"nexus-h5\">Disabled</p>\n\n<button class=\"nexus-btn nexus-btn-large\" disabled>Disabled</button>\n\n<p class=\"nexus-h5\">Icon Button</p>\n\n<button data-testid=\"btnGear\" class=\"nexus-btn-icon\">\n  <nexus-icon src=\"./assets/icons/action/ic_settings_24px.svg\"></nexus-icon>\n  <span class=\"nexus-visually-hidden\">Settings</span>\n</button>\n\n\n<p class=\"nexus-h5\">Floating Action Button</p>\n\n<button data-testid=\"btnFloatingAct\" class=\"nexus-fab\">\n  <nexus-icon src=\"./assets/icons/action/ic_settings_24px.svg\"></nexus-icon>\n  <span class=\"nexus-visually-hidden\">Settings</span>\n</button>\n\n<p class=\"nexus-h5\">Dark Theme</p>\n\n<div data-testid=\"divDT\" class=\"nexus-theme-dark\" style=\"padding: 1em\">\n  <button data-testid=\"btnDTdefault\" class=\"nexus-btn\">Default</button>\n  <button data-testid=\"btnDTprimary\" class=\"nexus-btn-primary\" style=\"margin: 0 4px;\">Primary</button>\n  <a href=\"?buttonExamples#\" data-testid=\"btnDTlink\" class=\"nexus-link\">Link</a>\n</div>\n"
        },
        {
            "name": "ButtonOverlayComponent",
            "id": "component-ButtonOverlayComponent-7e0ac240277c02bca6c5a7d003504c4d6ae8537b9466b58c958f71294855dbdc0050635226ff87f455196cee77438276f1fc249fee655ae00de2cb69a2092e7e",
            "file": "src/app/sb/components/badge/03_buttonOverlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-overlay",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_buttonOverlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "label",
                    "defaultValue": "buttonOverlay.label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "text",
                    "defaultValue": "buttonOverlay.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { buttonOverlay } from '../../constants';\n\n@Component({\n  selector: 'app-button-overlay',\n  templateUrl: './03_buttonOverlay.component.html',\n  styleUrls: []\n})\nexport default class ButtonOverlayComponent {\n  text = buttonOverlay.text;\n\n  label = buttonOverlay.label;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-mt-5 nexus-center-xs\">\n  <button class=\"nexus-btn\">\n    {{text}}\n    <nexus-badge overlap=\"true\">{{label}}</nexus-badge>\n  </button>\n</div>\n\n"
        },
        {
            "name": "ButtonSizeComponent",
            "id": "component-ButtonSizeComponent-d11d13e61a550522f65821b99f24c0ad3bb6276289aed4ea703e32f1fba78866d6d0b9e1983042c5e4081c4539b7b507064af7144b680fcd688a561021b17643",
            "file": "src/app/sb/components/toggle/06_buttonSize.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-size",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./06_buttonSize.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "size",
                    "defaultValue": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { size } from '../../constants';\n\n@Component({\n  selector: 'app-button-size',\n  templateUrl: './06_buttonSize.component.html'\n})\nexport default class ButtonSizeComponent {\n  size = size;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.xs}}</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"xs\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.sm}}</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.md}}</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"md\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.lg}}</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"lg\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.xl}}</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"xl\"></nexus-toggle>\n    </div>\n</div>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-aa8282fba41983ce118ad79d4e2c7d5f055256d8f05d87f9363c40cdfc26403f26c0d286571b6250b8df9b402a07e237fb76e513a62dd52e973dc3b27c5f8915",
            "file": "src/app/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bgImage",
                    "defaultValue": "'./assets/images/card-header-image.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent {\n  @Input() bgColor: string = '';\n\n  @Input() bgImage: string = './assets/images/card-header-image.png';\n\n  @Input() clickable: boolean = false;\n\n  @Input() height: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n  <div class=\"nexus-col-xs-6\">\n    <nexus-card [bgColor]=\"bgColor\" [clickable]=\"clickable\" [height]=\"height\">\n      <nexus-card-avatar>\n        <img [src]=\"bgImage === '' ? './assets/images/card-header-image.png':bgImage\" alt=\"Michael Bay\" />\n      </nexus-card-avatar>\n      <nexus-card-header>\n        <nexus-card-header-title>Michael Bay</nexus-card-header-title>\n        <nexus-card-header-subtitle>User Profile Card</nexus-card-header-subtitle>\n        <nexus-card-header-details>Last login: 02.20.21</nexus-card-header-details>\n        <nexus-card-header-button>\n          <button class=\"nexus-btn-icon\" id=\"btn\" title=\"btn\">\n            <nexus-icon src=\"./assets/icons/navigation/ic_more_horiz_24px.svg\"></nexus-icon>\n          </button>\n        </nexus-card-header-button>\n      </nexus-card-header>\n      <nexus-card-footer>\n        <button class=\"nexus-btn-primary nexus-btn-medium\">View Profile</button>\n        <button class=\"nexus-btn nexus-btn-medium\">Contact User</button>\n      </nexus-card-footer>\n    </nexus-card>\n  </div>\n</div>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-69e2ec367b60818c916a415f91ba6bb3b80446ac20ba49c09bce96c7147ec9c3319e6e0c2687113fa76d17474dfb962251cd289d1dbff20fd9e3125497f8370f-1",
            "file": "src/app/sb/components/card/01_card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bgImage",
                    "defaultValue": "DefaultCard.profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultCard",
                    "defaultValue": "DefaultCard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DefaultCard } from '../../constants';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './01_card.component.html'\n})\nexport default class CardComponent {\n  @Input() bgColor: string = '';\n\n  @Input() bgImage: string = DefaultCard.profile;\n\n  @Input() clickable: boolean = false;\n\n  @Input() height: string = '';\n\n  defaultCard = DefaultCard;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CardComponent-1",
            "templateData": "<div class=\"nexus-row nexus-center-xs nexus-mt-2\">\n    <div class=\"nexus-col-xs-6\">\n      <nexus-card [bgColor]=\"bgColor\" [clickable]=\"clickable\" [height]=\"height\">\n        <nexus-card-avatar>\n          <img [src]=\"bgImage === '' ? './assets/images/card-header-image.png':bgImage\" [alt]=\"defaultCard.name\" />\n        </nexus-card-avatar>\n        <nexus-card-header>\n          <nexus-card-header-title>{{defaultCard.name}}</nexus-card-header-title>\n          <nexus-card-header-subtitle>{{defaultCard.cardTitle}}</nexus-card-header-subtitle>\n          <nexus-card-header-details>{{defaultCard.lastLogin}}</nexus-card-header-details>\n          <nexus-card-header-button>\n            <button class=\"nexus-btn-icon\" id=\"btn\" title=\"btn\">\n              <nexus-icon [src]=\"defaultCard.src\"></nexus-icon>\n            </button>\n          </nexus-card-header-button>\n        </nexus-card-header>\n        <nexus-card-footer>\n          <button class=\"nexus-btn-primary nexus-btn-medium\">{{defaultCard.viewProfile}}</button>\n          <button class=\"nexus-btn nexus-btn-medium\">{{defaultCard.userProfile}}</button>\n        </nexus-card-footer>\n      </nexus-card>\n    </div>\n  </div>"
        },
        {
            "name": "CardExamplesComponent",
            "id": "component-CardExamplesComponent-6cab959fc9c1d2b38c9604046b598b8078a46ad191e12033919e3807fc7d85493acfd009c21aaeadcf7b48b2282f9411f17b457d379c957ca141f89839b7facc",
            "file": "src/app/components/card-examples/card-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-examples",
            "styleUrls": [
                "./card-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card-examples',\n  templateUrl: './card-examples.component.html',\n  styleUrls: ['./card-examples.component.scss']\n})\nexport class CardExamplesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./card-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Body with image</p>\n\n<div class=\"nexus-row\">\n  <div class=\"nexus-col-xs-4 nexus-col-sm-2 nexus-col-md-4 nexus-col-lg-4 nexus-col-xl-3 \">\n    <nexus-card>\n      <nexus-card-body>\n        <nexus-card-body-image>\n          <img src=\"./assets/images/card-image.jpg\" alt=\"Alt Text\" />\n        </nexus-card-body-image>\n        <p class=\"nexus-caption-copy nexus-rhythm-4\">This is a caption of the image attached</p>\n        <h2 class=\"nexus-h5\">This is a card with some text and images in it.</h2>\n        <p>The monkey-rope is found in all whalers; but it was only in the Pequod that the monkey and his holder were ever tied together. This improvement upon the original usage was introduced by no less a man than Stubb.</p>\n      </nexus-card-body>\n      <nexus-card-footer>\n        <button class=\"nexus-btn-primary nexus-btn-medium\">More Info</button>\n        <button class=\"nexus-link\">Dismiss</button>\n      </nexus-card-footer>\n    </nexus-card>\n  </div>\n</div>\n\n<p class=\"nexus-h5\">BG color</p>\n\n<div class=\"nexus-row\">\n  <div class=\"nexus-col-xs-4 nexus-col-sm-2 nexus-col-md-4 nexus-col-lg-4 nexus-col-xl-3 \">\n    <nexus-card bg-color=\"#BACAF7\" clickable=\"true\" height=\"316px\">\n      <nexus-card-body>\n        <h2 class=\"nexus-overline nexus-rhythm-1\">Suggested Offer</h2>\n        <h3 class=\"nexus-h4 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy with your credit card</h3>\n      </nexus-card-body>\n      <nexus-card-footer>\n        <a href=\"javascript:void(0)\" class=\"nexus-btn nexus-btn-fluid\">Enroll</a>\n      </nexus-card-footer>\n    </nexus-card>\n  </div>\n</div>\n\n<p class=\"nexus-h5\">Full BG image</p>\n\n<div class=\"nexus-row\">\n  <div class=\"nexus-col-xs-4 nexus-col-sm-2 nexus-col-md-4 nexus-col-lg-4 nexus-col-xl-3 \">\n    <nexus-card bg-image=\"./assets/images/card-bg-image.jpg\" height=\"316px\" clickable=\"true\">\n      <a href=\"javascript:void(0)\" class=\"nexus-visually-hidden\">Read More</a>\n      <nexus-card-body>\n        <h2 class=\"nexus-overline nexus-rhythm-1\">Next Step</h2>\n        <h3 class=\"nexus-h6 nexus-rhythm-1\">Explore our retirement toolkit that was designed by trusted financial advisors.</h3>\n      </nexus-card-body>\n    </nexus-card>\n  </div>\n</div>\n"
        },
        {
            "name": "CardInsideAccordionComponent",
            "id": "component-CardInsideAccordionComponent-02f81b4333bcbe6bf84412267b70842b343cbef85cac4435abd67a95a9d5e79bab61bd0da753cf35f6cb1c7c8117c72dffc77ae2e013647e8ba86e34ebda0a9f",
            "file": "src/app/sb/components/accordion/03_cardInsideAccordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-inside-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_cardInsideAccordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "cardInsideAccordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { cardInsideAccordion } from '../../constants';\n\n@Component({\n  selector: 'app-card-inside-accordion',\n  templateUrl: './03_cardInsideAccordion.component.html'\n})\nexport default class CardInsideAccordionComponent {\n  @Input() open: boolean = false;\n\n  data = cardInsideAccordion;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-accordion [open]=\"open\" (toggleEvent)=\"open = !open\" size=\"md\">\n    <nexus-accordion-trigger>\n        <h1 class=\"nexus-body\">{{data.show}}</h1>\n    </nexus-accordion-trigger>\n    <nexus-accordion-content>\n        <nexus-card bgColor=\"bgColor\" height=\"height\">\n            <nexus-card-avatar>\n                <img [src]=\"data.avatar\" [alt]=\"data.name\" />\n            </nexus-card-avatar>\n            <nexus-card-header>\n                <nexus-card-header-title>{{data.name}}</nexus-card-header-title>\n                <nexus-card-header-subtitle>{{data.profession}}</nexus-card-header-subtitle>\n                <nexus-card-header-subtitle>{{data.education}}</nexus-card-header-subtitle>\n                <nexus-card-header-details>{{data.lastLogin}}</nexus-card-header-details>\n                <nexus-card-header-button style=\"display:block\">\n                    <div class=\"nexus-row\" style=\"margin-bottom:5px\">\n                        <button class=\" nexus-btn-primary nexus-btn-medium\">{{data.viewProfile}}</button>\n                    </div>\n                    <div class=\"nexus-row\">\n                        <button class=\"nexus-btn nexus-btn-medium\">{{data.contactUser}}</button>\n                    </div>\n                </nexus-card-header-button>\n            </nexus-card-header>\n            <nexus-card-footer>\n            </nexus-card-footer>\n        </nexus-card>\n    </nexus-accordion-content>\n</nexus-accordion>"
        },
        {
            "name": "CardWithBackgroundColorComponent",
            "id": "component-CardWithBackgroundColorComponent-4ab9c1ba1c6250c5560db3792935524832f127b8c7854f41647a6e74c454ff6a9ba93ccdec83b90970ae61002b69c724130c65299d27976e11aaa54a4a31915c",
            "file": "src/app/sb/components/card/02_backgroundColor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-bg-color",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_backgroundColor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "BackgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BackgroundColor } from '../../constants';\n\n@Component({\n  selector: 'app-card-with-bg-color',\n  templateUrl: './02_backgroundColor.component.html'\n})\nexport default class CardWithBackgroundColorComponent {\n  backgroundColor = BackgroundColor;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xs-6 nexus-col-sm-6 nexus-col-md-6 nexus-col-lg-6 nexus-col-xl-6\">\n        <nexus-card bg-color=\"#BACAF7\" clickable=\"true\" height=\"316px\">\n            <nexus-card-body>\n                <h2 class=\"nexus-overline nexus-rhythm-1\">{{backgroundColor.suggestedOffer}}</h2>\n                <h3 class=\"nexus-h4 nexus-rhythm-1\">{{backgroundColor.offerDetail}}</h3>\n            </nexus-card-body>\n            <nexus-card-footer>\n                <a href=\"javascript:void(0)\" class=\"nexus-btn nexus-btn-fluid\">{{backgroundColor.enroll}}</a>\n            </nexus-card-footer>\n        </nexus-card>\n    </div>\n</div>"
        },
        {
            "name": "CardWithFullBackgroundImageComponent",
            "id": "component-CardWithFullBackgroundImageComponent-d6fdadaed08b5cfe27efee917b035b1605e7e82892c19a5733c9a334a51fad2ff7d082d7077fbf0e05b44f7708456e45647bb8270315e0827952f46ac87b4192",
            "file": "src/app/sb/components/card/03_fullBackgroundImage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-bg-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_fullBackgroundImage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fullbackground",
                    "defaultValue": "FullBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FullBackground } from '../../constants';\n\n@Component({\n  selector: 'app-card-with-bg-image',\n  templateUrl: './03_fullBackgroundImage.component.html'\n})\nexport default class CardWithFullBackgroundImageComponent {\n  fullbackground = FullBackground;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xs-6 nexus-col-sm-6 nexus-col-md-6 nexus-col-lg-6 nexus-col-xl-6\">\n        <nexus-card [bgImage]=\"fullbackground.cardBgImage\" height=\"316px\" clickable=\"true\">\n            <a href=\"javascript:void(0)\" class=\"nexus-visually-hidden\">{{fullbackground.readMore}}</a>\n            <nexus-card-body>\n                <h2 class=\"nexus-overline nexus-rhythm-1\">{{fullbackground.nextStep}}</h2>\n                <h3 class=\"nexus-h6 nexus-rhythm-1\">{{fullbackground.detail}}</h3>\n            </nexus-card-body>\n        </nexus-card>\n    </div>\n</div>"
        },
        {
            "name": "CardWithImageOnBodyComponent",
            "id": "component-CardWithImageOnBodyComponent-49e7974274f8cf3c8d002faefe9e5dd17ae33653854a5b399c5530b00bfbc569697b027052c82a408ea20383583a1dd3eebe83fc9f655f3a844194968a03b767",
            "file": "src/app/sb/components/card/04_bodyWithImage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-body-bg-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_bodyWithImage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bodyWithImage",
                    "defaultValue": "BodyWithImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { BodyWithImage } from '../../constants';\n\n@Component({\n  selector: 'app-card-with-body-bg-image',\n  templateUrl: './04_bodyWithImage.component.html'\n})\nexport default class CardWithImageOnBodyComponent {\n  bodyWithImage = BodyWithImage;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xs-6 nexus-col-sm-6 nexus-col-md-6 nexus-col-lg-6 nexus-col-xl-6\">\n        <nexus-card>\n            <nexus-card-body>\n                <nexus-card-body-image>\n                    <img [src]=\"bodyWithImage.bgImage\" alt=\"Alt Text\" />\n                </nexus-card-body-image>\n                <p class=\"nexus-caption-copy nexus-rhythm-4\">{{bodyWithImage.caption}}</p>\n                <h2 class=\"nexus-h5\">{{bodyWithImage.subTitle}}</h2>\n                <p>{{bodyWithImage.detail}}</p>\n            </nexus-card-body>\n            <nexus-card-footer>\n                <button class=\"nexus-btn-primary nexus-btn-medium\">{{bodyWithImage.moreInfo}}</button>\n                <button class=\"nexus-link\">{{bodyWithImage.dismiss}}</button>\n            </nexus-card-footer>\n        </nexus-card>\n    </div>\n</div>"
        },
        {
            "name": "CarouselComponent",
            "id": "component-CarouselComponent-f43e02fbd9a011c230bfd0964a01bc7eeb1500c12a95e6c1a64fccb38debfae9b99a20b4a96a082dfa08859f4df2ed7aea80cb58764d39de9f958c60401052c3",
            "file": "src/app/components/carousel/carousel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-carousel",
            "styleUrls": [
                "./carousel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./carousel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[\n    {\n      slidesToShow: 1,\n      overlapSize: 60\n    },\n    {\n      breakpoint: 768,\n      slidesToShow: 2,\n      overlapSize: 60\n    },\n    {\n      breakpoint: 1024,\n      slidesToShow: 3,\n      overlapSize: 60\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class CarouselComponent {\n  public options = [\n    {\n      slidesToShow: 1,\n      overlapSize: 60\n    },\n    {\n      breakpoint: 768,\n      slidesToShow: 2,\n      overlapSize: 60\n    },\n    {\n      breakpoint: 1024,\n      slidesToShow: 3,\n      overlapSize: 60\n    }\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./carousel.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\n  <nexus-carousel [options]=\"options\">\n    <nexus-carousel-item>\n      <nexus-card bg-color=\"#FFA464\" clickable=\"true\" height=\"316px\">\n        <nexus-card-body>\n          <h2 class=\"nexus-overline nexus-rhythm-1\">Whenever you need</h2>\n          <h3 class=\"nexus-h6 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy with your credit card</h3>\n        </nexus-card-body>\n        <nexus-card-footer>\n          <a href=\"javascript:void(0)\" class=\"nexus-btn nexus-btn-fluid\">Learn more</a>\n        </nexus-card-footer>\n      </nexus-card>\n    </nexus-carousel-item>\n    <nexus-carousel-item>\n      <nexus-card bg-image=\"./assets/images/card-bg-image.jpg\" height=\"316px\" clickable=\"true\">\n        <a href=\"javascript:void(0)\" class=\"nexus-visually-hidden\">Read More</a>\n        <nexus-card-body>\n          <h2 class=\"nexus-overline nexus-rhythm-1\">Next Step</h2>\n          <h3 class=\"nexus-h6 nexus-rhythm-1\">Explore our retirement toolkit that was designed by trusted financial advisors.</h3>\n        </nexus-card-body>\n      </nexus-card>\n    </nexus-carousel-item>\n    <nexus-carousel-item>\n      <nexus-card bg-color=\"#BACAF7\" clickable=\"true\" height=\"316px\">\n        <nexus-card-body>\n          <h2 class=\"nexus-overline nexus-rhythm-1\">Suggested Offer</h2>\n          <h3 class=\"nexus-h4 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy with your credit card</h3>\n        </nexus-card-body>\n        <nexus-card-footer>\n          <a href=\"javascript:void(0)\" class=\"nexus-btn nexus-btn-fluid\">Enroll</a>\n        </nexus-card-footer>\n      </nexus-card>\n    </nexus-carousel-item>\n    <nexus-carousel-item>\n      <nexus-card bg-image=\"./assets/images/card-bg-image-2.jpg\" clickable=\"true\" height=\"316px\">\n        <nexus-card-body class=\"nexus-theme-dark\">\n          <h2 class=\"nexus-overline nexus-rhythm-1\">Suggested Offer</h2>\n          <h3 class=\"nexus-h6 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy with your credit card</h3>\n        </nexus-card-body>\n      </nexus-card>\n    </nexus-carousel-item>\n  </nexus-carousel>\n</div>\n"
        },
        {
            "name": "CarouselComponent",
            "id": "component-CarouselComponent-2f60946a678358bd4f1d538106f37a21383a85d44bf0ae343f3477256a1521dd9cf14778157bf6198805bcbdc4bf5ac39bde24da84a1ea9a6fa4b79c8b3f9435-1",
            "file": "src/app/sb/components/carousel/01_carousel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-carousel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_carousel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "carouselOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { carouselOptions } from '../../constants';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './01_carousel.component.html'\n})\nexport default class CarouselComponent {\n  public options = carouselOptions;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CarouselComponent-1",
            "templateData": "<div style=\"margin: 10px\">\n    <nexus-carousel [options]=\"options\">\n        <nexus-carousel-item>\n            <nexus-card bg-color=\"#FFA464\" clickable=\"true\" height=\"316px\">\n                <nexus-card-body>\n                    <h2 class=\"nexus-overline nexus-rhythm-1\">Whenever you need</h2>\n                    <h3 class=\"nexus-h6 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy\n                        with your credit card</h3>\n                </nexus-card-body>\n                <nexus-card-footer>\n                    <a href=\"javascript:void(0)\" class=\"nexus-btn nexus-btn-fluid\">Learn more</a>\n                </nexus-card-footer>\n            </nexus-card>\n        </nexus-carousel-item>\n        <nexus-carousel-item>\n            <nexus-card bg-image=\"./assets/images/card-bg-image.jpg\" height=\"316px\" clickable=\"true\">\n                <a href=\"javascript:void(0)\" class=\"nexus-visually-hidden\">Read More</a>\n                <nexus-card-body>\n                    <h2 class=\"nexus-overline nexus-rhythm-1\">Next Step</h2>\n                    <h3 class=\"nexus-h6 nexus-rhythm-1\">Explore our retirement toolkit that was designed by trusted\n                        financial advisors.</h3>\n                </nexus-card-body>\n            </nexus-card>\n        </nexus-carousel-item>\n        <nexus-carousel-item>\n            <nexus-card bg-color=\"#BACAF7\" clickable=\"true\" height=\"316px\">\n                <nexus-card-body>\n                    <h2 class=\"nexus-overline nexus-rhythm-1\">Suggested Offer</h2>\n                    <h3 class=\"nexus-h4 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy\n                        with your credit card</h3>\n                </nexus-card-body>\n                <nexus-card-footer>\n                    <a href=\"javascript:void(0)\" class=\"nexus-btn nexus-btn-fluid\">Enroll</a>\n                </nexus-card-footer>\n            </nexus-card>\n        </nexus-carousel-item>\n        <nexus-carousel-item>\n            <nexus-card bg-image=\"./assets/images/card-bg-image-2.jpg\" clickable=\"true\" height=\"316px\">\n                <nexus-card-body class=\"nexus-theme-dark\">\n                    <h2 class=\"nexus-overline nexus-rhythm-1\">Suggested Offer</h2>\n                    <h3 class=\"nexus-h6 nexus-rhythm-1\">Earn 5% rewards when signing up for an online course in Udemy\n                        with your credit card</h3>\n                </nexus-card-body>\n            </nexus-card>\n        </nexus-carousel-item>\n    </nexus-carousel>\n</div>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-ac9d83683fb4640c87fba6aa18f5a8973dc35e2e4d23f09e93f8dd6a310eb19b5c13092049b92229c3f0f4428eb8aed9a41d9f5e3bedb14569649fd1cdf36924",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  @Input() text: string;\n\n  @Input() attrId: string = '';\n\n  @Input() checked: boolean = false;\n\n  @Input() disabled: boolean = false;\n\n  @Input() indeterminate: boolean = false;\n\n  @Input() required: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-checkbox [attrId]=\"attrId\" [checked]=\"checked\" [disabled]=\"disabled\" [indeterminate]=\"indeterminate\"\n  >Check me!</nexus-checkbox\n>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-ae0097a8a9a4d7e08267a37f0afb3096c8ba9bf629fa4085b28f2556688612a24ecd42c29f9c965fd87f8d097b8f26559fc79c60582157d0c274ba42e83d2f54-1",
            "file": "src/app/sb/components/checkbox/01_checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "checkBox.checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "checkBox.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "checkBox.indeterminate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "attrId",
                    "defaultValue": "checkBox.attrId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "required",
                    "defaultValue": "checkBox.required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "text",
                    "defaultValue": "checkBox.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nimport { checkBox } from '../../constants';\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './01_checkbox.component.html'\n})\nexport default class CheckboxComponent {\n  @Input() disabled = checkBox.disabled;\n\n  @Input() checked = checkBox.checked;\n\n  @Input() indeterminate = checkBox.indeterminate;\n\n  text = checkBox.text;\n\n  attrId = checkBox.attrId;\n\n  required = checkBox.required;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CheckboxComponent-1",
            "templateData": "<nexus-checkbox [attrId]=\"attrId\" [checked]=\"checked\" [disabled]=\"disabled\" [indeterminate]=\"indeterminate\"\n  >{{text}}</nexus-checkbox\n>\n"
        },
        {
            "name": "CheckboxExamplesComponent",
            "id": "component-CheckboxExamplesComponent-76981412c93ed0eb0528bf0f44acbc2893bd8cb549d97bddf6efb0a40a564f1095ffbb24a1e14cecba27b5352c5dd5a1b937288c45d029c535ee294ef6d32141",
            "file": "src/app/components/checkbox-examples/checkbox-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-examples",
            "styleUrls": [
                "./checkbox-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkedValue",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "disabledValue",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "indeterminateValue",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox-examples',\n  templateUrl: './checkbox-examples.component.html',\n  styleUrls: ['./checkbox-examples.component.scss']\n})\nexport class CheckboxExamplesComponent {\n  checkedValue = new FormControl(false);\n\n  indeterminateValue = new FormControl(false);\n\n  disabledValue = new FormControl(false);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./checkbox-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Checkbox configuration:</p>\n\n<nexus-checkbox data-testid=\"Check\" ngDefaultControl [formControl]=\"checkedValue\" class=\"nexus-rhythm-2\">Check</nexus-checkbox>\n<nexus-checkbox data-testid=\"Indeterminate\" ngDefaultControl [formControl]=\"indeterminateValue\" class=\"nexus-rhythm-2\">Indeterminate</nexus-checkbox>\n<nexus-checkbox data-testid=\"Disabled\" ngDefaultControl [formControl]=\"disabledValue\" class=\"nexus-rhythm-2\">Disabled</nexus-checkbox>\n\n<p class=\"nexus-h5\">Example:</p>\n\n<nexus-checkbox id=\"example\"\n  [checked]=\"checkedValue.value\"\n  [indeterminate]=\"indeterminateValue.value\"\n  [disabled]=\"disabledValue.value\"\n>\n  Example\n</nexus-checkbox>\n"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-121977ab4bba8770b68b797a11ff58a42c65e1d2969f4bb972119c4a90df98df73d39fc56299fce39b7b30db8d297c095d02136dd84826d0d7ab7985c40ece1a",
            "file": "src/app/components/chip/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "removable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "'Chip Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-chip',\n  templateUrl: './chip.component.html',\n  styleUrls: ['./chip.component.scss']\n})\nexport class ChipComponent {\n  @Input() disabled: boolean = false;\n\n  @Input() removable: boolean = false;\n\n  @Input() success: boolean = false;\n\n  @Input() error: boolean = false;\n\n  @Input() text: string = 'Chip Text';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-chip data-testid=\"chipChip\" [disabled]=\"disabled\" [removable]=\"removable\" [error]=\"error\" [success]=\"success\">\n  {{ text }}\n</nexus-chip>\n"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-e17b0114a56a05068a8e6ad4a7d5441bf541286d7390ad0eb8c3b5ecea991f28e4a4ab6ccafc7d9df2601d4a8ebbffcd5ced0b8c7c6e194d8a1e9d8ab0d13fdb-1",
            "file": "src/app/sb/components/chip/01_chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "removable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "defaultChip.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { chip as defaultChip } from '../../constants';\n\n@Component({\n  selector: 'app-chip',\n  templateUrl: './01_chip.component.html'\n})\nexport default class ChipComponent {\n  @Input() disabled: boolean = false;\n\n  @Input() removable: boolean = false;\n\n  @Input() success: boolean = false;\n\n  @Input() error: boolean = false;\n\n  @Input() text: string = defaultChip.text;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ChipComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row nexus-around-xs\">\n    <nexus-chip data-testid=\"chipChip\" [disabled]=\"disabled\" [removable]=\"removable\" [error]=\"error\"\n        [success]=\"success\"> {{ text }} </nexus-chip>\n    </div>\n</div>"
        },
        {
            "name": "ChipExamplesComponent",
            "id": "component-ChipExamplesComponent-8f398763bfbbca25d9a30f37c3499d5e0b12b162d5ad3f25a7320ec6f6c780bf4b5e833b396575e3b2ca1f6d53ae3a24068873bec92694037a13ba53993d150b",
            "file": "src/app/components/chip-examples/chip-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-examples",
            "styleUrls": [
                "./chip-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "triggerRemovableClickCall",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-chip-examples',\n  templateUrl: './chip-examples.component.html',\n  styleUrls: ['./chip-examples.component.scss']\n})\nexport class ChipExamplesComponent {\n  triggerRemovableClickCall = () => {};\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./chip-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Disabled</p>\n<nexus-chip data-testid=\"chipDsabl\" disabled=\"true\">Chip text</nexus-chip>\n\n<p class=\"nexus-h5\">Removable</p>\n<nexus-chip data-testid=\"chipRemvbl\" removable=\"true\" (triggerRemovableClick)=\"triggerRemovableClickCall()\">Chip text</nexus-chip>\n\n<p class=\"nexus-h5\">Success</p>\n<nexus-chip data-testid=\"chipSuccess\" success=\"true\">Chip text</nexus-chip>\n\n<p class=\"nexus-h5\">Chip Group</p>\n<p>Chips should normally be placed inside of the ChipGroup component. This wrapper provides styling so that the Chips will display inline with one another.</p>\n\n<nexus-chip-group><nexus-chip data-testid=\"chipGroup1\">Chip 1</nexus-chip><nexus-chip data-testid=\"chipGroup2\">Chip 2</nexus-chip><nexus-chip data-testid=\"chipGroup3\">Chip 3</nexus-chip></nexus-chip-group>\n\n<p class=\"nexus-h5\">Dark Theme</p>\n<div class=\"nexus-theme-dark\" style=\"padding: 1em\">\n  <nexus-chip data-testid=\"chipDT\" removable=\"true\">Chip text</nexus-chip>\n</div>\n"
        },
        {
            "name": "ChipGroupComponent",
            "id": "component-ChipGroupComponent-1ce2f6d4a1fd8c13cd618ec37183430b5544f3d24a669c7c009ec13eb25feb287aea76cdaba9c3e9fb89ea45d732c55793b18f812defff0afff921c0b35fc6da",
            "file": "src/app/components/chip-group/chip-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-group",
            "styleUrls": [
                "./chip-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-chip-group',\n  templateUrl: './chip-group.component.html',\n  styleUrls: ['./chip-group.component.scss']\n})\nexport class ChipGroupComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./chip-group.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-chip-group><nexus-chip>Chip 1</nexus-chip><nexus-chip>Chip 2</nexus-chip><nexus-chip>Chip 3</nexus-chip></nexus-chip-group>\n"
        },
        {
            "name": "ChipGroupComponent",
            "id": "component-ChipGroupComponent-91dc440c5d5284cfd4494aa4c4e7b21acd0703167869efce7ab6cd64486aa6f5fc1d4eaa439277295c933b48c395cbe476725af3c024063d5c7ea1279a7ed1a5-1",
            "file": "src/app/sb/components/chip/03_group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chipGroup",
                    "defaultValue": "chipGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { chipGroup } from '../../constants';\n\n@Component({\n  selector: 'app-chip-group',\n  templateUrl: './03_group.component.html'\n})\nexport default class ChipGroupComponent {\n  chipGroup = chipGroup;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ChipGroupComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row nexus-around-xs\">\n        <nexus-chip-group>\n            <nexus-chip data-testid=\"chipGroup1\">{{chipGroup.first}}</nexus-chip>\n            <nexus-chip data-testid=\"chipGroup2\">{{chipGroup.second}}</nexus-chip>\n            <nexus-chip data-testid=\"chipGroup3\">{{chipGroup.third}}</nexus-chip>\n        </nexus-chip-group>\n    </div>\n</div>"
        },
        {
            "name": "ChipOnDarkThemeComponent",
            "id": "component-ChipOnDarkThemeComponent-fd21c013390c640d1d21946e05d509d5cebbb4b0ca9351e12123454f861e1417bdb9e0364a1e3b3c6eefac2271cb4ee6a123833a9f7d5139ca23df61c9697041",
            "file": "src/app/sb/components/chip/05_darkTheme.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-dark-theme",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_darkTheme.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "darkTheme",
                    "defaultValue": "chipDarkTheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { chipDarkTheme } from '../../constants';\n\n@Component({\n  selector: 'app-chip-dark-theme',\n  templateUrl: './05_darkTheme.component.html'\n})\nexport default class ChipOnDarkThemeComponent {\n  darkTheme = chipDarkTheme;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-theme-dark\" style=\"padding: 1em\">\n    <nexus-chip data-testid=\"chipDT\" removable=\"true\">{{darkTheme.text}}</nexus-chip>\n</div>"
        },
        {
            "name": "ChipVariantComponent",
            "id": "component-ChipVariantComponent-d16000d14c4df900ec7d20fc56166eeed617752d4ab5a90b88a43afd0acce1a12e13967cda718195ca5cab6f99b440d5ba04676ec89e6e887ad4b78c07f2bbf4",
            "file": "src/app/sb/components/chip/02_variant.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-variant",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_variant.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chipVariant",
                    "defaultValue": "chipVariant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { chipVariant } from '../../constants';\n\n@Component({\n  selector: 'app-chip-variant',\n  templateUrl: './02_variant.component.html'\n})\nexport default class ChipVariantComponent {\n  chipVariant = chipVariant;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row nexus-around-xs\">\n        <nexus-chip-group>\n            <nexus-chip> {{chipVariant.default}} </nexus-chip>\n            <nexus-chip success> {{chipVariant.success}} </nexus-chip>\n            <nexus-chip disabled> {{chipVariant.disabled}} </nexus-chip>\n            <nexus-chip error> {{chipVariant.failure}} </nexus-chip>\n        </nexus-chip-group>\n    </div>\n</div>\n"
        },
        {
            "name": "ConfigurationComponent",
            "id": "component-ConfigurationComponent-9a3179afdc9e9b556fde1f1ee9b7d6cdec11de1da75b5cdbff8f3c532ca0dc9bc9ac5d5cb67f8e2f141fb6a5c44b6225493e404855f3f39d343a4a1be68c3fdb",
            "file": "src/app/sb/components/checkbox/02_setUp.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-configuration",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_setUp.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "check",
                    "defaultValue": "configuration.check",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "checkedValue",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "disabled",
                    "defaultValue": "configuration.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "disabledValue",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "example",
                    "defaultValue": "configuration.example",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "exampleTitle",
                    "defaultValue": "configuration.exampleTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "configuration.indeterminate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "indeterminateValue",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "text",
                    "defaultValue": "configuration.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { configuration } from '../../constants';\n@Component({\n  selector: 'app-checkbox-configuration',\n  templateUrl: './02_setUp.component.html'\n})\nexport default class ConfigurationComponent {\n  checkedValue = new FormControl(false);\n\n  indeterminateValue = new FormControl(false);\n\n  disabledValue = new FormControl(false);\n\n  check = configuration.check;\n\n  indeterminate = configuration.indeterminate;\n\n  disabled = configuration.disabled;\n\n  text = configuration.title;\n\n  example = configuration.example;\n\n  exampleTitle = configuration.exampleTitle;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">{{ text }}</p>\n\n<nexus-checkbox data-testid=\"Check\" ngDefaultControl [formControl]=\"checkedValue\" class=\"nexus-rhythm-2\">{{\n  check\n}}</nexus-checkbox>\n<nexus-checkbox\n  data-testid=\"Indeterminate\"\n  ngDefaultControl\n  [formControl]=\"indeterminateValue\"\n  class=\"nexus-rhythm-2\"\n  >{{ indeterminate }}</nexus-checkbox\n>\n<nexus-checkbox data-testid=\"Disabled\" ngDefaultControl [formControl]=\"disabledValue\" class=\"nexus-rhythm-2\">{{\n  disabled\n}}</nexus-checkbox>\n\n<p class=\"nexus-h5\">{{ exampleTitle }}</p>\n\n<nexus-checkbox\n  id=\"example\"\n  [checked]=\"checkedValue.value\"\n  [indeterminate]=\"indeterminateValue.value\"\n  [disabled]=\"disabledValue.value\"\n>\n  {{ example }}\n</nexus-checkbox>\n"
        },
        {
            "name": "CustomComponent",
            "id": "component-CustomComponent-c9df563d6d0275e1cb727eaa5180ffce80a273373603a934f51ec49a639dd319549533e44a1337f56477165f4548093d209856536ccc32d5605d315f6d5f5416",
            "file": "src/app/sb/components/select/02_custom.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_custom.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "delimiter",
                    "defaultValue": "'::'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "handleCloseEvent",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "handleSingleSelectData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "objectKeys",
                    "defaultValue": "Object.keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectOptions",
                    "defaultValue": "selectCustom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "setSingleSelectPlaceholder",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "singleSelectValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { selectCustom } from '../../constants';\n\n@Component({\n  selector: 'app-custom',\n  templateUrl: './02_custom.component.html'\n})\nexport default class CustomComponent implements OnInit {\n  selectOptions = selectCustom;\n\n  delimiter = '::';\n\n  objectKeys = Object.keys;\n\n  singleSelectValue = '';\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.singleSelectValue = this.setSingleSelectPlaceholder();\n  }\n\n  handleSingleSelectData = (eventData) => {\n    const updateSelectState = [...this.selectOptions];\n    updateSelectState.forEach((obj) => obj.isSelected = false);\n    const objIndex = updateSelectState.findIndex((obj) => obj.value === eventData.detail.key);\n    updateSelectState[objIndex].isSelected = true;\n    this.selectOptions = [...updateSelectState];\n    this.singleSelectValue = this.setSingleSelectPlaceholder();\n  };\n\n  setSingleSelectPlaceholder = () => this.selectOptions\n    .filter((el) => el.isSelected ? el.value : '')\n    .map((el) => el.value)\n    .join(this.delimiter);\n\n  handleCloseEvent = (_event) => { };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nexus-col-md-3\">\n    <nexus-form-field>\n        <nexus-label>Select an option Custom</nexus-label>\n        <nexus-select type=\"custom\" value=\"{{ singleSelectValue }}\" (triggerSelection)=\"handleSingleSelectData($event)\"\n            (closeEvent)=\"handleCloseEvent($event)\">\n            <nexus-option *ngFor=\"let element of selectOptions\" value=\"{{ element.value }}\"\n                selected=\"{{ element.isSelected }}\" [disabled]=\"element.disabled\">{{ element.value }}\n            </nexus-option>\n        </nexus-select>\n    </nexus-form-field>\n</div>"
        },
        {
            "name": "DarkThemeComponent",
            "id": "component-DarkThemeComponent-f2704dc80a5f67209a96421467fea3a695c11c4fae027650243618e5e9213946af5cc2a4eeddec5cbd0ec4a6c61ca45f308c94a4473498d8ef32c48a01cb8b17",
            "file": "src/app/sb/components/button/04_darkTheme.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-dark-theme",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_darkTheme.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "darkTheme",
                    "defaultValue": "darkTheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { darkTheme } from '../../constants';\n\n@Component({\n  selector: 'app-button-dark-theme',\n  templateUrl: './04_darkTheme.component.html'\n})\nexport default class DarkThemeComponent {\n  darkTheme = darkTheme;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row nexus-center-xs\">\n    <div class=\"nexus-col-xs-4 nexus-col-md-8\">\n        <div class=\"nexus-theme-dark nexus-pt-2 nexus-pb-2\">\n            <div class=\"nexus-row nexus-center-xs\">\n                <div class=\"nexus-col-xs-4 nexus-col-md-2 nexus-mt-2\">\n                    <button data-testid=\"button-theme-dark-default\" class=\"nexus-btn\">{{darkTheme.default}}</button>\n                </div>\n                <div class=\"nexus-col-xs-4 nexus-col-md-2 nexus-mt-2\">\n                    <button data-testid=\"button-theme-dark-primary\"\n                        class=\"nexus-btn nexus-btn-primary nexus-ml-2 nexus-mr-2\">{{darkTheme.primary}}</button>\n                </div>\n                <div class=\"nexus-col-xs-4 nexus-col-md-2 nexus-mt-2\">\n                    <button data-testid=\"button-theme-dark-primary\"\n                        class=\"nexus-btn nexus-btn-warn nexus-ml-2 nexus-mr-2\">{{darkTheme.warn}}</button>\n                </div>\n                <div class=\"nexus-col-xs-4 nexus-col-md-2 nexus-mt-3\">\n                    <a href=\"#\" data-testid=\"theme-dark-nexus-link\"\n                        class=\"nexus-link nexus-ml-2 nexus-mr-2\">{{darkTheme.link}}</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "DisableBreadcrumbItemComponent",
            "id": "component-DisableBreadcrumbItemComponent-26a556a15bea31ad64dcff9de475f76a88c1518e42019d7fdb3c4ec50f4020e29fe5d239f12ba2b5e90520585f3ead6e6721bceb0319a658c8d4d6831c515e46",
            "file": "src/app/sb/components/breadcrumb/03_disableBreadcrumbItem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-disabled-breadcrumb-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_disableBreadcrumbItem.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-disabled-breadcrumb-item',\n  templateUrl: './03_disableBreadcrumbItem.component.html'\n})\nexport default class DisableBreadcrumbItemComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xl-11\">\n        <div class=\"nexus-center-xs nexus-pt-5\">\n            <nexus-breadcrumb separator=\">\">\n                <nexus-breadcrumb-item disabled><a href=\"javascript:void(0)\"\n                    style=\"text-decoration: none; \">Home</a></nexus-breadcrumb-item>\n                <nexus-breadcrumb-item><a href=\"javascript:void(0)\"\n                    style=\"text-decoration: none; \">Library</a></nexus-breadcrumb-item>\n                <nexus-breadcrumb-item><a href=\"javascript:void(0)\"\n                    style=\"text-decoration: none; \">Academics</a></nexus-breadcrumb-item>\n            </nexus-breadcrumb>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "DisabledComponent",
            "id": "component-DisabledComponent-6d28ad38a85bffe8ff8127dc3b22b7caec2b6538d7319ae767bd3f8555ffb4aadc1c29ecaf8f04fa659c1db60338898e978fdb9b53c96452549adb15f7530a12",
            "file": "src/app/sb/components/button/05_disabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_disabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { disabled } from '../../constants';\n\n@Component({\n  selector: 'app-button-disabled',\n  templateUrl: './05_disabled.component.html'\n})\nexport default class DisabledComponent {\n  disabled = disabled;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <button data-testid=\"btnButton\" class=\"nexus-btn nexus-btn-primary nexus-btn-large\" disabled>{{disabled.text}}</button>\n</div>"
        },
        {
            "name": "DisabledSelectedComponent",
            "id": "component-DisabledSelectedComponent-a51e4c6048b16e09947b8340ab66f0699b5cc0bc885c86788f37999092aa1892419b6aa53a281c90c3780aa4edcb89bcb0e10e59a32b2fc861eb70c92e12e962",
            "file": "src/app/sb/components/radio/06_disabledSelected.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-disabled-selected",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./06_disabledSelected.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "radio.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabledSelected",
                    "defaultValue": "disabledSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { radio, disabledSelected } from '../../constants';\n\n@Component({\n  selector: 'app-disabled-selected',\n  templateUrl: './06_disabledSelected.component.html'\n})\nexport default class DisabledSelectedComponent {\n  @Input() name = radio.name;\n\n  @Input() disabled: boolean = true;\n\n  disabledSelected = disabledSelected;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row nexus-center-xs\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" checked=\"true\" [name]=\"name\" [disabled]=\"true\">\n            {{disabledSelected.first}}</nexus-radio>\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"true\">\n            {{disabledSelected.second}}</nexus-radio>\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"true\">\n            {{disabledSelected.third}}</nexus-radio>\n    </div>\n</div>"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-a639d404950d5123a25e995ccfd686b5831c1439201d2fed4b4f11b8a27647e2e8b530c460091a5029b47ab3c0ed5f65679d275a99cb3107df457dafd0c0fc9e",
            "file": "src/app/components/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html'\n})\nexport class DropdownComponent {\n  show = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p class=\"nexus-h6\">Basic Dopdown</p>\n\n<p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. A quas nam doloremque sint\n    <nexus-dropdown [show]=show id=\"dropdownId\" dropdown-type=\"basic\" placement=\"right\" height=\"150\" width=\"180\">\n    <nexus-icon (click)=\"show = !show\" slot=\"trigerer\" id=\"iconId\" src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"></nexus-icon>\n    <nexus-option label=\"Option 1\" value=\"Option1\">Option 1</nexus-option>\n    <nexus-option label=\"Option 2\" value=\"Option2\">Option 2</nexus-option>\n    <nexus-option label=\"Option 3\" value=\"Option3\">Option 3</nexus-option>\n</nexus-dropdown>\ndignissimos.</p>\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-c173292bfb0265fcf981118fa833392f509eebb9ee739da243d3d583acac2e813de5eae484ce283a64d349085d7a47dfa1d345f5157fc64387d718974abcbba4-1",
            "file": "src/app/sb/components/dropdown/01_dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdownType",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "150",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placement",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "180",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './01_dropdown.component.html'\n})\nexport default class DropdownComponent {\n  @Input() show: boolean = false;\n\n  @Input() placement: string = 'left';\n\n  @Input() dropdownType: string = 'basic';\n\n  @Input() height: number = 150;\n\n  @Input() width: number = 180;\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.show = false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DropdownComponent-1",
            "templateData": "<div class=\"nexus-center-xs\">\n  <nexus-dropdown\n    [show]=\"show\"\n    id=\"dropdownId\"\n    [dropdownType]=\"dropdownType\"\n    [placement]=\"placement\"\n    [height]=\"height\"\n    [width]=\"width\"\n  >\n    <nexus-icon\n      (click)=\"show = !show\"\n      slot=\"trigerer\"\n      id=\"iconId\"\n      src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"\n    ></nexus-icon>\n    <ul style=\"list-style-type: none\">\n      <li>Action 1</li>\n      <li>Action 2</li>\n      <li>Other Action</li>\n    </ul>\n  </nexus-dropdown>\n</div>\n"
        },
        {
            "name": "DropdownExamplesComponent",
            "id": "component-DropdownExamplesComponent-1efc6adfb0fd682c7a37e2828b49d05192f5974741a9e9a5ed00c22a3d3dcc246e7eb8f6a097a0821b1e5d10fceabffb089fb9c702a33bd06a53a7d56047f83e",
            "file": "src/app/components/dropdown-examples/dropdown-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dropdown-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown-examples',\n  templateUrl: './dropdown-examples.component.html'\n})\nexport class DropdownExamplesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "\n<p class=\"nexus-h6\">Basic Dopdown Examples</p>\n\n<p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. A quas nam doloremque sint\n    <nexus-dropdown #dropdown [show]=dropdown.show dropdown-type=\"basic\" placement=\"right\" height=\"150\" width=\"180\">\n        <nexus-icon (click)=\"dropdown.show = !dropdown.show\" slot=\"trigerelement\" src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"></nexus-icon>\n        <nexus-option label=\"Option 1\" value=\"Option1\">Option 1</nexus-option>\n        <nexus-option label=\"Option 2\" value=\"Option2\">Option 2</nexus-option>\n        <nexus-option label=\"Option 3\" value=\"Option3\">Option 3</nexus-option>\n    </nexus-dropdown>\ndignissimos.</p>\n\n<p>Lorem ipsum\n    <nexus-dropdown #dropdown2 [show]=dropdown2.show dropdown-type=\"basic\" placement=\"left\" height=\"150\" width=\"220\">\n        <nexus-icon (click)=\"dropdown2.show = !dropdown2.show\" slot=\"trigerelement\" src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"></nexus-icon>\n        <nexus-option label=\"Option 1\" value=\"Option1\">Option 1</nexus-option>\n        <nexus-option label=\"Option 2\" value=\"Option2\">Option 2</nexus-option>\n        <nexus-option label=\"Option 3\" value=\"Option3\">Option 3</nexus-option>\n    </nexus-dropdown>\ndolor sit amet consectetur, adipisicing elit. A quas nam doloremque sint dignissimos.</p>\n\n<p>Lorem ipsum dolor sit amet\n        <nexus-dropdown #dropdown3 [show]=dropdown3.show dropdown-type=\"basic\" placement=\"right\" height=\"150\" width=\"180\">\n        <nexus-icon (click)=\"dropdown3.show = !dropdown3.show\" slot=\"trigerelement\" src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"></nexus-icon>\n        <nexus-option label=\"Option 1\" value=\"Option1\">Option 1</nexus-option>\n        <nexus-option label=\"Option 2\" value=\"Option2\">Option 2</nexus-option>\n        <nexus-option label=\"Option 3\" value=\"Option3\">Option 3</nexus-option>\n        <nexus-option label=\"Option 4\" value=\"Option4\">Option 4</nexus-option>\n        <nexus-option label=\"Option 5\" value=\"Option5\">Option 5</nexus-option>\n        <nexus-option label=\"Option 6\" value=\"Option6\">Option 6</nexus-option>\n        <nexus-option label=\"Option 7\" value=\"Option7\">Option 7</nexus-option>\n    </nexus-dropdown>\nconsectetur, adipisicingelit. A quas nam doloremque sint dignissimos.</p>\n"
        },
        {
            "name": "EmailValidationComponent",
            "id": "component-EmailValidationComponent-da8fa28cc796aa55e2dd779ed4edacc4173c90428278fc86568deab02987a77f8edf4e71b19db1eefeb35ef116ca9cac25c42b2276cc0ed758d5b69bc751eb2a",
            "file": "src/app/sb/components/error-message/02_emailValidation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-message-email-validation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_emailValidation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "requiredText",
                    "defaultValue": "emailValidation.requiredText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "successText",
                    "defaultValue": "emailValidation.successText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "emailValidation.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "userData",
                    "defaultValue": "new FormGroup({\n    primaryEmail: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\n    ])\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "validText",
                    "defaultValue": "emailValidation.validText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { emailValidation } from '../../constants';\n\n@Component({\n  selector: 'app-error-message-email-validation',\n  templateUrl: './02_emailValidation.component.html'\n})\nexport default class EmailValidationComponent {\n  title = emailValidation.title;\n\n  requiredText = emailValidation.requiredText;\n\n  validText = emailValidation.validText;\n\n  successText = emailValidation.successText;\n\n  userData = new FormGroup({\n    primaryEmail: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\n    ])\n  });\n\n  get primEmail() {\n    return this.userData.get('primaryEmail');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "primEmail": {
                    "name": "primEmail",
                    "getSignature": {
                        "name": "primEmail",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                }
            },
            "templateData": "<div>\n  <nexus-form-field [formGroup]=\"userData\">\n    <p class=\"nexus-h6\">{{ title }}</p>\n\n    <div class=\"nexus-col-xs-4 nexus-col-md-3\">\n      <nexus-input type=\"email\" formControlName=\"primaryEmail\" placeholder=\"Enter Your Email\"></nexus-input>\n\n      <div *ngIf=\"(primEmail.invalid && primEmail.touched) || primEmail.dirty\">\n        <nexus-error-message *ngIf=\"primEmail.errors?.required\">\n          <nexus-chip error>{{ requiredText }}</nexus-chip></nexus-error-message\n        >\n        <nexus-error-message *ngIf=\"primEmail.errors?.pattern\" class=\"nexus-primary-text\">\n          <nexus-chip error>{{ validText }}</nexus-chip>\n        </nexus-error-message>\n        <p *ngIf=\"primEmail.valid\">\n          <nexus-chip success>{{ successText }}</nexus-chip>\n        </p>\n      </div>\n    </div>\n  </nexus-form-field>\n</div>\n"
        },
        {
            "name": "ErrorMessageComponent",
            "id": "component-ErrorMessageComponent-96321ceb374cea3244b53a92172c1509f9604f2db5bdbda9f6125c31de16ecc3c3cec6fa4ef48548e89d0738fbeb382292fcf28a58afb6a694150d8a691423b7",
            "file": "src/app/components/error-message/error-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-message",
            "styleUrls": [
                "./error-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.scss']\n})\nexport class ErrorMessageComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./error-message.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label data-testid=\"label-first-name\">First name</nexus-label>\n  <nexus-input data-testid=\"input-text-box\" value=\"\"></nexus-input>\n  <nexus-error-message data-testid=\"error-message\">Please enter a first name.</nexus-error-message>\n</nexus-form-field>\n"
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-07821dee128d2dedf5cc9dd6278b111b477b3ba381fc12b6c0b0f164a3b9ed69b70c59234c4bbf4d15ad03e81880793251c8777c21fa39b90d8e146e02302ae3",
            "file": "src/app/components/file-upload/file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-file-upload",
            "styleUrls": [
                "./file-upload.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./file-upload.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addToQueueUnique",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "handleChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleSubmit",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "queue",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeFile",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeUploadedFile",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploaded",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent {\n  @Input() attrId: String = '';\n\n  @Input() disabled: boolean = false;\n\n  @Input() multiple: boolean = false;\n\n  @Input() required: boolean = false;\n\n  public queue: any = [];\n\n  public uploaded: any = [];\n\n  public handleChange = (event) => {\n    this.queue = this.addToQueueUnique(this.queue, [...event.target.files]);\n  };\n\n  public handleSubmit = (event) => {\n    event.preventDefault();\n    const uploadURL = 'https://httpstat.us/200';\n    const formData = new FormData();\n    formData.append('files', this.queue);\n\n    // Fake API request that returns a 200\n    // Replace this with your API method\n    fetch(uploadURL, {\n      method: 'POST',\n      body: formData\n    })\n      .then((response) => response)\n      .then(() => {\n        const nextQueue = this.queue.map((file) => {\n          file.uploaded = true;\n\n          return file;\n        });\n\n        this.queue = [];\n        this.uploaded = this.addToQueueUnique(this.uploaded, nextQueue);\n      });\n  };\n\n  public removeFile = (removedFile) => {\n    this.queue = this.queue.filter((file) => file.name !== removedFile.name);\n  };\n\n  public removeUploadedFile = (removedFile) => {\n    this.uploaded = this.uploaded.filter((file) => file.name !== removedFile.name);\n  };\n\n  private readonly addToQueueUnique = (prevQueue, newFiles) => {\n    const ids = new Set(prevQueue.map((prevFile) => prevFile.name));\n\n    return [...prevQueue, ...newFiles.filter((newFile) => !ids.has(newFile.name))];\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./file-upload.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<form (submit)=\"handleSubmit($event)\">\n  <nexus-form-field>\n    <nexus-file-upload\n      [attrId]=\"attrId\"\n      [disabled]=\"disabled\"\n      [multiple]=\"multiple\"\n      [required]=\"required\"\n      (change)=\"handleChange($event)\"\n    >\n      <p>Drop File here or click to upload</p>\n      <p>Max file size is 25MB</p>\n    </nexus-file-upload>\n  </nexus-form-field>\n\n  <nexus-chip-group class=\"nexus-rhythm-4\" *ngIf=\"queue.length\">\n    <nexus-chip\n      *ngFor=\"let item of queue; trackBy: item?.name\"\n      removable\n      success=\"{{ item.uploaded || false }}\"\n      (click)=\"removeFile(item)\"\n    >\n      {{ item.name }}\n    </nexus-chip>\n  </nexus-chip-group>\n\n  <nexus-chip-group class=\"nexus-rhythm-4\" *ngIf=\"uploaded.length\">\n    <nexus-chip\n      *ngFor=\"let item of uploaded; trackBy: item?.name\"\n      removable\n      success=\"{{ item.uploaded || false }}\"\n      (click)=\"removeUploadedFile(item)\"\n    >\n      {{ item.name }}\n    </nexus-chip>\n  </nexus-chip-group>\n\n  <button type=\"submit\" class=\"nexus-btn-primary\">Upload</button>\n</form>\n"
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-cb93516562572445e045ab3079b244ceb16779ac6a27e9e9273cfc6a5fff598415ffa3bf13a1a8463e2323494177e48575936c4069d9f01fa4ba267bea343645-1",
            "file": "src/app/sb/components/file-upload/01_fileUpload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_fileUpload.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "attrId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addToQueueUnique",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "fileUpload",
                    "defaultValue": "fileUpload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "handleChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleSubmit",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "queue",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeFile",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeUploadedFile",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploaded",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { fileUpload } from '../../constants';\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './01_fileUpload.component.html'\n})\nexport default class FileUploadComponent {\n  @Input() accept: String = '';\n\n  @Input() attrId: String = '';\n\n  @Input() disabled: boolean = true;\n\n  @Input() multiple: boolean = false;\n\n  @Input() required: boolean = false;\n\n  fileUpload = fileUpload;\n\n  public queue: any = [];\n\n  public uploaded: any = [];\n\n  public handleChange = (event) => {\n    this.queue = this.addToQueueUnique(this.queue, [...event.target.files]);\n  };\n\n  public handleSubmit = (event) => {\n    event.preventDefault();\n    const uploadURL = 'https://httpstat.us/200';\n    const formData = new FormData();\n    formData.append('files', this.queue);\n\n    // Fake API request that returns a 200\n    // Replace this with your API method\n    fetch(uploadURL, {\n      method: 'POST',\n      body: formData\n    })\n      .then((response) => response)\n      .then(() => {\n        const nextQueue = this.queue.map((file) => {\n          file.uploaded = true;\n\n          return file;\n        });\n\n        this.queue = [];\n        this.uploaded = this.addToQueueUnique(this.uploaded, nextQueue);\n      });\n  };\n\n  public removeFile = (removedFile) => {\n    this.queue = this.queue.filter((file) => file.name !== removedFile.name);\n  };\n\n  public removeUploadedFile = (removedFile) => {\n    this.uploaded = this.uploaded.filter((file) => file.name !== removedFile.name);\n  };\n\n  private readonly addToQueueUnique = (prevQueue, newFiles) => {\n    const ids = new Set(prevQueue.map((prevFile) => prevFile.name));\n\n    return [...prevQueue, ...newFiles.filter((newFile) => !ids.has(newFile.name))];\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FileUploadComponent-1",
            "templateData": "<form (submit)=\"handleSubmit($event)\">\n  <nexus-form-field>\n    <nexus-file-upload [accept]=\"accept\" [attrId]=\"attrId\" [disabled]=\"disabled\" [multiple]=\"multiple\"\n      [required]=\"required\" (change)=\"handleChange($event)\">\n      <div [innerHTML]=\"fileUpload.content\"></div>\n    </nexus-file-upload>\n  </nexus-form-field>\n\n  <nexus-chip-group class=\"nexus-rhythm-4\" *ngIf=\"queue.length\">\n    <nexus-chip *ngFor=\"let item of queue; trackBy: item?.name\" removable success=\"{{ item.uploaded || false }}\"\n      (click)=\"removeFile(item)\">\n      {{ item.name }}\n    </nexus-chip>\n  </nexus-chip-group>\n\n  <nexus-chip-group class=\"nexus-rhythm-4\" *ngIf=\"uploaded.length\">\n    <nexus-chip *ngFor=\"let item of uploaded; trackBy: item?.name\" removable success=\"{{ item.uploaded || false }}\"\n      (click)=\"removeUploadedFile(item)\">\n      {{ item.name }}\n    </nexus-chip>\n  </nexus-chip-group>\n\n  <button type=\"submit\" class=\"nexus-btn-primary\">{{fileUpload.upload}}</button>\n</form>"
        },
        {
            "name": "FilterTableComponent",
            "id": "component-FilterTableComponent-95a179e751d4cd6fadfd80b82c18fa4573277dd1dbde8868d38f4653a709aa33d6da27cc311340da017f3423e26f2705778750b0dc0c00604d8908df0bc92f01",
            "file": "src/app/sb/components/search/02_filterTable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_filterTable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "filterTableConstants.colDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "debounce",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "filteredItem",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "filteredRowData",
                    "defaultValue": "filterTableConstants.rowData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "filterTableData",
                    "defaultValue": "filterTableConstants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "Items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "rowData",
                    "defaultValue": "filterTableConstants.rowData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "rowDataNew",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "setFilteredItemOnClickHandler",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "showHideDrawer",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "performFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDrawer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { filterTableConstants } from '../../constants';\n\n@Component({\n  selector: 'app-search-examples',\n  templateUrl: './02_filterTable.component.html'\n})\nexport default class FilterTableComponent implements OnInit {\n  debounce: any;\n\n  columnDefs: any = filterTableConstants.colDefs;\n\n  rowData: any = filterTableConstants.rowData;\n\n\n  Items: any = [];\n\n  filteredItem: any = [];\n\n  rowDataNew: any = [];\n\n  showHideDrawer = false;\n\n  filteredRowData = filterTableConstants.rowData;\n\n  filterTableData = filterTableConstants;\n\n  ngOnInit(): void {\n    this.Items.push('Nissan');\n    this.Items.push('Tesla');\n    this.Items.push('Toyota');\n    this.filteredItem = this.Items;\n  }\n\n  performFilter(event: any) {\n    clearTimeout(this.debounce);\n    this.debounce = setTimeout(() => {\n      const filterBy = event.target.value.toLocaleLowerCase();\n      this.filteredItem = this.Items.filter((item: any) => item.toLocaleLowerCase().indexOf(filterBy) !== -1);\n      if (!filterBy) {\n        this.filteredRowData = this.rowData;\n      }\n    }, 500);\n  }\n\n  toggleDrawer() {\n    this.showHideDrawer = !this.showHideDrawer;\n  }\n\n  setFilteredItemOnClickHandler = (item) => {\n    this.filteredItem = [item];\n    this.filteredRowData = [...this.rowData.filter((data) => data.make === item)];\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<nexus-search data-testid=\"search-bar\" [debounceInterval]=\"3000\">\n  <nexus-input (input)=\"performFilter($event)\" autocomplete=\"off\" [placeholder]=\"filterTableData.placeholder\" >\n      <nexus-icon data-testid=\"search-icon\" [src]=\"filterTableData.searchIconSrc\"></nexus-icon>\n    </nexus-input>\n    <nexus-search-list>\n      <nexus-search-list-item *ngFor=\"let item of filteredItem\" (click)=\"setFilteredItemOnClickHandler(item)\">\n        <button>{{ item }}</button>\n      </nexus-search-list-item>\n    </nexus-search-list>\n  </nexus-search>\n\n  <table class=\"nexus-table\">\n    <thead>\n      <tr>\n        <th *ngFor=\"let cols of columnDefs\">{{cols.label}}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let tableContent of filteredRowData\">\n        <td>{{tableContent.make}}</td>\n        <td>{{tableContent.model}}</td>\n        <td>{{tableContent.year}}</td>\n        <td>{{tableContent.price}}</td>\n        <td>{{tableContent.owner}}</td>\n        <td>{{tableContent.location}}</td>\n      </tr>\n    </tbody>\n  </table>\n\n"
        },
        {
            "name": "FloatingButtonComponent",
            "id": "component-FloatingButtonComponent-5b0257f8d8b7489473931a00aead098c23ea37aa967eddbb1374dbe85d3993601864d20486d854217e06ae73d1707430916f8b038d9c5513284ffa40064edee2",
            "file": "src/app/sb/components/button/06_floatingButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-floating-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./06_floatingButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "floatingButtons",
                    "defaultValue": "floatingButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { floatingButton } from '../../constants';\n\n@Component({\n  selector: 'app-button-floating-button',\n  templateUrl: './06_floatingButton.component.html'\n})\nexport default class FloatingButtonComponent {\n  floatingButtons = floatingButton;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-mt-5\">\n    <div class=\"nexus-row nexus-center-xs\">\n        <div class=\"nexus-col-xs-4 nexus-col-md-4\">\n            <div class=\"nexus-row nexus-center-xs\">\n                <div class=\"nexus-col-xs-2  nexus-col-md-4\">\n                    <button data-testid=\"nexus-button-with-icon\" class=\"nexus-btn-icon\">\n                        <nexus-icon src=\"./assets/icons/action/ic_settings_24px.svg\"></nexus-icon>\n                        <span class=\"nexus-visually-hidden\">Settings</span>\n                    </button>\n                </div>\n                <div class=\"nexus-col-xs-2\">\n                    <h5 class=\"nexus-h5\">{{floatingButtons.icon}}</h5>\n                </div>\n            </div>\n\n        </div>\n        <div class=\"nexus-col-xs-4 nexus-col-md-4\">\n            <div class=\"nexus-row nexus-center-xs\">\n                <div class=\"nexus-col-xs-2 nexus-col-md-4\">\n                    <button data-testid=\"nexus-btn-floating\" class=\"nexus-fab\">\n                        <nexus-icon src=\"./assets/icons/action/ic_settings_24px.svg\"></nexus-icon>\n                        <span class=\"nexus-visually-hidden\">Settings</span>\n                    </button>\n                </div>\n                <div class=\"nexus-col-xs-2 nexus-col-md-4\">\n                    <h5 class=\"nexus-h5\">{{floatingButtons.floatingIconButton}}</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-956c6a74bd78ba39d531eabd568858f004fb0dade59bc323187597ea97176dbc0a906651a63f066f96e60fe3c1bc1f175d2b6eee4ce36b49626137c2b143ca8f",
            "file": "src/app/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-footer class=\"nexus-footer-sticky\">\n  <nexus-footer-logo>\n    <a href=\"javascript:void(0)\">\n      <nexus-icon src=\"./assets/images/nexus-footer-logo.svg\"></nexus-icon>\n      <span class=\"nexus-visually-hidden\">Home</span>\n    </a>\n  </nexus-footer-logo>\n  <nexus-footer-column>\n    <nexus-footer-content-title>\n      <p>title</p>\n    </nexus-footer-content-title>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Amsterdam</a>\n    </nexus-footer-content>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Dordrecht</a>\n    </nexus-footer-content>\n  </nexus-footer-column>\n  <nexus-footer-column>\n    <nexus-footer-content-title>\n      <p>title</p>\n    </nexus-footer-content-title>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Amsterdam</a>\n    </nexus-footer-content>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Dordrecht</a>\n    </nexus-footer-content>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Eindhoven</a>\n    </nexus-footer-content>\n  </nexus-footer-column>\n  <nexus-footer-bottom>\n    <span>Copyright&#169; Ernst & Young, LLC. All rights reserved</span>\n  </nexus-footer-bottom>\n</nexus-footer>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-135a5c82842275909aab1dcf7e1c81e3bb488be0e08026ff792578a3d7bca76677870ccb8023c1c257bb139c82a8d1bb7950e87ca43c434ee3d20605828c19fd-1",
            "file": "src/app/sb/components/footer/01_footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './01_footer.component.html'\n})\nexport default class FooterComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FooterComponent-1",
            "templateData": "<nexus-footer class=\"nexus-footer-sticky\">\n  <nexus-footer-logo>\n    <a href=\"javascript:void(0)\">\n      <nexus-icon src=\"./assets/images/nexus-footer-logo.svg\"></nexus-icon>\n      <span class=\"nexus-visually-hidden\">Home</span>\n    </a>\n  </nexus-footer-logo>\n  <nexus-footer-column>\n    <nexus-footer-content-title>\n      <p>title</p>\n    </nexus-footer-content-title>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Amsterdam</a>\n    </nexus-footer-content>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Dordrecht</a>\n    </nexus-footer-content>\n  </nexus-footer-column>\n  <nexus-footer-column>\n    <nexus-footer-content-title>\n      <p>title</p>\n    </nexus-footer-content-title>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Amsterdam</a>\n    </nexus-footer-content>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Dordrecht</a>\n    </nexus-footer-content>\n    <nexus-footer-content>\n      <a href=\"javascript:void(0)\">Eindhoven</a>\n    </nexus-footer-content>\n  </nexus-footer-column>\n  <nexus-footer-bottom>\n    <span>Copyright&#169; Ernst & Young, LLC. All rights reserved</span>\n  </nexus-footer-bottom>\n</nexus-footer>\n"
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-802608c17bd815e0b2fa071a3218981833a471e345efe4144669209ce7a2a432c9cb772d5b29adb161f866c98ce3fb06f2e22aa3574756d7248f88225cbbd2fd",
            "file": "src/app/components/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [
                "./form-field.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "showErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-field',\n  templateUrl: './form-field.component.html',\n  styleUrls: ['./form-field.component.scss']\n})\nexport class FormFieldComponent {\n  @Input() showErrors: boolean;\n\n  @Input() showMessages: boolean;\n\n  reactiveValue = new FormControl('');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./form-field.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field [showErrors]=\"showErrors\" [showMessages]=\"showMessages\">\n  <nexus-label data-testid=\"label-first-name\">First name</nexus-label>\n  <nexus-input\n    data-testid=\"form-field-textbox\"\n    [formControl]=\"reactiveValue\"\n    [value]=\"reactiveValue.value\"\n  ></nexus-input>\n</nexus-form-field>\n"
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-9a5c396ab1710be946c54883848bfd4223fb9077a042b5f31f551c38c224cd0f9155b86ec9eebe7aedf48446524a0a17098339bdcdaf1ed047f06ba5e0ffa07f-1",
            "file": "src/app/sb/components/form-field/01_formField.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-primary",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_formField.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "showErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "formField.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { formField } from '../../constants';\n@Component({\n  selector: 'app-form-field-primary',\n  templateUrl: './01_formField.component.html'\n})\nexport default class FormFieldComponent {\n  @Input() showErrors: boolean;\n\n  @Input() showMessages: boolean;\n\n  reactiveValue = new FormControl('');\n\n  title = formField.title;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FormFieldComponent-1",
            "templateData": "<nexus-form-field [showErrors]=\"showErrors\" [showMessages]=\"showMessages\">\n  <nexus-label data-testid=\"label-first-name\">{{ title }}</nexus-label>\n  <nexus-input\n    data-testid=\"form-field-textbox\"\n    [formControl]=\"reactiveValue\"\n    [value]=\"reactiveValue.value\"\n  ></nexus-input>\n</nexus-form-field>\n"
        },
        {
            "name": "FormFieldDisableComponent",
            "id": "component-FormFieldDisableComponent-1b946d59d0ba0655d178ade80be24f3ca4064d8d1bd966d03a88b18e37fc95e611c8afbcae321110b1365f6af86862346c3a7125bd12b7814292c3efb578993f",
            "file": "src/app/sb/components/form-field/02_disabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_disabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabledField",
                    "defaultValue": "disabledFormField.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "disabledInfo",
                    "defaultValue": "disabledFormField.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "disabledFormField.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { disabledFormField } from '../../constants';\n\n@Component({\n  selector: 'app-form-field-disabled',\n  templateUrl: './02_disabled.component.html'\n})\nexport default class FormFieldDisableComponent {\n  disabledField = disabledFormField.text;\n\n  disabledInfo = disabledFormField.disabled;\n\n  title = disabledFormField.title;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label>{{ disabledInfo }}</nexus-label>\n  <nexus-input [disabled]=\"true\" [placeholder]=\"disabledField\"></nexus-input>\n</nexus-form-field>\n"
        },
        {
            "name": "FormFieldExamplesComponent",
            "id": "component-FormFieldExamplesComponent-a5f5efbf38a923eb0ce76af3dcac3856d6d935d896ee28f898b374fa74b7f3d4d93644f6b7c67d390a4e02cf2761b57481871d76928a9747feb2ab6169d036f9",
            "file": "src/app/components/form-field-examples/form-field-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-examples",
            "styleUrls": [
                "./form-field-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabledValue",
                    "defaultValue": "new FormControl({ value: 'Value',\n    disabled: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "errorValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "messageValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-field-examples',\n  templateUrl: './form-field-examples.component.html',\n  styleUrls: ['./form-field-examples.component.scss']\n})\nexport class FormFieldExamplesComponent {\n  disabledValue = new FormControl({ value: 'Value',\n    disabled: true });\n\n  messageValue = new FormControl('');\n\n  errorValue = new FormControl('');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./form-field-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Disabled</p>\n\n<nexus-form-field>\n  <nexus-label>First name</nexus-label>\n  <nexus-input [disabled]=\"true\" [formControl]=\"disabledValue\" [value]=\"disabledValue.value\"></nexus-input>\n\n</nexus-form-field>\n\n<p class=\"nexus-h5\">With Message</p>\n\n<nexus-form-field>\n  <nexus-label>First name</nexus-label>\n  <nexus-input [formControl]=\"messageValue\" [value]=\"messageValue.value\"></nexus-input>\n  <nexus-message>Custom message</nexus-message>\n</nexus-form-field>\n\n<p class=\"nexus-h5\">With Error</p>\n\n<nexus-form-field>\n  <nexus-label>First name</nexus-label>\n  <nexus-input [formControl]=\"errorValue\" [value]=\"errorValue.value\"></nexus-input>\n  <nexus-error-message>This is an error message</nexus-error-message>\n</nexus-form-field>\n"
        },
        {
            "name": "FormFieldMessageComponent",
            "id": "component-FormFieldMessageComponent-30f6dd645a64842e9e4ca838723908aa4e777ffb58d9d6ad9111a2966990706cd6bdc3f941e613782da9e50cbacb1974d65561d32c3b0dadda7d24d62a59efbb",
            "file": "src/app/sb/components/form-field/03_withMessage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_withMessage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customMessage",
                    "defaultValue": "withMessageFormField.customMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "message",
                    "defaultValue": "withMessageFormField.messageName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { withMessageFormField } from '../../constants';\n@Component({\n  selector: 'app-form-field-message',\n  templateUrl: './03_withMessage.component.html'\n})\nexport default class FormFieldMessageComponent {\n  message = withMessageFormField.messageName;\n\n  customMessage = withMessageFormField.customMessage;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label>{{ message }}</nexus-label>\n  <nexus-input></nexus-input>\n  <nexus-message>{{ customMessage }}</nexus-message>\n</nexus-form-field>\n"
        },
        {
            "name": "FormFieldWithErrorComponent",
            "id": "component-FormFieldWithErrorComponent-179153b3b8e362a7b270c0b3e9444353668f9d80e65a93a9a0eb784e9f0bfb0ef2527b88380a5fee30a5d562504317e980206c6740ab5e26334850b031c58725",
            "file": "src/app/sb/components/form-field/04_withError.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_withError.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "defaultValue": "withErrorFormField.message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "defaultValue": "withErrorFormField.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "text",
                    "defaultValue": "withErrorFormField.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { withErrorFormField } from '../../constants';\n@Component({\n  selector: 'app-form-field-error',\n  templateUrl: './04_withError.component.html'\n})\nexport default class FormFieldWithErrorComponent {\n  text = withErrorFormField.text;\n\n  name = withErrorFormField.name;\n\n  message = withErrorFormField.message;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label>{{ name }}</nexus-label>\n  <nexus-input></nexus-input>\n  <nexus-error-message>{{ message }}</nexus-error-message>\n</nexus-form-field>\n"
        },
        {
            "name": "GroupComponent",
            "id": "component-GroupComponent-9e36826686fb7db7163e20f7ae9ed72ca62d6bbd19312045fae73ad962f59af66d6ad2f19efae8ec63fd2c3074ef95f691163c50d60901cb2a592b12547aeebc",
            "file": "src/app/sb/components/radio/02_group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "radio.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "group",
                    "defaultValue": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { radio, group } from '../../constants';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './02_group.component.html'\n})\nexport default class GroupComponent {\n  @Input() name = radio.name;\n\n  @Input() disabled: boolean = false;\n\n  group = group;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xs \">\n    <nexus-label>{{group.label}}</nexus-label>\n\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"disabled\">\n            {{group.first}}\n        </nexus-radio>\n    </div>\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"disabled\">\n            {{group.second}}\n        </nexus-radio>\n    </div>\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"disabled\">\n            {{group.third}}\n        </nexus-radio>\n    </div>\n</div>"
        },
        {
            "name": "GroupDisabledComponent",
            "id": "component-GroupDisabledComponent-9af704b7f38d5566fce4f13ca4293c1a19145524116366bdc2e15bab75b17774a59ecfa19fe7d0a91733eac1218de9bf0a0b7a17424a8993a230e643e2af208f",
            "file": "src/app/sb/components/radio/05_groupDisabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-group-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_groupDisabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "radio.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "groupDisabled",
                    "defaultValue": "groupDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { radio, groupDisabled } from '../../constants';\n\n@Component({\n  selector: 'app-group-disabled',\n  templateUrl: './05_groupDisabled.component.html'\n})\nexport default class GroupDisabledComponent {\n  @Input() name = radio.name;\n\n  @Input() disabled: boolean = true;\n\n  groupDisabled = groupDisabled;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row nexus-center-xs\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"true\">\n            {{groupDisabled.first}}</nexus-radio>\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"true\">\n            {{groupDisabled.second}}</nexus-radio>\n        <nexus-radio data-testid=\"radio-btn-opt1\" [name]=\"name\" [disabled]=\"true\">\n            {{groupDisabled.third}}</nexus-radio>\n    </div>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ab873424f4db1125128707930c650a6078efef96f7f595efc71f497407ac588c805c15f31005929531bab9434fbdc51ae051497ec0877c95d7c6ec4b7547f17e",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-header class=\"nexus-header-sticky\">\n  <nexus-header-logo>\n    <a href=\"javascript:void(0)\">\n      <nexus-icon data-testid=\"nexus-header-logo\" src=\"./assets/images/nexus-logo.svg\"></nexus-icon>\n      <span class=\"nexus-visually-hidden\">Home</span>\n    </a>\n  </nexus-header-logo>\n\n  <nexus-header-menu data-testid=\"nexus-hamburger-icon\">\n    <nexus-menu-item data-testid=\"menu-item1\">\n      <a href=\"javascript:void(0)\">Item 1</a>\n    </nexus-menu-item>\n\n    <nexus-menu-item data-testid=\"menu-item2\">\n      <a href=\"javascript:void(0)\">Item 2</a>\n    </nexus-menu-item>\n\n    <nexus-menu-item data-testid=\"menu-item3\">\n      <a href=\"javascript:void(0)\">Item 3</a>\n    </nexus-menu-item>\n  </nexus-header-menu>\n</nexus-header>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-8b23538733ecfd46201fe3e84b9bf217bc5f9402a9f6b841e73c01b245c5733456ca7fb8c6498c9f422aadfeaa8c33f8c504892d26d4931f8bb168d8f8a5ebd5-1",
            "file": "src/app/sb/components/header/01_header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './01_header.component.html'\n})\nexport default class HeaderComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<nexus-header class=\"nexus-header-sticky\">\n  <nexus-header-logo>\n    <a href=\"javascript:void(0)\">\n      <nexus-icon data-testid=\"nexus-header-logo\" src=\"./assets/images/nexus-logo.svg\"></nexus-icon>\n      <span class=\"nexus-visually-hidden\">Home</span>\n    </a>\n  </nexus-header-logo>\n\n  <nexus-header-menu data-testid=\"nexus-hamburger-icon\">\n    <nexus-menu-item data-testid=\"menu-item1\">\n      <a href=\"javascript:void(0)\">Item 1</a>\n    </nexus-menu-item>\n\n    <nexus-menu-item data-testid=\"menu-item2\">\n      <a href=\"javascript:void(0)\">Item 2</a>\n    </nexus-menu-item>\n\n    <nexus-menu-item data-testid=\"menu-item3\">\n      <a href=\"javascript:void(0)\">Item 3</a>\n    </nexus-menu-item>\n  </nexus-header-menu>\n</nexus-header>"
        },
        {
            "name": "HeaderWithAvatarComponent",
            "id": "component-HeaderWithAvatarComponent-867b545cba6281660850ccfbd654217a2558a17d2c588dec151bbdebb114350ff5190f3c50d22b2fd0dbc4a6dce3fa3d0ef1b04984f7639de9a797a03ab35563",
            "file": "src/app/sb/components/header/02_withAvatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-with-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_withAvatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-with-header',\n  templateUrl: './02_withAvatar.component.html'\n})\nexport default class HeaderWithAvatarComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-header class=\"nexus-header-sticky\">\n  <nexus-header-logo>\n    <a href=\"javascript:void(0)\">\n      <nexus-icon data-testid=\"nexus-header-logo\" src=\"./assets/images/nexus-logo.svg\"></nexus-icon>\n      <span class=\"nexus-visually-hidden\">Home</span>\n    </a>\n  </nexus-header-logo>\n\n  <nexus-header-menu data-testid=\"nexus-hamburger-icon\">\n    <nexus-menu-item data-testid=\"menu-item1\">\n      <a href=\"javascript:void(0)\">Home</a>\n    </nexus-menu-item>\n\n    <nexus-menu-item data-testid=\"menu-item2\">\n      <a href=\"javascript:void(0)\">Dashboard</a>\n    </nexus-menu-item>\n\n    <nexus-menu-item data-testid=\"menu-item3\">\n      <nexus-avatar class=\"nexus-pt-2\" avatar-image-src=\"./assets/images/avatar.png\" avatar-size=\"lg\"\n        avatar-status=\"online\" avatar-name-display=\"true\" user-name=\"Jane Doe\">\n      </nexus-avatar>\n\n\n    </nexus-menu-item>\n  </nexus-header-menu>\n</nexus-header>"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-c52d68d9d866276cc6c55383e644e9a03e526cd83ce3d216d2517dd879a3caf0cd22810f3f611c290e307a65e34427379b63f0660514460e83de19510abf7b89",
            "file": "src/app/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "src",
                    "defaultValue": "'./assets/icons/action/ic_3d_rotation_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent {\n  @Input() src: string = './assets/icons/action/ic_3d_rotation_24px.svg';\n\n  @Input() size: string = 'md';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-icon [src]=\"src\" [size]=\"size\"></nexus-icon>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-ccc6e010f38578064448bdfc3b7fa610125a06a0ec3f3c8e0f528b13b877b12dc9f03bdf8e94f3b70103e569dd145491b145fd04a60cc8dfa16f0d8442dca4e8-1",
            "file": "src/app/sb/components/icon/01_icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "icon.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "src",
                    "defaultValue": "icon.src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "icon.type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { icon } from '../../constants';\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './01_icon.component.html'\n})\nexport default class IconComponent {\n  @Input() src: string = icon.src;\n\n  @Input() size: string = icon.size;\n\n  @Input() type: string = icon.type;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IconComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <nexus-icon [src]=\"src\" [size]=\"size\" [type]=\"type\"></nexus-icon>\n</div>"
        },
        {
            "name": "IconExamplesComponent",
            "id": "component-IconExamplesComponent-6a6a9abcc0babb8b526270718587e2bd7f25ed00821b6bb1415da04a9133c918268b4572ae4efb0b980ff1035c1a3230b403993472fb0968213f964cb57310f2",
            "file": "src/app/components/icon-examples/icon-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-examples",
            "styleUrls": [
                "./icon-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-examples',\n  templateUrl: './icon-examples.component.html',\n  styleUrls: ['./icon-examples.component.scss']\n})\nexport class IconExamplesComponent implements OnInit {\n  // eslint-disable-next-line no-useless-constructor\n  constructor() {\n    // This is intentional\n  }\n\n  ngOnInit(): void {\n    // This is intentional\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./icon-examples.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"nexus-h5\">Icon size variants.</p>\n<div class=\"nexus-row\">\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeXS\" class=\"nexus-h6\">xs</p>\n        <nexus-icon src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"xs\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeSM\" class=\"nexus-h6\">sm</p>\n        <nexus-icon data-testid=\"icnIconSizeSM\" src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"sm\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeMD\" class=\"nexus-h6\">md</p>\n        <nexus-icon src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"md\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeLG\" class=\"nexus-h6\">lg</p>\n        <nexus-icon data-testid=\"icnIconSizeLG\" src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"lg\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeXL\" class=\"nexus-h6\">xl</p>\n        <nexus-icon data-testid=\"icnIconSizeXL\" src=\"./assets/icons/action/ic_3d_rotation_24px.svg\" size=\"xl\"></nexus-icon>\n    </div>\n</div>\n<p class=\"nexus-h5\">Icon variant - with <strong>type</strong> property.</p>\n<div class=\"nexus-row\">\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconTypeXS\" class=\"nexus-h6\">xs</p>\n        <nexus-icon src=\"./assets/icons/content/ic_sort_24px.svg\" size=\"xs\" type=\"img\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconTypeSM\" class=\"nexus-h6\">sm</p>\n        <nexus-icon src=\"./assets/icons/content/ic_sort_24px.svg\" size=\"sm\" type=\"img\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconTypeMD\" class=\"nexus-h6\">md</p>\n        <nexus-icon src=\"./assets/icons/content/ic_sort_24px.svg\" size=\"md\" type=\"img\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconTypeLG\" class=\"nexus-h6\">lg</p>\n        <nexus-icon src=\"./assets/icons/content/ic_sort_24px.svg\" size=\"lg\" type=\"img\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconTypeXL\" class=\"nexus-h6\">xl</p>\n        <nexus-icon src=\"./assets/icons/content/ic_sort_24px.svg\" size=\"xl\" type=\"img\"></nexus-icon>\n    </div>\n</div>"
        },
        {
            "name": "IconOnFormComponent",
            "id": "component-IconOnFormComponent-32d95357c92f881aa8487a1c32b4312db146ee24c42ef42ac9d4686ccfa4367f141b60292f3fc785e6fe8c6218961ce238213ebc511689214b952029340892e2",
            "file": "src/app/sb/components/icon/04_iconOnForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-on-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_iconOnForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconOnForm",
                    "defaultValue": "iconOnForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { icon, iconOnForm } from '../../constants';\n\n@Component({\n  selector: 'app-icon-on-form',\n  templateUrl: './04_iconOnForm.component.html'\n})\nexport default class IconOnFormComponent {\n  iconOnForm = iconOnForm;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n    <nexus-label>{{iconOnForm.text}}</nexus-label>\n    <nexus-input\n      attrId=\"simple\"\n      [placeholder]=\"iconOnForm.placeholder\"\n    ><nexus-icon [src]=\"iconOnForm.src\" size=\"md\"></nexus-icon></nexus-input>\n  </nexus-form-field>"
        },
        {
            "name": "IconOverlayComponent",
            "id": "component-IconOverlayComponent-a439d0f7f6cbf1a24b15cd2e6a1cb6cf7cb405cedf186b01a02678b9c3e62a3a50d174f2aba3adaed91686eb24cd413dd78c49633a6085aeaf15f7737efed160",
            "file": "src/app/sb/components/badge/04_iconOverlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-overlay",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_iconOverlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconInfo",
                    "defaultValue": "iconOverlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { iconOverlay } from '../../constants';\n\n@Component({\n  selector: 'app-icon-overlay',\n  templateUrl: './04_iconOverlay.component.html',\n  styleUrls: []\n})\nexport default class IconOverlayComponent {\n  iconInfo = iconOverlay;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row nexus-around-xs nexus-mt-5\">\n    <div class=\"nexus-col-xs-1 nexus-col-md-1\">\n        <button class=\"nexus-btn nexus-btn-icon\">\n            <nexus-icon [src]=\"iconInfo.logo\"></nexus-icon>\n            <nexus-badge overlap=\"true\" variant=\"error\"></nexus-badge>\n        </button>\n    </div>\n    <div class=\"nexus-col-xs-1 nexus-col-md-1\">\n        <button class=\"nexus-btn nexus-btn-icon\">\n            <nexus-icon [src]=\"iconInfo.alarm\"></nexus-icon>\n            <nexus-badge overlap=\"true\" variant=\"success\"></nexus-badge>\n        </button>\n    </div>\n    <div class=\"nexus-col-xs-1 nexus-col-md-1\">\n        <button class=\"nexus-btn nexus-btn-icon\">\n            <nexus-icon [src]=\"iconInfo.email\"></nexus-icon>\n            <nexus-badge overlap=\"true\" variant=\"warning\"></nexus-badge>\n        </button>\n    </div>\n    <div class=\"nexus-col-xs-1 nexus-col-md-1\">\n        <button class=\"nexus-btn nexus-btn-icon\">\n            <nexus-icon [src]=\"iconInfo.favourite\"></nexus-icon>\n            <nexus-badge overlap=\"true\" variant=\"default\"></nexus-badge>\n        </button>\n    </div>\n</div>"
        },
        {
            "name": "IconSizeComponent",
            "id": "component-IconSizeComponent-fcc13b490fd7577b13a780b721064d69e967bf661959010dcec90d5cdddebab4eb68e26d1064b23efb53475506817e832cf63bf2e431e265db6ff26028aa199d",
            "file": "src/app/sb/components/icon/02_size.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-size-variant",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_size.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sizeVariants",
                    "defaultValue": "sizeVariant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { sizeVariant } from '../../constants';\n\n@Component({\n  selector: 'app-icon-size-variant',\n  templateUrl: './02_size.component.html'\n})\nexport default class IconSizeComponent {\n  sizeVariants = sizeVariant;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row nexus-around-xs\">\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeXS\" class=\"nexus-h6\">{{sizeVariants.xs}}</p>\n        <nexus-icon [src]=\"sizeVariants.src\" size=\"xs\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeSM\" class=\"nexus-h6\">{{sizeVariants.sm}}</p>\n        <nexus-icon data-testid=\"icnIconSizeSM\" [src]=\"sizeVariants.src\" size=\"sm\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeMD\" class=\"nexus-h6\">{{sizeVariants.md}}</p>\n        <nexus-icon [src]=\"sizeVariants.src\" size=\"md\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeLG\" class=\"nexus-h6\">{{sizeVariants.lg}}</p>\n        <nexus-icon data-testid=\"icnIconSizeLG\" [src]=\"sizeVariants.src\" size=\"lg\"></nexus-icon>\n    </div>\n    <div class=\"nexus-col-md-1\">\n        <p data-testid=\"lblIconSizeXL\" class=\"nexus-h6\">{{sizeVariants.xl}}</p>\n        <nexus-icon data-testid=\"icnIconSizeXL\" [src]=\"sizeVariants.src\" size=\"xl\"></nexus-icon>\n    </div>\n</div>"
        },
        {
            "name": "ImageAndNameComponent",
            "id": "component-ImageAndNameComponent-f9b23b52767ee1f4c3d203025bd3ac6dd119f6e74ca77adbccf5461d8856f59af63f58dabd5d5bf42db089f5322bfdf067fade1b0c998e965b91a7f85d3bb40d",
            "file": "src/app/sb/components/avatar/02_imageAndName.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-imageandname",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_imageAndName.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "image",
                    "defaultValue": "imageAndName.image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "defaultValue": "imageAndName.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "defaultValue": "imageAndName.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { imageAndName } from '../../constants';\n@Component({\n  selector: 'app-avatar-examples-imageandname',\n  templateUrl: './02_imageAndName.component.html'\n})\nexport default class ImageAndNameComponent {\n  name = imageAndName.name;\n\n  size = imageAndName.size;\n\n  image = imageAndName.image;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xl-2\">\n  <p>\n    <nexus-avatar [avatarImageSrc]=\"image\" [avatarSize]=\"size\" [userName]=\"name\"> </nexus-avatar>\n  </p>\n</div>\n"
        },
        {
            "name": "IndexComponent",
            "id": "component-IndexComponent-da1212ac47f4ffc7fd7c4f0bbf8d47f76342ec9ed22f72052a9dc7f6143dc88076aad04b2df5cf0ed8d6dacfd3e08cbd840fa24f8b0c6be7e87847bd59e2d669",
            "file": "src/app/views/index/index.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-index",
            "styleUrls": [
                "./index.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./index.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./index.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section>\n  <h1>Angular Component Examples</h1>\n\n  <ul>\n    <li><a href=\"?accordion\">Accordion</a></li>\n    <li><a href=\"?accordionExamples\">Accordion Examples</a></li>\n    <li><a href=\"?avatar\">Avatar</a></li>\n    <li><a href=\"?avatarExamples\">Avatar Examples</a></li>\n    <li><a href=\"?badge\">Badge</a></li>\n    <li><a href=\"?badgeExamples\">Badge Examples</a></li>\n    <li><a href=\"?barChart\">Bar Chart</a></li>\n    <li><a href=\"?breadcrumb\">Breadcrumb</a></li>\n    <li><a href=\"?breadcrumbExample\">Breadcrumb Example</a></li>\n    <li><a href=\"?button\">Button</a></li>\n    <li><a href=\"?buttonExamples\">Button Examples</a></li>\n    <li><a href=\"?card\">Card</a></li>\n    <li><a href=\"?cardExamples\">Card Examples</a></li>\n    <li><a href=\"?carousel\">Carousel</a></li>\n    <li><a href=\"?checkbox\">Checkbox</a></li>\n    <li><a href=\"?checkboxExamples\">Checkbox Examples</a></li>\n    <li><a href=\"?chip\">Chip</a></li>\n    <li><a href=\"?chipExamples\">Chip Examples</a></li>\n    <li><a href=\"?dropdown\">Dropdown</a></li>\n    <li><a href=\"?dropdownExamples\">Dropdown Examples</a></li>\n    <li><a href=\"?errorMessage\">Error Message</a></li>\n    <li><a href=\"?fileUpload\">File Upload</a></li>\n    <li><a href=\"?footer\">Footer</a></li>\n    <li><a href=\"?formField\">Form Field</a></li>\n    <li><a href=\"?formFieldExamples\">Form Field Examples</a></li>\n    <li><a href=\"?header\">Header</a></li>\n    <li><a href=\"?icon\">Icon</a></li>\n    <li><a href=\"?iconExamples\">Icon Examples</a></li>\n    <li><a href=\"?input\">Input</a></li>\n    <li><a href=\"?inputExamples\">Input Examples</a></li>\n    <li><a href=\"?loader\">Loader</a></li>\n    <li><a href=\"?lineChart\">Line Chart</a></li>\n    <li><a href=\"?loaderExamples\">Loader Examples</a></li>\n    <li><a href=\"?menu\">Menu</a></li>\n    <li><a href=\"?modal\">Modal</a></li>\n    <li><a href=\"?modalExamples\">Modal Examples</a></li>\n    <li><a href=\"?notification\">Notification</a></li>\n    <li><a href=\"?pagination\">Pagination</a></li>\n    <li><a href=\"?pieChart\">Pie Chart</a></li>\n    <li><a href=\"?pinEntry\">Pin Entry</a></li>\n    <li><a href=\"?pinEntryExamples\">Pin Entry Examples</a></li>\n    <li><a href=\"?progressBar\">Progress Bar</a></li>\n    <li><a href=\"?progressBarExamples\">Progress Bar Examples</a></li>\n    <li><a href=\"?radio\">Radio</a></li>\n    <li><a href=\"?radioExamples\">Radio Examples</a></li>\n    <li><a href=\"?search\">Search</a></li>\n    <li><a href=\"?searchExamples\">Search Examples</a></li>\n    <li><a href=\"?select\">Select</a></li>\n    <li><a href=\"?selectExample\">Select Example</a></li>\n    <li><a href=\"?slider\">Slider</a></li>\n    <li><a href=\"?sliderExamples\">Slider Examples</a></li>\n    <li><a href=\"?stepper\">Stepper</a></li>\n    <li><a href=\"?stackedBarChart\">Stacked Bar Chart</a></li>\n    <li><a href=\"?tabBar\">Tab Bar</a></li>\n    <li><a href=\"?table\">Table</a></li>\n    <li><a href=\"?tableExamples\">Table Examples</a></li>\n    <li><a href=\"?textarea\">Textarea</a></li>\n    <li><a href=\"?toast\">Toast</a></li>\n    <li><a href=\"?toastExamples\">Toast Examples</a></li>\n    <li><a href=\"?toggle\">Toggle</a></li>\n    <li><a href=\"?toggleExamples\">Toggle Examples</a></li>\n    <li><a href=\"?tooltip\">Tooltip</a></li>\n    <li><a href=\"?tooltipExamples\">Tooltip Examples</a></li>\n    <li><a href=\"?tree\">Tree</a></li>\n  </ul>\n</section>\n"
        },
        {
            "name": "InitialsNameAndNotificationComponent",
            "id": "component-InitialsNameAndNotificationComponent-bbea2200e26e9edfa941c828e85913dde31b7ed6b1321117d47a780d202c22b86e1f0ad4c33660bc568d30764afc0b6bd93d13a0103898b12517210a078c7e53",
            "file": "src/app/sb/components/avatar/05_initialsNameAndNotification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-initial-name-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_initialsNameAndNotification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name",
                    "defaultValue": "initialsNameAndNotification.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "notification",
                    "defaultValue": "initialsNameAndNotification.notification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "initialsNameAndNotification.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { notification } from './../../../../../../stories/data/notification/notification';\nimport { Component } from '@angular/core';\nimport { initialsNameAndNotification } from '../../constants';\n@Component({\n  selector: 'app-avatar-examples-initial-name-notification',\n  templateUrl: './05_initialsNameAndNotification.component.html'\n})\nexport default class InitialsNameAndNotificationComponent {\n  name = initialsNameAndNotification.name;\n\n  size = initialsNameAndNotification.size;\n\n  notification = initialsNameAndNotification.notification;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xl-2\">\n  <p><nexus-avatar [avatarSize]=\"size\" [userName]=\"name\" [avatarNotification]=\"notification\"> </nexus-avatar></p>\n</div>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-2a9e55737c4da556c94149bba166fa0f7ab4376bd70305539234b30bc66aa0e7b308cdbd2bfe760132dfbf268f32ce1486012e4812cf7fddb989cb6009cd1315",
            "file": "src/app/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent {\n  @Input() attrId: string;\n\n  @Input() disabled: boolean;\n\n  @Input() label: string;\n\n  @Input() maxLength: number;\n\n  @Input() minLength: number;\n\n  @Input() placeholder: string;\n\n  @Input() required: boolean;\n\n  @Input() type: string;\n\n  @Input() value: string;\n\n  reactiveValue = new FormControl('');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label>First Name</nexus-label>\n  <nexus-input\n    [attrId]=\"attrId\"\n    [disabled]=\"disabled\"\n    [label]=\"label\"\n    [maxLength]=\"maxLength\"\n    [minLength]=\"minLength\"\n    [placeholder]=\"placeholder\"\n    [required]=\"required\"\n    [type]=\"type\"\n    [formControl]=\"reactiveValue\"\n    [value]=\"reactiveValue.value\"\n  ></nexus-input>\n</nexus-form-field>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-3e9d3afd65d500554981bbe059ffdb6ad401ae96558077cf3add3b5051ef23083eb94cfac87677e08ead323ba2e9e2099aec54fd247238677aba73a658e47324-1",
            "file": "src/app/sb/components/input/01_input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "title",
                    "defaultValue": "input.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { input } from '../../constants';\n@Component({\n  selector: 'app-input',\n  templateUrl: './01_input.component.html'\n})\nexport default class InputComponent {\n  @Input() attrId: string;\n\n  @Input() disabled: boolean;\n\n  @Input() label: string;\n\n  @Input() maxLength: number;\n\n  @Input() minLength: number;\n\n  @Input() placeholder: string;\n\n  @Input() required: boolean;\n\n  @Input() type: string;\n\n  @Input() value: string;\n\n  reactiveValue = new FormControl('');\n\n  title = input.title;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "InputComponent-1",
            "templateData": "<nexus-form-field>\n  <nexus-label>{{title}}</nexus-label>\n  <nexus-input\n    [attrId]=\"attrId\"\n    [disabled]=\"disabled\"\n    [label]=\"label\"\n    [maxLength]=\"maxLength\"\n    [minLength]=\"minLength\"\n    [placeholder]=\"placeholder\"\n    [required]=\"required\"\n    [type]=\"type\"\n    [formControl]=\"reactiveValue\"\n    [value]=\"reactiveValue.value\"\n  ></nexus-input>\n</nexus-form-field>\n"
        },
        {
            "name": "InputDateComponent",
            "id": "component-InputDateComponent-85a2e1e8694c614012fe74ee5ac99988a21d9e203a83acaf94035a69dafce4255c63cf43925a1a05074c6331c8081ad7d61fe3c9575c9230b5198cb37de3aada",
            "file": "src/app/sb/components/input/05_withDate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples-date",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_withDate.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "max",
                    "defaultValue": "withDate.max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "min",
                    "defaultValue": "withDate.min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "placeholder",
                    "defaultValue": "withDate.placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "text",
                    "defaultValue": "withDate.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { withDate } from '../../constants';\n@Component({\n  selector: 'app-input-examples-date',\n  templateUrl: './05_withDate.component.html'\n})\nexport default class InputDateComponent {\n  text = withDate.text;\n\n  min = withDate.min;\n\n  max = withDate.max;\n\n  placeholder = withDate.placeholder;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-label data-testid=\"label-date-field\">Date Field Example (Min 2022-01-01 and Max 2023-01-01)</nexus-label>\n<nexus-input\n  data-testid=\"input-textbox-date\"\n  type=\"date\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [placeholder]=\"placeholder\"\n></nexus-input>\n"
        },
        {
            "name": "InputDisabledComponent",
            "id": "component-InputDisabledComponent-b03d1c0408aa9f80a623bcc233a3f63798787247cf6ffce5ada9af061e7a5fcec8299687b415025435b0d14a9ac995015e7e2abf676e2d4d575a807814e425db",
            "file": "src/app/sb/components/input/07_disabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./07_disabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "disabledInput.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "defaultValue": "disabledInput.value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { disabledInput } from '../../constants';\n@Component({\n  selector: 'app-input-examples-disabled',\n  templateUrl: './07_disabled.component.html'\n})\nexport default class InputDisabledComponent {\n  text = disabledInput.text;\n\n  value = disabledInput.value;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-label data-testid=\"label-disabled-field\">{{ text }}</nexus-label>\n<nexus-input data-testid=\"input-textbox-disabled\" disabled=\"true\" [value]=\"value\"></nexus-input>\n"
        },
        {
            "name": "InputExamplesComponent",
            "id": "component-InputExamplesComponent-2c916d61b2771312c8c8a31913c0175c4f2ac69b842ca0dc0ecd087b694b466feba088f07cbc55763a6b9c5a78896a55dc1b06b4ebe0c1b74129f9d636bb3c38",
            "file": "src/app/components/input-examples/input-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-examples',\n  templateUrl: './input-examples.component.html'\n})\nexport class InputExamplesComponent {\n  reactiveValue = new FormControl('');\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label data-testid=\"label-first-name\">Input Field Example (max-length=\"20\")</nexus-label>\n  <nexus-input\n    data-testid=\"input-textbox-maxlen\"\n    [formControl]=\"reactiveValue\"\n    [value]=\"reactiveValue.value\"\n    max-length=\"20\"\n    placeholder=\"Value...\"\n  ></nexus-input>\n\n  <nexus-label data-testid=\"label-pwd-field\">Password Field Example</nexus-label>\n  <nexus-input data-testid=\"input-textbox-pwd\" type=\"password\" placeholder=\"Value...\"></nexus-input>\n\n  <nexus-label data-testid=\"label-num-field\">Number Field Example</nexus-label>\n  <nexus-input data-testid=\"input-textbox-num\" type=\"number\" min=\"100\" max=\"1000\" placeholder=\"Value...\"></nexus-input>\n\n  <nexus-label data-testid=\"label-date-field\">Date Field Example (Min 2022-01-01 and Max 2023-01-01)</nexus-label>\n  <nexus-input\n    data-testid=\"input-textbox-date\"\n    type=\"date\"\n    min=\"2022-01-01\"\n    max=\"2023-01-01\"\n    placeholder=\"Value...\"\n  ></nexus-input>\n\n  <nexus-label data-testid=\"label-readonly-field\">Readonly Field Example</nexus-label>\n  <nexus-input\n    data-testid=\"input-textbox-readonly\"\n    readonly=\"true\"\n    value=\"This is readyonly field\"\n    placeholder=\"Value...\"\n  ></nexus-input>\n\n  <nexus-label data-testid=\"label-disabled-field\">Disabled Field Example</nexus-label>\n  <nexus-input\n    data-testid=\"input-textbox-disabled\"\n    disabled=\"true\"\n    value=\"The field is Disabled\"\n    minLength=\"3\"\n    maxlength=\"20\"\n    placeholder=\"Value...\"\n  >\n  </nexus-input>\n</nexus-form-field>\n"
        },
        {
            "name": "InputMaxLengthComponent",
            "id": "component-InputMaxLengthComponent-ef77272d4c07cdae0ce2e4462dffdeba5f54f8dbf12dd6d47179d91efa2014b2d517b0a7c5c926fbd22d4abdd4d61966425dc940198b56f99454b5fa6ab8a804",
            "file": "src/app/sb/components/input/02_maxLength.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples-max-length",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_maxLength.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lengthNumber",
                    "defaultValue": "maxLength.lengthNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "maxLength",
                    "defaultValue": "maxLength.maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "placeholder",
                    "defaultValue": "maxLength.placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "text",
                    "defaultValue": "maxLength.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { maxLength } from '../../constants';\n@Component({\n  selector: 'app-input-examples-max-length',\n  templateUrl: './02_maxLength.component.html'\n})\nexport default class InputMaxLengthComponent {\n  text = maxLength.text;\n\n  maxLength = maxLength.maxLength;\n\n  placeholder = maxLength.placeholder;\n\n  lengthNumber = maxLength.lengthNumber;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label data-testid=\"label-first-name\">{{ text }}</nexus-label>\n  <nexus-input data-testid=\"input-textbox-maxlen\" [max-length]=\"maxLength\" [placeholder]=\"placeholder\"></nexus-input\n></nexus-form-field>\n"
        },
        {
            "name": "InputNumberComponent",
            "id": "component-InputNumberComponent-ff642c6c64fdac58ef4a73fba9e0ce6103d5f09b27d67619d6c5fb2cee180f4f224e354c229465106bada9f99b55c372af8ff08bdbfb3926218f2e35a0187e06",
            "file": "src/app/sb/components/input/03_withNumber.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples-number",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_withNumber.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "max",
                    "defaultValue": "withNumber.max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "min",
                    "defaultValue": "withNumber.min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "placeholder",
                    "defaultValue": "withNumber.placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "text",
                    "defaultValue": "withNumber.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { withNumber } from '../../constants';\n@Component({\n  selector: 'app-input-examples-number',\n  templateUrl: './03_withNumber.component.html'\n})\nexport default class InputNumberComponent {\n  text = withNumber.text;\n\n  min = withNumber.min;\n\n  max = withNumber.max;\n\n  placeholder = withNumber.placeholder;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-label data-testid=\"label-num-field\">{{ text }}</nexus-label>\n<nexus-input data-testid=\"input-textbox-num\" type=\"number\" [min]=\"min\" [max]=\"max\" placeholder=\"Value...\"></nexus-input>\n"
        },
        {
            "name": "InputPasswordComponent",
            "id": "component-InputPasswordComponent-b2be4c71b212fcf04eef981ee5db8ba043d8b1546439ce40aa58caa219d4e5db85d85a8440a389a0f3896e43584424ff8bc3a83282e05db586d130201b00a332",
            "file": "src/app/sb/components/input/04_withPassword.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_withPassword.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "withPassword.placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "text",
                    "defaultValue": "withPassword.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { withPassword } from '../../constants';\n@Component({\n  selector: 'app-input-examples-password',\n  templateUrl: './04_withPassword.component.html'\n})\nexport default class InputPasswordComponent {\n  text = withPassword.text;\n\n  placeholder = withPassword.placeholder;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-label data-testid=\"label-pwd-field\">{{ text }}</nexus-label>\n<nexus-input data-testid=\"input-textbox-pwd\" type=\"password\" [placeholder]=\"placeholder\"></nexus-input>\n"
        },
        {
            "name": "InputReadOnlyComponent",
            "id": "component-InputReadOnlyComponent-2dca739b5252696703b4326cd835384a71f8642d156dcbcf4245ed01d3807c1c39d86c490a70fd55900ef5a64fe074f99d2635452bfeace03692f3bd5a18388b",
            "file": "src/app/sb/components/input/06_readOnly.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-examples-read-only",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./06_readOnly.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "readOnly.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "defaultValue": "readOnly.value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { readOnly } from '../../constants';\n@Component({\n  selector: 'app-input-examples-read-only',\n  templateUrl: './06_readOnly.component.html'\n})\nexport default class InputReadOnlyComponent {\n  text = readOnly.text;\n\n  value = readOnly.value;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-label data-testid=\"label-readonly-field\">{{ text }}</nexus-label>\n<nexus-input data-testid=\"input-textbox-readonly\" readonly=\"true\" [value]=\"value\"></nexus-input>\n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-76e62bce7ca660e9418e310151bb6e6d02537650f0b77c5b37fe9a56263b75603efe7f55b801015476553b1ff4e27fe52dd8ed0d3f62665ca9e768785f6ba066",
            "file": "src/app/components/label/label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-label",
            "styleUrls": [
                "./label.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./label.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./label.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-label></nexus-label>\n"
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-a11ad8f31e8c4f7a65b28f0fc66c3e3659317b3b405cc522bc20c685da458d900dc31aade10a94cf904c4755e5d526c28736876201f5ce3bd1079d15c0085449",
            "file": "src/app/components/line-chart/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-line-chart",
            "styleUrls": [
                "./line-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./line-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dat",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "[\n    {\n      label: 'User 1',\n      name: 'Mark',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 71\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 251\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 357\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 414\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 270\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 33\n        }\n      ]\n    },\n    {\n      label: 'User 2',\n      name: 'Fred',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 418\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 380\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 393\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 107\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 3\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 333\n        }\n      ]\n    },\n    {\n      label: 'User 3',\n      name: 'Diane',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 473\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 311\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 405\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 65\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 101\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 18\n        }\n      ]\n    },\n    {\n      label: 'User 4',\n      name: 'Jackie',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 56\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: -7\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 68\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: -137\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 208\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 470\n        }\n      ]\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 163,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gridlines",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideXAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideYAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "htmlElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 159,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inverse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "msd",
                    "defaultValue": "86400000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showPieLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showXLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showXTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showYLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vertices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 501,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateLineChartData",
                    "args": [
                        {
                            "name": "numLines",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 440,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "numLines",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateRandomData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 492,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "generateRandomLineChartData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 447,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getChartEl",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 519,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "randomizer",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectArcStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisLabelFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontFamily",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStrokeWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectColorScheme",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInnerRadius",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInterpolation",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLegendFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLinearDomain",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 246,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLineStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMargin",
                    "args": [
                        {
                            "name": "marginAttribute",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 262,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "marginAttribute",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMaxBarWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectNumLines",
                    "args": [
                        {
                            "name": "numLines",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 496,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "numLines",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectXTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectYTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleGridlines",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleInverse",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleLegend",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleOrientation",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 312,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXAxis",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 346,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 383,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXTicks",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 393,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYAxis",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 398,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 388,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYTicks",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 435,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleVertices",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 341,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit {\n  public gridlines: any;\n\n  public inverse: any;\n\n  public showLegend: any;\n\n  public showPieLegend: any;\n\n  public vertices: any;\n\n  public hideXAxis: any;\n\n  public showXLabel: any;\n\n  public showXTicks: any;\n\n  public showYLabel: any;\n\n  public showYTicks: any;\n\n  public dat = new Date();\n\n  public msd = 86400000;\n\n  public data: Array<any> = [\n    {\n      label: 'User 1',\n      name: 'Mark',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 71\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 251\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 357\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 414\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 270\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 33\n        }\n      ]\n    },\n    {\n      label: 'User 2',\n      name: 'Fred',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 418\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 380\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 393\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 107\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 3\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 333\n        }\n      ]\n    },\n    {\n      label: 'User 3',\n      name: 'Diane',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 473\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 311\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 405\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 65\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 101\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 18\n        }\n      ]\n    },\n    {\n      label: 'User 4',\n      name: 'Jackie',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 56\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: -7\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 68\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: -137\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 208\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 470\n        }\n      ]\n    }\n  ];\n\n  private htmlElement: HTMLElement;\n\n  private hideYAxis: any;\n\n  constructor(public elRef: ElementRef) {\n    this.htmlElement = this.elRef.nativeElement;\n\n    this.gridlines = false;\n    this.inverse = false;\n    this.showLegend = false;\n    this.showPieLegend = true;\n    this.vertices = true;\n    this.hideXAxis = false;\n    this.showXLabel = true;\n    this.showXTicks = true;\n  }\n\n  public changeXLabel(args: any, value: any) {\n    this.getChartEl(args).xLabel = value;\n    const xLabelInput = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInput.value = '';\n  }\n\n  public changeYLabel(args: any, value: any) {\n    this.getChartEl(args).yLabel = value;\n    const yLabelInput = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInput.value = '';\n  }\n\n  public getChartEl(id: any): any {\n    return this.htmlElement.querySelector(id);\n  }\n\n  public randomizer(): any {\n    return Math.floor(Math.random() * 500) - 250;\n  }\n\n  public selectArcStroke(args: any): any {\n    const arcStroke = this.htmlElement.querySelector('#arcStroke') as HTMLInputElement;\n    this.getChartEl(args).stroke = arcStroke.value;\n  }\n\n  public selectAxisLabelFontSize(args: any): any {\n    const axisLabelFontSize = this.htmlElement.querySelector('#axisLabelFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisLabelFontSize = axisLabelFontSize.value;\n  }\n\n  public selectAxisTickFontSize(args: any): any {\n    const axisTickFontSize = this.htmlElement.querySelector('#axisTickFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontSize = axisTickFontSize.value;\n  }\n\n  public selectAxisTickFontFamily(args: any): any {\n    const axisTickFontFamily = this.htmlElement.querySelector('#axisTickFontFamily') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontFamily = axisTickFontFamily.value;\n  }\n\n  public selectBarStroke(args: any): any {\n    const barStroke = this.htmlElement.querySelector('#barStroke') as HTMLInputElement;\n    this.getChartEl(args).barStroke = barStroke.value;\n  }\n\n  public selectBarStrokeWidth(args: any): any {\n    const barStrokeWidth = this.htmlElement.querySelector('#barStrokeWidth') as HTMLInputElement;\n    this.getChartEl(args).barStrokeWidth = barStrokeWidth.value;\n  }\n\n  public selectColorScheme(args: any): any {\n    const colorScheme = this.htmlElement.querySelector('#colorScheme') as HTMLInputElement;\n    this.getChartEl(args).colorScheme = colorScheme.value;\n  }\n\n  public selectInnerRadius(args: any): any {\n    const innerRadius = this.htmlElement.querySelector('#innerRadius') as HTMLInputElement;\n    this.getChartEl(args).innerRadius = innerRadius.value;\n  }\n\n  public selectInterpolation(args: any): any {\n    const interpolation = this.htmlElement.querySelector('#interpolation') as HTMLInputElement;\n    this.getChartEl(args).interpolation = interpolation.value;\n  }\n\n  public selectLegendFontSize(args: any): any {\n    const legendFontSize = this.htmlElement.querySelector('#legendFontSize') as HTMLInputElement;\n    this.getChartEl(args).legendFontSize = legendFontSize.value;\n  }\n\n  public selectLinearDomain(args: any): any {\n    const val = this.htmlElement.querySelector('#linearDomain') as HTMLInputElement;\n    const el = this.getChartEl(args);\n    if (val.value === 'percent') {\n      el.linearTickFormat = 'percent1d';\n    } else {\n      el.linearTickFormat = 'localestring';\n    }\n    this.getChartEl(args).linearDomain = val.value;\n  }\n\n  public selectLineStroke(args: any): any {\n    const val = this.htmlElement.querySelector('#lineStroke') as HTMLInputElement;\n    this.getChartEl(args).strokeWidth = val.value;\n  }\n\n  public selectMargin(marginAttribute: any, args: any): any {\n    const val = this.htmlElement.querySelector(`#${marginAttribute}`) as HTMLInputElement;\n    const el = this.getChartEl(args);\n    el[marginAttribute] = val.value;\n  }\n\n  public selectMaxBarWidth(args: any): any {\n    const val = this.htmlElement.querySelector('#maxBarWidth') as HTMLInputElement;\n    this.getChartEl(args).maxBarWidth = val.value;\n  }\n\n  public selectXTickSize(args: any): any {\n    const val = this.htmlElement.querySelector('#xTickSize') as HTMLInputElement;\n    this.getChartEl(args).xTickSize = val.value;\n  }\n\n  public selectYTickSize(args: any): any {\n    const val = this.htmlElement.querySelector('#yTickSize') as HTMLInputElement;\n    this.getChartEl(args).yTickSize = val.value;\n  }\n\n  public toggleGridlines(args: any): any {\n    this.gridlines = !this.gridlines;\n    this.getChartEl(args).gridlines = this.gridlines;\n  }\n\n  public toggleInverse(args: any): any {\n    this.inverse = !this.inverse;\n    this.getChartEl(args).inverse = this.inverse;\n\n    if (this.inverse) {\n      this.htmlElement.querySelector('div.chart').classList.add('inverse');\n    } else {\n      this.htmlElement.querySelector('div.chart').classList.remove('inverse');\n    }\n  }\n\n  public toggleLegend(args: any): any {\n    if (args === 'nexus-pie-chart') {\n      this.showPieLegend = !this.showPieLegend;\n      this.getChartEl(args).legend = this.showPieLegend;\n\n      return;\n    }\n\n    this.showLegend = !this.showLegend;\n\n    this.getChartEl(args).legend = this.showLegend;\n  }\n\n  public toggleOrientation(args: any): any {\n    const orientationValue = this.htmlElement.querySelector('#orientation') as HTMLInputElement;\n    const val = orientationValue.value || 'vertical';\n    const el = this.getChartEl(args);\n    let xLabel: any;\n    let yLabel: any;\n\n    // horizontal orientation\n    if (val === 'horizontal') {\n      if (args === 'nexus-stacked-bar-chart') {\n        xLabel = 'Production';\n        yLabel = 'Year';\n      } else {\n        xLabel = 'Price';\n        yLabel = 'Ticker Symbol';\n      }\n    } else if (args === 'nexus-stacked-bar-chart') {\n      xLabel = 'Year';\n      yLabel = 'Production';\n    } else {\n      xLabel = 'Ticker Symbol';\n      yLabel = 'Price';\n    }\n\n    el.orientation = val;\n    el.xLabel = xLabel;\n    el.yLabel = yLabel;\n  }\n\n  public toggleVertices(args: any): any {\n    this.vertices = !this.vertices;\n    this.getChartEl(args).vertices = this.vertices;\n  }\n\n  public toggleShowHideXAxis(args: any): any {\n    this.hideXAxis = !this.hideXAxis;\n    const el = this.getChartEl(args);\n\n    if (this.hideXAxis) {\n      el.xLabel = '';\n      el.hideXAxis = true;\n      el.hideXTicks = true;\n\n      this.showXLabel = false;\n      this.showXTicks = false;\n\n      const xLabelItem = this.htmlElement.querySelector('#xLabel') as HTMLInputElement;\n      xLabelItem.checked = false;\n      xLabelItem.disabled = true;\n\n      const xTicksItem = this.htmlElement.querySelector('#xTicks') as HTMLInputElement;\n      xTicksItem.checked = false;\n      xTicksItem.disabled = true;\n    } else {\n      el.xLabel = 'Date';\n      el.hideXAxis = false;\n      el.hideXTicks = false;\n\n      this.showXLabel = true;\n      this.showXTicks = true;\n\n      const xLabelItem1 = this.htmlElement.querySelector('#xLabel') as HTMLInputElement;\n      xLabelItem1.checked = true;\n      xLabelItem1.disabled = false;\n\n      const xTicksItem1 = this.htmlElement.querySelector('#xTicks') as HTMLInputElement;\n      xTicksItem1.checked = true;\n      xTicksItem1.disabled = false;\n    }\n  }\n\n  public toggleShowHideXLabel(args: any): any {\n    this.showXLabel = !this.showXLabel;\n    this.getChartEl(args).xLabel = this.showXLabel ? 'Date' : '';\n  }\n\n  public toggleShowHideYLabel(args: any) {\n    this.showYLabel = !this.showYLabel;\n    this.getChartEl(args).yLabel = this.showYLabel ? 'Score' : '';\n  }\n\n  public toggleShowHideXTicks(args: any) {\n    this.showXTicks = !this.showXTicks;\n    this.getChartEl(args).hideXTicks = !this.showXTicks;\n  }\n\n  public toggleShowHideYAxis(args: any): any {\n    this.hideYAxis = !this.hideYAxis;\n    const el = this.getChartEl(args);\n\n    if (this.hideYAxis) {\n      el.yLabel = '';\n      el.hideYAxis = true;\n      el.hideYTicks = true;\n\n      this.showYLabel = false;\n      this.showYTicks = false;\n\n      const yLabelItem2 = this.htmlElement.querySelector('#yLabel') as HTMLInputElement;\n      yLabelItem2.checked = false;\n      yLabelItem2.disabled = true;\n\n      const yTicksItem2 = this.htmlElement.querySelector('#yTicks') as HTMLInputElement;\n      yTicksItem2.checked = false;\n      yTicksItem2.disabled = true;\n    } else {\n      el.yLabel = 'Score';\n      el.hideYAxis = false;\n      el.hideYTicks = false;\n\n      this.showYLabel = true;\n      this.showYTicks = true;\n\n      const yLabelItem3 = this.htmlElement.querySelector('#yLabel') as HTMLInputElement;\n      yLabelItem3.checked = true;\n      yLabelItem3.disabled = false;\n      const yTicksItem3 = this.htmlElement.querySelector('#yTicks') as HTMLInputElement;\n      yTicksItem3.checked = true;\n      yTicksItem3.disabled = false;\n    }\n  }\n\n\n  toggleShowHideYTicks(args: any): any {\n    this.showYTicks = !this.showYTicks;\n    this.getChartEl(args).hideYTicks = !this.showYTicks;\n  }\n\n  public generateLineChartData(numLines: any): any {\n    const dat = new Date(1546318800000);\n    const msd = 86400000;\n\n    return this.data.slice(0, numLines);\n  }\n\n  public generateRandomLineChartData(): any {\n    const dat = new Date(1546318800000);\n    const msd = 86400000;\n    const iterations = Math.floor(Math.random() * 6) + 1;\n    /* const data = []; */\n\n    for (let i = 0; i < iterations; i++) {\n      const u = i + 1;\n      const user = `User ${u}`;\n\n      this.data.push({\n        label: user,\n        name: user.toUpperCase(),\n        data: [\n          {\n            x: dat.getTime() + (this.msd * 10),\n            y: this.randomizer()\n          },\n          {\n            x: dat.getTime() + (this.msd * 20),\n            y: this.randomizer()\n          },\n          {\n            x: dat.getTime() + (this.msd * 30),\n            y: this.randomizer()\n          },\n          {\n            x: dat.getTime() + (this.msd * 40),\n            y: this.randomizer()\n          },\n          {\n            x: dat.getTime() + (this.msd * 50),\n            y: this.randomizer()\n          },\n          {\n            x: dat.getTime() + (this.msd * 60),\n            y: this.randomizer()\n          }\n        ]\n      });\n    }\n\n    return this.data;\n  }\n\n  public generateRandomData(): any {\n    this.getChartEl('nexus-line-chart').chartData = this.generateRandomLineChartData();\n  }\n\n  public selectNumLines(numLines: any): any {\n    const chData = this.generateLineChartData(numLines);\n    this.getChartEl('nexus-line-chart').chartData = chData;\n  }\n\n  public addListeners(): any {\n    const xLabelInputMethod = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInputMethod.addEventListener('keyup', (evt) => {\n      if (evt.key === 'Enter') {\n        const evtVal = evt.target as HTMLInputElement;\n        this.changeXLabel('nexus-line-chart', evtVal.value);\n      }\n    });\n\n    const yLabelInputMethod = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInputMethod.addEventListener('keyup', (evt) => {\n      if (evt.key === 'Enter') {\n        const evtVal = evt.target as HTMLInputElement;\n        this.changeYLabel('nexus-line-chart', evtVal.value);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.htmlElement.querySelector('nexus-line-chart').chartData = this.generateLineChartData(3);\n    this.addListeners();\n    this.selectNumLines(8);\n    this.htmlElement.querySelector('nexus-line-chart').canvasHeight = 450;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '@nexus/core/dist/styles/variables';\n\nh1,\nh2,\nh3 {\n  color: $grey-700;\n}\n\na {\n  color: $blue-400;\n  text-decoration: none;\n}\n\na:hover {\n  color: $blue-700;\n  text-decoration: none;\n}\n\npre.code {\n  white-space: pre-wrap;\n  background: hsl(30, 80%, 90%);\n  padding: 1.25 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  font-size: 1.25 * $rhythm;\n  border: solid 1px $grey-100;\n  color: $grey-900;\n}\n\n/*********************************************\n * Form\n *********************************************/\n\nselect {\n  padding: $rhythm 2 * $rhythm $rhythm $rhythm;\n  display: inline-block;\n  line-height: 3 * $rhythm;\n  font-size: 2 * $rhythm;\n  width: 100%;\n}\n\n/*********************************************\n * Classes\n *********************************************/\n\nbutton.action {\n  background: $grey-700;\n  font-size: 2 * $rhythm;\n  color: $grey-100;\n  height: 3.5 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  padding: 0 1.25 * $rhythm;\n  cursor: pointer;\n}\n\nbutton.action:hover {\n  background: $grey-900;\n}\n\ndiv.btn-item,\ndiv.cbx-item,\ndiv.select-item {\n  padding-left: 0.5 * $rhythm;\n  padding-right: 0.5 * $rhythm;\n}\n\ndiv.chart {\n  min-height: 60 * $rhythm;\n}\n\ndiv.inverse {\n  background: $grey-900;\n}\n\ndiv.control-category {\n  border-bottom: solid 1px $grey-100;\n  padding-bottom: 0.5 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n  font-weight: 600;\n}\n\ndiv.control-item {\n  margin-top: 1.25 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n}\n\ndiv.header-link {\n  margin-right: 2 * $rhythm;\n}\n\ndiv.header-link a {\n  color: $grey-100;\n}\n\ndiv.header-link a:hover {\n  color: $orange-400;\n}\n\ndiv.hoz-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.1em;\n}\n\ndiv.page-title {\n  font-size: 2.25 * $rhythm;\n  color: $grey-900;\n  padding: 0.5 * $rhythm $rhythm;\n  border-radius: 0.5 * $rhythm;\n  background: $grey-100;\n  margin-bottom: 2 * $rhythm;\n  text-align: center;\n}\n\ndiv.select-el {\n  margin-top: 0.5 * $rhythm;\n}\n\ndiv.select-group {\n  font-size: 2 * $rhythm;\n  font-style: italic;\n  color: $blue-400;\n}\n\ndiv.select-item > label {\n  font-size: 0.8em;\n}\n\ndiv.select-item > label,\ndiv.select-item > select {\n  display: inline;\n}\n\n.position {\n  position: inherit;\n}\n",
                    "styleUrl": "./line-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 161,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"wrapper\" class=\"nexus-row\">\n    <div id=\"control-container\" class=\"nexus-col-xs-4 nexus-col-lg-3\">\n        <div class=\"control-category\">X-axis</div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"x-label\" id=\"xLabel\" checked (change)=\"toggleShowHideXLabel('nexus-line-chart')\">Show\n                Label</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"x-ticks\" id=\"xTicks\" checked (change)=\"toggleShowHideXTicks('nexus-line-chart')\">Show\n                Tick Values</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"hide-x\" id=\"hideX\" (change)=\"toggleShowHideXAxis('nexus-line-chart')\">Hide Entire\n                X-axis</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-label for=\"xTickSize\" class=\"select\">Tick Size / Length</nexus-label>\n            <select name=\"x-tick-size\" id=\"xTickSize\" (input)=\"selectXTickSize('nexus-line-chart')\">\n                <option value=\"2\" selected>2</option>\n                <option value=\"4\">4</option>\n                <option value=\"10\">10</option>\n                <option value=\"12\">12</option>\n                <option value=\"16\">16</option>\n            </select>\n        </div>\n        <div class=\"control-item\">\n            <nexus-label for=\"xLabelInput\" class=\"select\">Label</nexus-label>\n            <nexus-input type=\"text\" placeholder=\"Enter text\" id=\"xLabelInput\"></nexus-input>\n        </div>\n\n        <div class=\"control-category\">Y-axis</div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"y-label\" id=\"yLabel\" checked (change)=\"toggleShowHideYLabel('nexus-line-chart')\">Show\n                Label</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"y-ticks\" id=\"yTicks\" checked (change)=\"toggleShowHideYTicks('nexus-line-chart')\">Show\n                Tick Values</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"hide-y\" id=\"hideY\" (change)=\"toggleShowHideYAxis('nexus-line-chart')\">Hide Entire\n                Y-axis</nexus-checkbox>\n        </div>\n        <div class=\"control-item\">\n            <nexus-label for=\"yTickSize\" class=\"select\">Tick Size / Length</nexus-label>\n            <select name=\"y-tick-size\" id=\"yTickSize\" (input)=\"selectYTickSize('nexus-line-chart')\">\n                <option value=\"2\" selected>2</option>\n                <option value=\"4\">4</option>\n                <option value=\"10\">10</option>\n                <option value=\"12\">12</option>\n                <option value=\"16\">16</option>\n            </select>\n        </div>\n        <div class=\"control-item\">\n            <nexus-label for=\"yLabelInput\" class=\"select\">Label</nexus-label>\n            <nexus-input type=\"text\" placeholder=\"Enter text\" id=\"yLabelInput\"></nexus-input>\n        </div>\n\n        <!-- miscellaneous options -->\n        <div class=\"control-category\">Options</div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"show-gridlines\" id=\"showGridlines\"\n                (change)=\"toggleGridlines('nexus-line-chart')\">Gridlines</nexus-checkbox>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"inverse\" id=\"inverse\"\n                (change)=\"toggleInverse('nexus-line-chart')\">Inverse</nexus-checkbox>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox name=\"show-legend\" id=\"showLegend\"\n                (change)=\"toggleLegend('nexus-line-chart')\">Legend</nexus-checkbox>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-checkbox type=\"checkbox\" name=\"show-vertices\" id=\"showVertices\" checked\n                (change)=\"toggleVertices('nexus-line-chart')\">Vertices</nexus-checkbox>\n        </div>\n\n        <!-- axis stuff -->\n        <div class=\"control-item\">\n            <nexus-label for=\"axisLabelFontSize\" class=\"select\">Axis Label Font Size</nexus-label>\n            <select name=\"axis-label-font-size\" id=\"axisLabelFontSize\"\n                (input)=\"selectAxisLabelFontSize('nexus-line-chart')\">\n                <option value=\"9\">9px</option>\n                <option value=\"12\">12px</option>\n                <option value=\"14\" selected>14px</option>\n                <option value=\"16\">16px</option>\n                <option value=\"20\">20px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"axisTickFontFamily\" class=\"select\">Axis Tick Font Family</nexus-label>\n            <select name=\"axis-tick-font-family\" id=\"axisTickFontFamily\"\n                (input)=\"selectAxisTickFontFamily('nexus-line-chart')\">\n                <option value=\"sans\" selected>sans-serif</option>\n                <option value=\"serif\">serif</option>\n                <option value=\"monospace\">monospace</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"axisTickFontSize\" class=\"select\">Axis Tick Font Size</nexus-label>\n            <select name=\"axis-tick-font-size\" id=\"axisTickFontSize\"\n                (input)=\"selectAxisTickFontSize('nexus-line-chart')\">\n                <option value=\"8\">8px</option>\n                <option value=\"9\">9px</option>\n                <option value=\"10\" selected>10px</option>\n                <option value=\"12\">12px</option>\n            </select>\n        </div>\n\n        <!-- color scheme --->\n        <div class=\"control-item\">\n            <nexus-label for=\"colorScheme\" class=\"select\">Color Scheme</nexus-label>\n            <select name=\"color-scheme\" id=\"colorScheme\" (input)=\"selectColorScheme('nexus-line-chart')\">\n                <option value=\"category10\" selected>Category 10</option>\n                <option value=\"accent\">Accent</option>\n                <option value=\"paired\">Paired</option>\n                <option value=\"set1\">Set 1</option>\n                <option value=\"set2\">Set 2</option>\n                <option value=\"set3\">Set 3</option>\n                <option value=\"black\">Black</option>\n                <option value=\"gray\">Gray</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"legendFontSize\" class=\"select\">Legend Font Size</nexus-label>\n            <select name=\"legend_font_size\" id=\"legendFontSize\" (input)=\"selectLegendFontSize('nexus-line-chart')\">\n                <option value=\"10\">10px</option>\n                <option value=\"12\" selected>12px</option>\n                <option value=\"14\">14px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"interpolation\" class=\"select\">Line Interpolation</nexus-label>\n            <select name=\"interp\" id=\"interpolation\" (input)=\"selectInterpolation('nexus-line-chart')\">\n                <option value=\"linear\" selected>linear</option>\n                <option value=\"basis\">basis</option>\n                <option value=\"monotone\">monotone</option>\n                <option value=\"step\">step</option>\n                <option value=\"step-before\">step before</option>\n                <option value=\"step-after\">step-after</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"lineStroke\" class=\"select\">Line Stroke</nexus-label>\n            <select name=\"line_stroke\" id=\"lineStroke\" (input)=\"selectLineStroke('nexus-line-chart')\">\n                <option value=\"1\" selected>1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n            </select>\n        </div>\n\n        <!-- top, right, bottom, left margins -->\n        <div class=\"control-item\">\n            <nexus-label for=\"marginBottom\" class=\"select\">Margin Bottom</nexus-label>\n            <select name=\"margin-bottom\" id=\"marginBottom\" (input)=\"selectMargin('marginBottom', 'nexus-line-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"marginLeft\" class=\"select\">Margin Left</nexus-label>\n            <select name=\"margin_left\" id=\"marginLeft\" (input)=\"selectMargin('marginLeft', 'nexus-line-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"marginRight\" class=\"select\">Margin Right</nexus-label>\n            <select name=\"margin_right\" id=\"marginRight\" (input)=\"selectMargin('marginRight', 'nexus-line-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n\n        <div class=\"control-item\">\n            <nexus-label for=\"marginTop\" class=\"select\">Margin Top</nexus-label>\n            <select name=\"margin_top\" id=\"marginTop\" (input)=\"selectMargin('marginTop', 'nexus-line-chart')\">\n                <option value=\"25\" selected>25px</option>\n                <option value=\"50\">50px</option>\n                <option value=\"75\">75px</option>\n            </select>\n        </div>\n    </div>\n\n    <!-- chart container -->\n    <div id=\"chart-container\" class=\"nexus-col-xs-4 nexus-col-lg-9 position\">\n        <div class=\"page-title\">&lt;nexus-line-chart&gt;</div>\n\n        <div class=\"hoz-group\">\n            <span class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumLines(1)\">1 Line</button>\n            </span>\n            <span class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumLines(2)\">2 Lines</button>\n            </span>\n            <span class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumLines(3)\">3 Lines</button>\n            </span>\n            <span class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"selectNumLines(4)\">4 Lines</button>\n            </span>\n            <span class=\"btn-item\">\n                <button type=\"button\" class=\"nexus-btn\" (click)=\"generateRandomData()\">Random</button>\n            </span>\n        </div>\n\n        <div class=\"chart\">\n            <nexus-line-chart chart-id=\"NexusLineChart\" margin-left=\"50\" margin-right=\"50\" responsive vertices\n                x-label=\"Date\" x-tick-format=\"M/D/YY\" y-label=\"Score\" y-tick-format=\"localestring\"\n                [chartData]=\"data\"></nexus-line-chart>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-9328ccbb7edeac19fcc959d6ebf75998408a807f4d4dcdd626ab7478363e5ac35baa43241574c25ba53386576c0cdaa24ab765d4d332b6c6c6ec71aca499d680-1",
            "file": "src/app/sb/components/line-chart/01_line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bar-chart",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_line-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dat",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "[\n    {\n      label: 'User 1',\n      name: 'Mark',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 71\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 251\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 357\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 414\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 270\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 33\n        }\n      ]\n    },\n    {\n      label: 'User 2',\n      name: 'Fred',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 418\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 380\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 393\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 107\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 3\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 333\n        }\n      ]\n    },\n    {\n      label: 'User 3',\n      name: 'Diane',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 473\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 311\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 405\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 65\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 101\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 18\n        }\n      ]\n    },\n    {\n      label: 'User 4',\n      name: 'Jackie',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 56\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: -7\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 68\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: -137\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 208\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 470\n        }\n      ]\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "htmlElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "msd",
                    "defaultValue": "86400000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './01_line-chart.component.html'\n})\nexport default class LineChartComponent implements OnInit {\n  public dat = new Date();\n\n  public msd = 86400000;\n\n  public data: Array<any> = [\n    {\n      label: 'User 1',\n      name: 'Mark',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 71\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 251\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 357\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 414\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 270\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 33\n        }\n      ]\n    },\n    {\n      label: 'User 2',\n      name: 'Fred',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 418\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 380\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 393\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 107\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 3\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 333\n        }\n      ]\n    },\n    {\n      label: 'User 3',\n      name: 'Diane',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 473\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: 311\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 405\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: 65\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 101\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 18\n        }\n      ]\n    },\n    {\n      label: 'User 4',\n      name: 'Jackie',\n      data: [\n        {\n          x: this.dat.getTime() + (this.msd * 10),\n          y: 56\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 20),\n          y: -7\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 30),\n          y: 68\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 40),\n          y: -137\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 50),\n          y: 208\n        },\n        {\n          x: this.dat.getTime() + (this.msd * 60),\n          y: 470\n        }\n      ]\n    }\n  ];\n\n  private htmlElement: HTMLElement;\n\n  constructor(public elRef: ElementRef) {}\n\n  ngOnInit(): void {\n    this.htmlElement.querySelector('nexus-line-chart').chartData = this.data;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 136,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LineChartComponent-1",
            "templateData": "<nexus-line-chart chart-id=\"NexusLineChart\" margin-left=\"50\" margin-right=\"50\" responsive vertices x-label=\"Date\"\n    x-tick-format=\"M/D/YY\" y-label=\"Score\" y-tick-format=\"localestring\" canvas-height=\"500\" [chartData]=\"data\"></nexus-line-chart>"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-f62c6eded5263b0960af5869ba6c6e271096f00c641efc4ba48b00e0339165276193d1eb4fec5d0650597fc7728ee049da16e5a3f11e7525b2fe38f4b04a4007",
            "file": "src/app/components/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fullscreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  @Input() show: boolean = true;\n\n  @Input() fullscreen: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-loader [fullscreen]=\"fullscreen\" [show]=\"show\"></nexus-loader>\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-64335504d04d665d0a2f10d69cc43a19d8a6d9301e070997af5516ae07d5da6b5d8f819e81feaaffa8a3f5980557a2efa48d1c727f99be027d77465421888104-1",
            "file": "src/app/sb/components/loader/01_loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fullscreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './01_loader.component.html'\n})\nexport default class LoaderComponent {\n  @Input() show: boolean = true;\n\n  @Input() fullscreen: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LoaderComponent-1",
            "templateData": "<nexus-loader [fullscreen]=\"fullscreen\" [show]=\"show\"></nexus-loader>\n"
        },
        {
            "name": "LoaderExamplesComponent",
            "id": "component-LoaderExamplesComponent-56255f297a44d94bda6c28397b3ab3901f131d7b981ef353af7da538464848ea90446ad539e46a048147333ff58015f113ff374bc07fdcefd45fbcb93d6fc72a",
            "file": "src/app/components/loader-examples/loader-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader-examples",
            "styleUrls": [
                "./loader-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loader-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loader-examples',\n  templateUrl: './loader-examples.component.html',\n  styleUrls: ['./loader-examples.component.scss']\n})\nexport class LoaderExamplesComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./loader-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"nexus-btn\">\n  <nexus-loader [show]=\"true\"></nexus-loader>\n  Click Me!\n</button>\n\n\n"
        },
        {
            "name": "LoaderOverlayComponent",
            "id": "component-LoaderOverlayComponent-04be29b4f49ef0c3419632e0e1187000aa01c80883856bf339bf35f1254e136a93fd69fb20ea08c2680c8eb74aecf8bb4c0a0e3cab8da1afdaf0d9db88be4388",
            "file": "src/app/sb/components/loader/02_overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader-with-overlay",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_overlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loader-with-overlay',\n  templateUrl: './02_overlay.component.html'\n})\nexport default class LoaderOverlayComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class='nexus-center-xs nexus-pt-5'>\n  <button class=\"nexus-btn nexus-btn-large nexus-btn-primary\">\n    <nexus-loader [show]=\"true\"></nexus-loader>In Progress</button>\n</div>"
        },
        {
            "name": "LogoAndNameComponent",
            "id": "component-LogoAndNameComponent-abc18ec1e1013033f17293f181d15d874b969867cc7e9a77e4d45e93900801c88865dece2c04747da2ec87a8f48fd7063c2edac5d7d19f9c38cdd16029a2b590",
            "file": "src/app/sb/components/avatar/06_logoAndName.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-logo-name",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./06_logoAndName.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "logoIcon",
                    "defaultValue": "logoAndName.logoIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "defaultValue": "logoAndName.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "defaultValue": "logoAndName.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { logoAndName } from '../../constants';\n@Component({\n  selector: 'app-avatar-examples-logo-name',\n  templateUrl: './06_logoAndName.component.html'\n})\nexport default class LogoAndNameComponent {\n  name = logoAndName.name;\n\n  size = logoAndName.size;\n\n  logoIcon = logoAndName.logoIcon;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xl-2\">\n  <p>\n    <nexus-avatar [avatarSize]=\"size\" [userName]=\"name\" [avatarLogoIcon]=\"logoIcon\"> </nexus-avatar>\n  </p>\n</div>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-e002dcb7ddc1dc04e213c220de9c7d4bc38c8c4f0ed4de8a0d3eb9bd6fd7d86bb369792949974b80bb67e54e6fd81ec45745c23f8764bd40815868a928046914",
            "file": "src/app/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n  @Input() open: boolean = false;\n\n  @Input() position: string = 'left';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"nexus-btn-primary\" (click)=\"open = true\">Open Menu</button>\n\n<nexus-menu [open]=\"open\" [position]=\"position\" (closeEvent)=\"open = false\">\n  <nexus-menu-item>\n    <a href=\"javascript:void(0)\">Item 1</a>\n  </nexus-menu-item>\n\n  <nexus-menu-item>\n    <a href=\"javascript:void(0)\">Item 2</a>\n  </nexus-menu-item>\n\n  <nexus-menu-item>\n    <a href=\"javascript:void(0)\">Item 3</a>\n  </nexus-menu-item>\n</nexus-menu>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-a4abb0f93da421ae917d5bacdc016340b6e44363914c18376a8018102d96c5f7ed23cbb582517ab36a3bbb5fa4907e3ccfb5777aaa546bef39256e047bc3cac7-1",
            "file": "src/app/sb/components/menu/01_menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './01_menu.component.html'\n})\nexport default class MenuComponent {\n  @Input() open: boolean = false;\n\n  @Input() position: string = 'left';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MenuComponent-1",
            "templateData": "<button class=\"nexus-btn-primary\" (click)=\"open = true\">Open Menu</button>\n\n<nexus-menu [open]=\"open\" [position]=\"position\" (closeEvent)=\"open = false\">\n  <nexus-menu-item>\n    <a href=\"javascript:void(0)\">Item 1</a>\n  </nexus-menu-item>\n\n  <nexus-menu-item>\n    <a href=\"javascript:void(0)\">Item 2</a>\n  </nexus-menu-item>\n\n  <nexus-menu-item>\n    <a href=\"javascript:void(0)\">Item 3</a>\n  </nexus-menu-item>\n</nexus-menu>\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-34da09a10976ba9e5007f8d4acf01969c08374bfbe0da68345c819152dc1e13f4894ff69dd68bce53f23cf4f45c69c286bfd256682299547f6a130016ea599f1",
            "file": "src/app/components/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal",
            "styleUrls": [
                "./modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fullscreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleCloseEvent",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent {\n  @Input() show: boolean = false;\n\n  @Input() size: string = 'md';\n\n  @Input() fullscreen: boolean = false;\n\n  handleCloseEvent = () => {};\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./modal.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-pt-6\">\n  <button class=\"nexus-btn-primary nexus-btn-large\" (click)=\"show = true\">Show modal!</button>\n</div>\n\n<nexus-modal id=\"modal\" [show]=\"show\" [size]=\"size\" [fullscreen]=\"fullscreen\" (closeEvent)=\"handleCloseEvent()\">\n  <nexus-modal-header (closeEvent)=\"show = false\">\n    Header Content\n    <nexus-modal-header-subtitle>Placeholder</nexus-modal-header-subtitle>\n  </nexus-modal-header>\n  <nexus-modal-body>\n    <p>\n      From mobility to health care to future cities, traditional industry boundaries are being disrupted, as sectors\n      converge to adapt to technological and societal changes.\n    </p>\n    <p>\n      Navigating this fast-changing environment requires agility and fresh thinking. As we reinvent how we work, live\n      and play, EY is helping clients embrace industry disruption as an opportunity.\n    </p>\n  </nexus-modal-body>\n  <nexus-modal-footer>\n    <button (click)=\"show = false\" class=\"nexus-btn-primary\">Confirm</button>\n    <button (click)=\"show = false\" class=\"nexus-btn\">Cancel</button>\n  </nexus-modal-footer>\n</nexus-modal>\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-e05896352b0ff5dd80ef85f667fd5ff858ba3eb66bee18f7c2ba81564564a2f92faaf12330d30c7b4481cfe035cc9818cf92793ff50fa748f8b52a7b4b0b5248-1",
            "file": "src/app/sb/components/modal/01_modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fullscreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultModal",
                    "defaultValue": "defaultModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "email",
                    "defaultValue": "defaultModal.emailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "handleCloseEvent",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isPasswordValid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isUserNameValid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "userName",
                    "defaultValue": "defaultModal.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "updateEmailAddress",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserName",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { defaultModal } from '../../constants';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './01_modal.component.html'\n})\nexport default class ModalComponent {\n  @Input() show: boolean = false;\n\n  @Input() size: string = 'md';\n\n  @Input() fullscreen: boolean = false;\n\n  defaultModal = defaultModal;\n\n  userName = defaultModal.name;\n\n  email = defaultModal.emailAddress;\n\n  isUserNameValid = true;\n\n  isPasswordValid = true;\n\n  handleCloseEvent = () => {};\n\n  validate(event) {\n    return this.isUserNameValid && this.isPasswordValid;\n  }\n\n  updateUserName(event) {\n    this.userName = event.target.value;\n  }\n\n  updateEmailAddress(event) {\n    this.email = event.target.value;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ModalComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-pt-6\">\n  <button class=\"nexus-btn-primary nexus-btn-large\" (click)=\"show = true\">{{defaultModal.buttonText}}</button>\n</div>\n\n<nexus-modal id=\"modal\" [show]=\"show\" [size]=\"size\" [fullscreen]=\"fullscreen\" (closeEvent)=\"handleCloseEvent()\">\n  <nexus-modal-header (closeEvent)=\"show = false\">\n    Nexus\n    <nexus-modal-header-subtitle>{{defaultModal.header}}</nexus-modal-header-subtitle>\n  </nexus-modal-header>\n  <nexus-modal-body>\n    <div className=\"nexus-row\">\n      <div className=\"nexus-col-md-4 nexus-col-lg-6 nexus-col-xl-6\">\n        <nexus-form-field>\n          <nexus-label>{{defaultModal.usernameText}}</nexus-label>\n          <nexus-input [placeholder]=\"userName\" required (input)=\"updateUserName($event)\"></nexus-input>\n\n          <nexus-label>{{defaultModal.emailText}}</nexus-label>\n          <nexus-input [placeholder]=\"email\" required (input)=\"updateEmailAddress($event)\"></nexus-input>\n\n          <nexus-label>{{defaultModal.passwordText}}</nexus-label>\n          <nexus-input required type=\"password\"></nexus-input>\n        </nexus-form-field>\n      </div>\n    </div>\n  </nexus-modal-body>\n  <nexus-modal-footer>\n    <button (click)=\"validate($event)\" class=\"nexus-btn-primary\">{{defaultModal.confirm}}</button>\n    <button (click)=\"show = false\" class=\"nexus-btn\">{{defaultModal.cancel}}</button>\n  </nexus-modal-footer>\n</nexus-modal>"
        },
        {
            "name": "ModalExamplesComponent",
            "id": "component-ModalExamplesComponent-0f746bec3003ed94d16ccf89c8cd57d29eaa5305b699374394b47cc8c3e0cd64e6725aab38c4de48f20592fa38431205bda7e5bd7dbf6653332d4a5e896887df",
            "file": "src/app/components/modal-examples/modal-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-examples",
            "styleUrls": [
                "./modal-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fullscreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "modal1",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "modal2",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-examples',\n  templateUrl: './modal-examples.component.html',\n  styleUrls: ['./modal-examples.component.scss']\n})\nexport class ModalExamplesComponent {\n  modal1 = false;\n\n  modal2 = false;\n\n  fullscreen = false;\n\n  size: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./modal-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"row\">\n  <div class=\"nexus-col-md-10\">\n    <p class=\"nexus-h5\">Modal Fullscreen: <code> true | false </code>.</p>\n\n    <div class=\"nexus-center-xs nexus-pt-6\">\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal1 = true; fullscreen = true\">\n        Full Screen - True\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal1 = true; fullscreen = false\">\n        Full Screen - False\n      </button>\n    </div>\n    <nexus-modal id=\"modalFullscreen\" [show]=\"modal1\" [fullscreen]=\"fullscreen\">\n      <nexus-modal-header (closeEvent)=\"modal1 = false\">\n        Header Content\n        <nexus-modal-header-subtitle>Placeholder</nexus-modal-header-subtitle>\n      </nexus-modal-header>\n      <nexus-modal-body>\n        <p>\n          From mobility to health care to future cities, traditional industry boundaries are being disrupted, as sectors\n          converge to adapt to technological and societal changes.\n        </p>\n        <p>\n          Navigating this fast-changing environment requires agility and fresh thinking. As we reinvent how we work,\n          live and play, EY is helping clients embrace industry disruption as an opportunity.\n        </p>\n      </nexus-modal-body>\n      <nexus-modal-footer>\n        <button (click)=\"modal1 = false; fullscreen = false\" class=\"nexus-btn-primary\">Confirm</button>\n        <button (click)=\"modal1 = false; fullscreen = false\" class=\"nexus-btn\">Cancel</button>\n      </nexus-modal-footer>\n    </nexus-modal>\n  </div>\n</div>\n<br />\n\n<div class=\"row\">\n  <div class=\"nexus-col-md-10\">\n    <p class=\"nexus-h5\">Modal Size: <code> xs | sm | md | lg | xl | full </code>.</p>\n\n    <div class=\"nexus-center-xs nexus-pt-6\">\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = ''\">\n        Show modal - Default\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = 'xs'\">\n        Show modal - xs\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = 'sm'\">\n        Show modal - sm\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = 'md'\">\n        Show modal - md\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = 'lg'\">\n        Show modal - lg\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = 'xl'\">\n        Show modal - xl\n      </button>\n      <button class=\"nexus-btn-primary nexus-btn-large nexus-m-1\" (click)=\"modal2 = true; size = 'full'\">\n        Show modal - full\n      </button>\n    </div>\n    <nexus-modal id=\"modal\" [show]=\"modal2\" [size]=\"size\" [fullscreen]=\"false\">\n      <nexus-modal-header (closeEvent)=\"modal2 = false\">\n        Header Content\n        <nexus-modal-header-subtitle>Placeholder</nexus-modal-header-subtitle>\n      </nexus-modal-header>\n      <nexus-modal-body>\n        <p>\n          Current modal size is <strong>{{ size }}</strong>\n        </p>\n        <p>\n          From mobility to health care to future cities, traditional industry boundaries are being disrupted, as sectors\n          converge to adapt to technological and societal changes.\n        </p>\n        <p>\n          Navigating this fast-changing environment requires agility and fresh thinking. As we reinvent how we work,\n          live and play, EY is helping clients embrace industry disruption as an opportunity.\n        </p>\n      </nexus-modal-body>\n      <nexus-modal-footer>\n        <button (click)=\"modal2 = false\" class=\"nexus-btn-primary\">Confirm</button>\n        <button (click)=\"modal2 = false\" class=\"nexus-btn\">Cancel</button>\n      </nexus-modal-footer>\n    </nexus-modal>\n  </div>\n</div>\n<br />\n"
        },
        {
            "name": "ModalTOUComponent",
            "id": "component-ModalTOUComponent-b98e02816370a8b6b4d5f124c2fa3aa6e2a02d85d139359514998801dd455833280526d72b5299eaf7e43e9ac61a6f977b1111b9ec6a2a78096ee39773f3b217",
            "file": "src/app/sb/components/modal/02_termsOfUse.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-tou",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_termsOfUse.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fullscreen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleCloseEvent",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "notificationMessage",
                    "defaultValue": "termsOfUse.notificationFailure",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "notificationType",
                    "defaultValue": "'error'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "termsOfUse",
                    "defaultValue": "termsOfUse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "updateIsChecked",
                    "args": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { termsOfUse } from '../../constants';\n\n@Component({\n  selector: 'app-modal-tou',\n  templateUrl: './02_termsOfUse.component.html'\n})\nexport default class ModalTOUComponent {\n  @Input() show: boolean = false;\n\n  @Input() fullscreen: boolean = false;\n\n  termsOfUse = termsOfUse;\n\n  isChecked = false;\n\n  notificationType = 'error';\n\n  notificationMessage = termsOfUse.notificationFailure;\n\n  handleCloseEvent = () => { };\n\n  updateIsChecked(status: boolean) {\n    this.isChecked = status;\n    this.notificationType = this.isChecked ? 'success' : 'error';\n    this.notificationMessage = this.isChecked ? termsOfUse.notificationSuccess : termsOfUse.notificationFailure;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-pt-6\">\n  <button class=\"nexus-btn-primary nexus-btn-large\"\n    (click)=\"show = true\">{{termsOfUse.acceptTermsAndConditions}}</button>\n</div>\n<div class=\"nexus-center-xs nexus-mt-4\">\n  <nexus-notification [variant]=\"notificationType\">{{notificationMessage}}</nexus-notification>\n</div>\n\n<nexus-modal id=\"modal\" [show]=\"show\" size=\"md\" [fullscreen]=\"fullscreen\" (closeEvent)=\"handleCloseEvent()\">\n  <nexus-modal-header (closeEvent)=\"show = false\">\n    {{termsOfUse.title}}\n    <nexus-modal-header-subtitle>{{termsOfUse.subTitle}}</nexus-modal-header-subtitle>\n  </nexus-modal-header>\n  <nexus-modal-body>\n    <h4 className='nexus-h4'>{{termsOfUse.agreement}}</h4>\n    <p [innerHTML]=\"termsOfUse.details\"></p>\n\n    <nexus-checkbox [checked]=\"isChecked\"\n      (input)=\"updateIsChecked(!this.isChecked)\">{{termsOfUse.checkBoxText}}</nexus-checkbox>\n  </nexus-modal-body>\n  <nexus-modal-footer>\n    <button (click)=\"show = false\" class=\"nexus-btn-primary\">{{termsOfUse.submit}}</button>\n  </nexus-modal-footer>\n</nexus-modal>"
        },
        {
            "name": "MultiselectComponent",
            "id": "component-MultiselectComponent-157750c66db0de2868454c58d2881e332f514592a9ed4f690e8137d3abefba1763fc77a2d773a9fbda2c87653f7db4395acbd8c9ab902ce228152af54d7bec85",
            "file": "src/app/sb/components/select/03_multiselect.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-multiselect",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_multiselect.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "delimiter",
                    "defaultValue": "'::'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "handleCloseEvent",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "handleMultiSelectData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "multiSelectDefaultPlaceholder",
                    "defaultValue": "'Please Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "multiSelectOption",
                    "defaultValue": "multiselectOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "multiSelectValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "objectKeys",
                    "defaultValue": "Object.keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selectOrDeSelectAllOptions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "setMultiSelectPlaceholder",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "singleSelectValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { multiselectOptions } from '../../constants';\n\n@Component({\n  selector: 'app-multiselect',\n  templateUrl: './03_multiselect.component.html'\n})\nexport default class MultiselectComponent implements OnInit {\n  multiSelectOption = multiselectOptions;\n\n  multiSelectDefaultPlaceholder = 'Please Select';\n\n  delimiter = '::';\n\n  objectKeys = Object.keys;\n\n  singleSelectValue = '';\n\n  multiSelectValue = '';\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.multiSelectValue = this.setMultiSelectPlaceholder();\n  }\n\n  handleMultiSelectData = (eventData) => {\n    if (eventData.detail.key) {\n      eventData.preventDefault();\n      const updateSelectState = [...this.multiSelectOption];\n      const objIndex = updateSelectState.findIndex((obj) => obj.value === eventData.detail.key);\n      updateSelectState[objIndex].isSelected = eventData.detail.status;\n      this.multiSelectOption = [...updateSelectState];\n      this.multiSelectValue = this.setMultiSelectPlaceholder();\n      // console.log(updateSelectState[objIndex].isSelected);\n      // console.log(this.multiSelectOption);\n      // multiselectOptions.forEach((obj) => {\n      //   if (obj.isSelected === true)\n      //     this.selectOrDeSelectAllOptions(event)\n      // });\n    }\n  };\n\n  setMultiSelectPlaceholder = () => {\n    const selecteddataObj = [];\n    const delimiter = '::';\n    this.multiSelectOption.forEach((element) => {\n      if (element.isSelected) {\n        selecteddataObj.push(element);\n      }\n    });\n    const resStr = selecteddataObj.map((elem) => elem.label ? elem.label : elem.value).join(delimiter);\n\n    return resStr ? resStr : this.multiSelectDefaultPlaceholder;\n  };\n\n  selectOrDeSelectAllOptions = (event) => {\n    const updateSelectState = [...this.multiSelectOption];\n    updateSelectState.forEach((obj) => obj.isSelected = event.target.checked);\n    this.multiSelectOption = [...updateSelectState];\n    this.multiSelectValue = this.setMultiSelectPlaceholder();\n  };\n\n  handleCloseEvent = (_event) => { };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nexus-col-md-3\">\n    <nexus-form-field>\n        <nexus-label>Select an option MultiSelect</nexus-label>\n        <nexus-select type=\"custom\" value=\"{{ multiSelectValue }}\" delimiter=\"::\"\n            (triggerSelection)=\"handleMultiSelectData($event)\" multiple (closeEvent)=\"handleCloseEvent($event)\">\n            <nexus-option (click)=\"selectOrDeSelectAllOptions($event)\">\n                <nexus-checkbox>Select All</nexus-checkbox>\n            </nexus-option>\n            <nexus-option *ngFor=\"let element of multiSelectOption\" value=\"{{ element.value }}\"\n                selected=\"{{ element.isSelected }}\">\n                <nexus-checkbox checked=\"{{ element.isSelected }}\">{{ element.value }}</nexus-checkbox>\n            </nexus-option>\n        </nexus-select>\n    </nexus-form-field>\n</div>"
        },
        {
            "name": "NameValidationComponent",
            "id": "component-NameValidationComponent-c53326ad566afc213a22dd634158f3a5e6590eb832dbd6a8a23395fc71a1f9bec11050f72d1cc41f7b9027ed81920d4ed00ae9570f84a530031cc7de434b99f9",
            "file": "src/app/sb/components/error-message/03_nameValidation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-message-name-validation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_nameValidation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bioSection",
                    "defaultValue": "new FormGroup({\n    firstName: new FormControl('', [Validators.required])\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "requiredText",
                    "defaultValue": "nameValidation.requiredText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "nameValidation.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { nameValidation } from '../../constants';\n\n@Component({\n  selector: 'app-error-message-name-validation',\n  templateUrl: './03_nameValidation.component.html'\n})\nexport default class NameValidationComponent {\n  title = nameValidation.title;\n\n  requiredText = nameValidation.requiredText;\n\n  bioSection = new FormGroup({\n    firstName: new FormControl('', [Validators.required])\n  });\n\n  get userFirstName(): any {\n    return this.bioSection.get('firstName');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "userFirstName": {
                    "name": "userFirstName",
                    "getSignature": {
                        "name": "userFirstName",
                        "type": "any",
                        "returnType": "any",
                        "line": 18
                    }
                }
            },
            "templateData": "<div>\n  <nexus-form-field [formGroup]=\"bioSection\">\n    <p class=\"nexus-h6\">{{ title }}</p>\n    <div class=\"nexus-col-xs-4 nexus-col-md-3\">\n      <nexus-input type=\"text\" formControlName=\"firstName\" placeholder=\"Max 10 Letters\" max-length=\"10\"></nexus-input>\n      <div *ngIf=\"userFirstName.touched || userFirstName.dirty\">\n        <nexus-error-message *ngIf=\"userFirstName.invalid\"\n          ><nexus-chip error>{{ requiredText }}</nexus-chip>\n        </nexus-error-message>\n      </div>\n    </div>\n  </nexus-form-field>\n</div>\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-5dc64d223c67d1846e08869884b0933e1e413207d37af46167e8b857e4102e23dd0db43f13fce48446e6a40b2e4f4820371a7c0da43f2887adb066288bc596a3",
            "file": "src/app/components/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [
                "./notification.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "variant",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "defaultValue": "'Informational notification message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent {\n  @Input() variant: string = 'info';\n\n  message: string = 'Informational notification message';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./notification.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"nexus-rhythm-4\">\n  <nexus-notification data-testid=\"notification-info\" [variant]=\"variant\">{{ message }}</nexus-notification>\n</div>\n\n<div class=\"nexus-rhythm-4\">\n  <nexus-notification data-testid=\"notification-error\" variant=\"error\">Error notification message.</nexus-notification>\n</div>\n\n<div class=\"nexus-rhythm-4\">\n  <nexus-notification data-testid=\"notification-success\" variant=\"success\"\n    >Success notification message.</nexus-notification\n  >\n</div>\n\n<div class=\"nexus-rhythm-4\">\n  <nexus-notification data-testid=\"notification-warning\" variant=\"warning\"\n    >Warning notification message.</nexus-notification\n  >\n</div>\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-8fe3e8167933fe0f611fac4b37e12ff8a4fe686d0ba4c67a0c477ce9cfacc4c303545ba5549a4a22b14752aefe674566af93b3181fc3c7595cc0b93610b25521-1",
            "file": "src/app/sb/components/notification/01_notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_notification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "variant",
                    "defaultValue": "notification.variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "defaultValue": "notification.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { notification } from '../../constants';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './01_notification.component.html'\n})\nexport default class NotificationComponent {\n  @Input() variant: string = notification.variant;\n\n  message: string = notification.text;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NotificationComponent-1",
            "templateData": "<div class=\"nexus-row nexus-around-xs\">\n  <div class=\"nexus-col-xs-1\">\n    <div class=\"nexus-row nexus-mt-2\">\n      <div class=\"nexus-col-xs-4\">\n        <nexus-notification data-testid=\"notification-info\" [variant]=\"variant\">{{ message }}</nexus-notification>\n      </div>\n    </div>\n  </div>\n</div>\n\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-49e9ad2585d3f6b101d92b752fb592d29701133fcc7e072040572552bb73e34072c8cb306ae9a6d02e8eb10e5613c9246e6aab9af13f1ec8b64f317104963e73-2",
            "file": "src/app/sb/components/notification/03_variants.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification-variants",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_variants.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "notificationVariants",
                    "defaultValue": "notificationVariants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { notificationVariants } from '../../constants';\n\n@Component({\n  selector: 'app-notification-variants',\n  templateUrl: './03_variants.component.html'\n})\nexport default class NotificationComponent {\n  notificationVariants = notificationVariants;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "NotificationComponent-2",
            "templateData": "<div class=\"nexus-row nexus-around-xs\">\n    <div class=\"nexus-col-xs-1\">\n        <div class=\"nexus-row nexus-mt-2\">\n            <div class=\"nexus-col-xs-4\">\n                <nexus-notification data-testid=\"notification-info\" variant=\"info\">{{\n                    notificationVariants.infoMessage}}</nexus-notification>\n            </div>\n            <div class=\"nexus-col-xs-4\">\n                <nexus-notification data-testid=\"notification-info\" variant=\"success\">{{\n                    notificationVariants.successMessage}}</nexus-notification>\n            </div>\n            <div class=\"nexus-col-xs-4\">\n                <nexus-notification data-testid=\"notification-info\" variant=\"warning\">{{\n                    notificationVariants.warnMessage}}</nexus-notification>\n            </div>\n            <div class=\"nexus-col-xs-4\">\n                <nexus-notification data-testid=\"notification-info\" variant=\"error\">{{\n                    notificationVariants.errorMessage}}</nexus-notification>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "NotificationOverlayComponent",
            "id": "component-NotificationOverlayComponent-2c2df012be57d378a7d540495db41479f8221fbaf5a1a5d4d09eb2e6392529f1a77e5f449eaa3190f8c7cc69bc555eb4c114d5831eb4d62277e954b42929eb0b",
            "file": "src/app/sb/components/notification/02_overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification-overlay",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_overlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "bgImage",
                    "defaultValue": "'./assets/images/card-header-image.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "height",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "notificationOverlay",
                    "defaultValue": "notificationOverlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { notificationOverlay } from '../../constants';\n\n@Component({\n  selector: 'app-notification-overlay',\n  templateUrl: './02_overlay.component.html'\n})\nexport default class NotificationOverlayComponent {\n  bgColor: string = '';\n\n  bgImage: string = './assets/images/card-header-image.png';\n\n  clickable: boolean = false;\n\n  height: string = '';\n\n  notificationOverlay = notificationOverlay;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-card [bgColor]=\"bgColor\" [clickable]=\"clickable\" [height]=\"height\">\n  <nexus-card-avatar>\n    <img [src]=\"notificationOverlay.srcImg\" [alt]=\"notificationOverlay.username\" />\n  </nexus-card-avatar>\n  <nexus-card-header>\n    <nexus-card-header-title>{{notificationOverlay.username}}</nexus-card-header-title>\n    <nexus-notification data-testid=\"notification-info\" [variant]=\"notificationOverlay.variant\">{{notificationOverlay.text}}</nexus-notification>\n    <nexus-card-header-button>\n      <button class=\"nexus-btn-icon\" id=\"btn\" title=\"btn\">\n        <nexus-icon [src]=\"notificationOverlay.iconSrc\"></nexus-icon>\n      </button>\n    </nexus-card-header-button>\n  </nexus-card-header>\n</nexus-card>"
        },
        {
            "name": "OverlayComponent",
            "id": "component-OverlayComponent-6e6989c09455bae6e12f8234abbce3fc33410e81357141db7749ea81d20be3cae10030a0cf9c6af62a03bb36d130013398330bed474dc70493225585462277a9",
            "file": "src/app/sb/components/icon/03_overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-overlay",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_overlay.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "overlay",
                    "defaultValue": "overlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { overlay } from '../../constants';\n\n@Component({\n  selector: 'app-overlay',\n  templateUrl: './03_overlay.component.html'\n})\nexport default class OverlayComponent {\n  overlay = overlay;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-pt-5\">\n    <div class=\"nexus-row nexus-around-xs\">\n        <button class=\"nexus-btn nexus-btn-primary nexus-btn-large\">\n            <nexus-icon [src]=\"overlay.src\" size=\"md\"></nexus-icon>\n            {{overlay.text}}\n        </button>\n    </div>\n</div>"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-781c7f750522dfb651dddd851cdc34d91d7ea477d855328c95c7ee23d22df76fc8c21b87d4b89c782baa308e4067cf61dc728fcf75e5d1c1eaceb3f67f0019bf",
            "file": "src/app/components/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "current",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html'\n})\nexport class PaginationComponent {\n  @Input() current: number = 2;\n\n  @Input() max: number = 5;\n\n  handleChange(event) {\n    this.current = event.detail;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-pagination [current]=\"current\" [max]=\"max\" (changeEvent)=\"handleChange($event)\"></nexus-pagination>\n"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-99c9047d16a14ca2d2a01269ba922bf16eb7d265cf722223cb5d113ba4c3d866cccb0e2ce20698b25918b5a0f5436482c57c85cd490a3d37b43ac922287ea818-1",
            "file": "src/app/sb/components/pagination/01_pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "current",
                    "defaultValue": "pagination.current",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "pagination.max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { pagination } from '../../constants';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './01_pagination.component.html'\n})\nexport default class PaginationComponent {\n  @Input() current: number = pagination.current;\n\n  @Input() max: number = pagination.max;\n\n  handleChange(event) {\n    this.current = event.detail;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PaginationComponent-1",
            "templateData": "<nexus-pagination data-testid=\"nexus-pagination\" [current]=\"current\" [max]=\"max\"\n    (changeEvent)=\"handleChange($event)\"></nexus-pagination>"
        },
        {
            "name": "PieChartComponent",
            "id": "component-PieChartComponent-e50906554c2d676ef11af441c3f8c06cbfc7699934a986af84e6872d28d68b919356f7a163768c7fd9f2fa7885bdf21cc38a7f6ce6dd86d38b81b8f8add31093",
            "file": "src/app/components/pie-chart/pie-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pie-chart",
            "styleUrls": [
                "./pie-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pie-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartData",
                    "defaultValue": "[\n    { artist: 'The Beatles',\n      units: 183 },\n    { artist: 'Garth Brooks',\n      units: 148 },\n    { artist: 'Elvis Presley',\n      units: 146.5 },\n    { artist: 'The Eagles',\n      units: 120 },\n    { artist: 'Led Zeppelin',\n      units: 111.5 },\n    { artist: 'Billy Joel',\n      units: 84.5 },\n    { artist: 'Michael Jackson',\n      units: 84 },\n    { artist: 'Elton John',\n      units: 78.5 },\n    { artist: 'Pink Floyd',\n      units: 75 },\n    { artist: 'AC/DC',\n      units: 72 },\n    { artist: 'George Strait',\n      units: 69 },\n    { artist: 'Barbara Streisand',\n      units: 68.5 },\n    { artist: 'The Rolling Stones',\n      units: 66.5 },\n    { artist: 'Aerosmith',\n      units: 66.5 },\n    { artist: 'Bruce Springsteen',\n      units: 65.5 }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gridlines",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "htmlElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inverse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "showLegend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "showPieLegend",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "vertices",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generatePieChartData",
                    "args": [
                        {
                            "name": "numWedges",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "numWedges",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getChartEl",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 252,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "randomizer",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectArcStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisLabelFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontFamily",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStrokeWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectColorScheme",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInnerRadius",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInterpolation",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLegendFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLinearDomain",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLineStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMargin",
                    "args": [
                        {
                            "name": "marginAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "marginAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMaxBarWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectTopN",
                    "args": [
                        {
                            "name": "num",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectXTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectYTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleGridlines",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleInverse",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleLegend",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleOrientation",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleVertices",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n  public chartData: Array<any> = [\n    { artist: 'The Beatles',\n      units: 183 },\n    { artist: 'Garth Brooks',\n      units: 148 },\n    { artist: 'Elvis Presley',\n      units: 146.5 },\n    { artist: 'The Eagles',\n      units: 120 },\n    { artist: 'Led Zeppelin',\n      units: 111.5 },\n    { artist: 'Billy Joel',\n      units: 84.5 },\n    { artist: 'Michael Jackson',\n      units: 84 },\n    { artist: 'Elton John',\n      units: 78.5 },\n    { artist: 'Pink Floyd',\n      units: 75 },\n    { artist: 'AC/DC',\n      units: 72 },\n    { artist: 'George Strait',\n      units: 69 },\n    { artist: 'Barbara Streisand',\n      units: 68.5 },\n    { artist: 'The Rolling Stones',\n      units: 66.5 },\n    { artist: 'Aerosmith',\n      units: 66.5 },\n    { artist: 'Bruce Springsteen',\n      units: 65.5 }\n  ];\n\n  private gridlines = false;\n\n  private inverse = false;\n\n  private showLegend = false;\n\n  private showPieLegend = true;\n\n  private vertices = true;\n\n  private htmlElement: HTMLElement;\n\n  constructor(public elRef: ElementRef) {\n    this.htmlElement = this.elRef.nativeElement;\n\n    this.gridlines = false;\n    this.inverse = false;\n    this.showLegend = false;\n    this.showPieLegend = true;\n    this.vertices = true;\n  }\n\n  public changeXLabel(args: any, value: any): any {\n    this.getChartEl(args).xLabel = value;\n    const xLabelInput = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInput.value = '';\n  }\n\n  public changeYLabel(args: any, value: any): any {\n    this.getChartEl(args).yLabel = value;\n    const yLabelInput = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInput.value = '';\n  }\n\n  public getChartEl(id: string): any {\n    return document.querySelector(id);\n  }\n\n  public randomizer(): any {\n    return Math.floor(Math.random() * 500) - 250;\n  }\n\n  public selectArcStroke(args: string): any {\n    const arcStroke = this.htmlElement.querySelector('#arcStroke') as HTMLInputElement;\n    this.getChartEl(args).stroke = arcStroke.value;\n  }\n\n  public selectAxisLabelFontSize(args: string): void {\n    const axisLabelFontSize = this.htmlElement.querySelector('#axisLabelFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisLabelFontSize = axisLabelFontSize.value;\n  }\n\n  public selectAxisTickFontSize(args: string): void {\n    const axisTickFontSize = this.htmlElement.querySelector('#axisTickFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontSize = axisTickFontSize.value;\n  }\n\n  public selectAxisTickFontFamily(args: string): void {\n    const axisTickFontFamily = this.htmlElement.querySelector('#axisTickFontFamily') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontFamily = axisTickFontFamily.value;\n  }\n\n  public selectBarStroke(args: string): void {\n    const barStroke = this.htmlElement.querySelector('#barStroke') as HTMLInputElement;\n    this.getChartEl(args).barStroke = barStroke.value;\n  }\n\n  public selectBarStrokeWidth(args: string): void {\n    const barStrokeWidth = this.htmlElement.querySelector('#barStrokeWidth') as HTMLInputElement;\n    this.getChartEl(args).barStrokeWidth = barStrokeWidth.value;\n  }\n\n  public selectColorScheme(args: string): void {\n    const colorScheme = this.htmlElement.querySelector('#colorScheme') as HTMLInputElement;\n    this.getChartEl(args).colorScheme = colorScheme.value;\n  }\n\n  public selectInnerRadius(args: string): void {\n    const innerRadius = this.htmlElement.querySelector('#innerRadius') as HTMLInputElement;\n    this.getChartEl(args).innerRadius = innerRadius.value;\n  }\n\n  public selectInterpolation(args: string): void {\n    const interpolation = this.htmlElement.querySelector('#interpolation') as HTMLInputElement;\n    this.getChartEl(args).interpolation = interpolation.value;\n  }\n\n  public selectLegendFontSize(args: string): void {\n    const legendFontSize = this.htmlElement.querySelector('#legendFontSize') as HTMLInputElement;\n    this.getChartEl(args).legendFontSize = legendFontSize.value;\n  }\n\n  public selectLinearDomain(args: string): void {\n    const val = this.htmlElement.querySelector('#linearDomain') as HTMLInputElement;\n    const el = this.getChartEl(args);\n    if (val.value === 'percent') {\n      el.linearTickFormat = 'percent1d';\n    } else {\n      el.linearTickFormat = 'localestring';\n    }\n    this.getChartEl(args).linearDomain = val.value;\n  }\n\n  public selectLineStroke(args: string): void {\n    const val = this.htmlElement.querySelector('#lineStroke') as HTMLInputElement;\n    this.getChartEl(args).strokeWidth = val.value;\n  }\n\n  public selectMargin(marginAttribute: string, args: any): any {\n    const val = this.htmlElement.querySelector(`#${marginAttribute}`) as HTMLInputElement;\n    const el = this.getChartEl(args);\n    el[marginAttribute] = val.value;\n  }\n\n  public selectMaxBarWidth(args: string): void {\n    const val = this.htmlElement.querySelector('#maxBarWidth') as HTMLInputElement;\n    this.getChartEl(args).maxBarWidth = val.value;\n  }\n\n  public selectXTickSize(args: string): void {\n    const val = this.htmlElement.querySelector('#xTickSize') as HTMLInputElement;\n    this.getChartEl(args).xTickSize = val.value;\n  }\n\n  public selectYTickSize(args: string): void {\n    const val = this.htmlElement.querySelector('#yTickSize') as HTMLInputElement;\n    this.getChartEl(args).yTickSize = val.value;\n  }\n\n  public toggleGridlines(args: string): void {\n    this.gridlines = !this.gridlines;\n    this.getChartEl(args).gridlines = this.gridlines;\n  }\n\n  public toggleInverse(args: string): void {\n    this.inverse = !this.inverse;\n    this.getChartEl(args).inverse = this.inverse;\n\n    if (this.inverse) {\n      this.htmlElement.querySelector('div.chart').classList.add('inverse');\n    } else {\n      this.htmlElement.querySelector('div.chart').classList.remove('inverse');\n    }\n  }\n\n  public toggleLegend(args: string): void {\n    if (args === 'nexus-pie-chart') {\n      this.showPieLegend = !this.showPieLegend;\n      this.getChartEl(args).legend = this.showPieLegend;\n\n      return;\n    }\n\n    this.showLegend = !this.showLegend;\n\n    this.getChartEl(args).legend = this.showLegend;\n  }\n\n  public toggleOrientation(args: string): void {\n    const orientationValue = this.htmlElement.querySelector('#orientation') as HTMLInputElement;\n    const val = orientationValue.value || 'vertical';\n    const el = this.getChartEl(args);\n    let xLabel: any;\n    let yLabel: any;\n\n    // horizontal orientation\n    if (val === 'horizontal') {\n      if (args === 'nexus-stacked-bar-chart') {\n        xLabel = 'Production';\n        yLabel = 'Year';\n      } else {\n        xLabel = 'Price';\n        yLabel = 'Ticker Symbol';\n      }\n    } else if (args === 'nexus-stacked-bar-chart') {\n      xLabel = 'Year';\n      yLabel = 'Production';\n    } else {\n      xLabel = 'Ticker Symbol';\n      yLabel = 'Price';\n    }\n\n    el.orientation = val;\n    el.xLabel = xLabel;\n    el.yLabel = yLabel;\n  }\n\n  public toggleVertices(args: string): void {\n    this.vertices = !this.vertices;\n    this.getChartEl(args).vertices = this.vertices;\n  }\n\n  public generatePieChartData(numWedges: number): any {\n    return this.chartData.slice(0, numWedges);\n  }\n\n  public selectTopN(num: number): any {\n    this.getChartEl('nexus-pie-chart').chartData = this.generatePieChartData(num);\n  }\n\n  public addListeners(): void {\n    const chartComponent = this.htmlElement.querySelector('#nexus-pie-chart') as HTMLInputElement;\n    chartComponent.addEventListener('nexus-pie-chart-loaded', (evt) => {\n      this.htmlElement.querySelector('nexus-pie-chart').chartData = this.generatePieChartData(3);\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectTopN(5);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '@nexus/core/dist/styles/variables';\n\nh1,\nh2,\nh3 {\n  color: $grey-700;\n}\n\na {\n  color: $blue-400;\n  text-decoration: none;\n}\n\na:hover {\n  color: $blue-700;\n  text-decoration: none;\n}\n\npre.code {\n  white-space: pre-wrap;\n  background: hsl(30, 80%, 90%);\n  padding: 1.25 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  font-size: 1.25 * $rhythm;\n  border: solid 1px $grey-100;\n  color: $grey-900;\n}\n\n/*********************************************\n * Form\n *********************************************/\n\nselect {\n  padding: $rhythm 2 * $rhythm $rhythm $rhythm;\n  display: inline-block;\n  line-height: 3 * $rhythm;\n  font-size: 2 * $rhythm;\n  width: 100%;\n}\n\n/*********************************************\n * Classes\n *********************************************/\n\nbutton.action {\n  background: $grey-700;\n  font-size: 2 * $rhythm;\n  color: $grey-100;\n  height: 3.5 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  padding: 0 1.25 * $rhythm;\n  cursor: pointer;\n}\n\nbutton.action:hover {\n  background: $grey-900;\n}\n\ndiv.btn-item,\ndiv.cbx-item,\ndiv.select-item {\n  padding-left: 0.5 * $rhythm;\n  padding-right: 0.5 * $rhythm;\n}\n\ndiv.chart {\n  min-height: 60 * $rhythm;\n}\n\ndiv.inverse {\n  background: $grey-900;\n}\n\ndiv.control-category {\n  border-bottom: solid 1px $grey-100;\n  padding-bottom: 0.5 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n  font-weight: 600;\n}\n\ndiv.control-item {\n  margin-top: 1.25 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n}\n\ndiv.header-link {\n  margin-right: 2 * $rhythm;\n}\n\ndiv.header-link a {\n  color: $grey-100;\n}\n\ndiv.header-link a:hover {\n  color: $orange-400;\n}\n\ndiv.hoz-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.1em;\n}\n\ndiv.page-title {\n  font-size: 2.25 * $rhythm;\n  color: $grey-900;\n  padding: 0.5 * $rhythm $rhythm;\n  border-radius: 0.5 * $rhythm;\n  background: $grey-100;\n  margin-bottom: 2 * $rhythm;\n  text-align: center;\n}\n\ndiv.select-el {\n  margin-top: 0.5 * $rhythm;\n}\n\ndiv.select-group {\n  font-size: 2 * $rhythm;\n  font-style: italic;\n  color: $blue-400;\n}\n\ndiv.select-item > label {\n  font-size: 0.8em;\n}\n\ndiv.select-item > label,\ndiv.select-item > select {\n  display: inline;\n}\n\n.position {\n  position: inherit;\n}\n",
                    "styleUrl": "./pie-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"wrapper\" class=\"nexus-row\">\n    <!-- interaction controls -->\n    <div id=\"control-container\" class=\"nexus-col-xs-4 nexus-col-lg-3\">\n      <div class=\"control-category\">Options</div>\n\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"inverse\" id=\"inverse\" (change)=\"toggleInverse('nexus-pie-chart')\">Inverse</nexus-checkbox>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-checkbox checked name=\"show-legend\" id=\"showLegend\" (change)=\"toggleLegend('nexus-pie-chart')\"\n          >Legend</nexus-checkbox\n        >\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"colorScheme\" class=\"select\">Color Scheme</nexus-label>\n        <select name=\"color-scheme\" id=\"colorScheme\" (input)=\"selectColorScheme('nexus-pie-chart')\">\n          <option value=\"category10\" selected>Category 10</option>\n          <option value=\"accent\">Accent</option>\n          <option value=\"paired\">Paired</option>\n          <option value=\"set1\">Set 1</option>\n          <option value=\"set2\">Set 2</option>\n          <option value=\"set3\">Set 3</option>\n          <option value=\"black\">Black</option>\n          <option value=\"gray\">Gray</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"legendFontSize\" class=\"select\">Legend Font Size</nexus-label>\n        <select name=\"legend_font_size\" id=\"legendFontSize\" (input)=\"selectLegendFontSize('nexus-pie-chart')\">\n          <option value=\"10\">10px</option>\n          <option value=\"12\" selected>12px</option>\n          <option value=\"14\">14px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"innerRadius\" class=\"select\">Inner Radius</nexus-label>\n        <select name=\"inner_radius\" id=\"innerRadius\" (input)=\"selectInnerRadius('nexus-pie-chart')\">\n          <option value=\"0\" selected>0%</option>\n          <option value=\".25\">25%</option>\n          <option value=\".50\">50%</option>\n          <option value=\".75\">75%</option>\n          <option value=\".95\">95%</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginBottom\" class=\"select\">Margin Bottom</nexus-label>\n        <select name=\"margin-bottom\" id=\"marginBottom\" (input)=\"selectMargin('marginBottom', 'nexus-pie-chart')\">\n          <option value=\"0\" selected>0px</option>\n          <option value=\"25\">25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"100\">100px</option>\n          <option value=\"150\">150px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginLeft\" class=\"select\">Margin Left</nexus-label>\n        <select name=\"margin_left\" id=\"marginLeft\" (input)=\"selectMargin('marginLeft', 'nexus-pie-chart')\">\n          <option value=\"0\" selected>0px</option>\n          <option value=\"25\">25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"100\">100px</option>\n          <option value=\"150\">150px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginRight\" class=\"select\">Margin Right</nexus-label>\n        <select name=\"margin_right\" id=\"marginRight\" (input)=\"selectMargin('marginRight', 'nexus-pie-chart')\">\n          <option value=\"0\" selected>0px</option>\n          <option value=\"25\">25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"100\">100px</option>\n          <option value=\"150\">150px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginTop\" class=\"select\">Margin Top</nexus-label>\n        <select name=\"margin_top\" id=\"marginTop\" (input)=\"selectMargin('marginTop', 'nexus-pie-chart')\">\n          <option value=\"0\" selected>0px</option>\n          <option value=\"25\">25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"100\">100px</option>\n          <option value=\"150\">150px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"arcStroke\" class=\"select\">Wedge Stroke</nexus-label>\n        <select name=\"arc-stroke\" id=\"arcStroke\" (input)=\"selectArcStroke('nexus-pie-chart')\">\n          <option value=\"transparent\">transparent</option>\n          <option value=\"#ffffff\" selected>white</option>\n          <option value=\"#000000\">black</option>\n          <option value=\"#999999\">gray</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"lineStroke\" class=\"select\">Wedge Stroke Width</nexus-label>\n        <select name=\"line_stroke\" id=\"lineStroke\" (input)=\"selectLineStroke('nexus-pie-chart')\">\n          <option value=\"1\" selected>1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- chart container -->\n    <div id=\"chart-container\" class=\"nexus-col-xs-4 nexus-col-lg-9 position\">\n      <div class=\"page-title\">&lt;nexus-pie-chart&gt;</div>\n      <div class=\"hoz-group\">\n        <div class=\"btn-item\">\n          <button type=\"button\" class=\"nexus-btn\" (click)=\"selectTopN(5)\">Top 5</button>\n        </div>\n        <div class=\"btn-item\">\n          <button type=\"button\" class=\"nexus-btn\" (click)=\"selectTopN(10)\">Top 10</button>\n        </div>\n        <div class=\"btn-item\">\n          <button type=\"button\" class=\"nexus-btn\" (click)=\"selectTopN(15)\">Top 15</button>\n        </div>\n      </div>\n\n      <div class=\"chart\">\n        <nexus-pie-chart\n          legend\n          legend-width=\"125\"\n          legend-metric=\"artist\"\n          responsive\n          stroke=\"#ffffff\"\n          tooltips\n          value-format=\"localestring1d\"\n          value-metric=\"units\"\n          [chartData]=\"chartData\"\n        ></nexus-pie-chart>\n      </div>\n    </div>\n  </div>"
        },
        {
            "name": "PinEntryComponent",
            "id": "component-PinEntryComponent-6985c62e89ad7394472d09c3c243d29b61960d62a3b29c838e3e17371bea28599334c577c367199afbe72527cc9fe9debfa3667c09e88ce8626de6f87bb40879",
            "file": "src/app/components/pin-entry/pin-entry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-entry",
            "styleUrls": [
                "./pin-entry.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pin-entry.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "length",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-entry',\n  templateUrl: './pin-entry.component.html',\n  styleUrls: ['./pin-entry.component.scss']\n})\nexport class PinEntryComponent {\n  @Input() length: number = 3;\n\n  @Input() disabled: boolean;\n\n  @Input() type: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./pin-entry.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-pin-entry data-testid=\"pin-entry\" [length]=\"length\" [disabled]=\"disabled\" [type]=\"type\"></nexus-pin-entry>\n"
        },
        {
            "name": "PinEntryComponent",
            "id": "component-PinEntryComponent-58b3677322ebe00d52001de6327fa9b5d493c5bbc9cc4932755b6e4a1068390f83f6f3201f5958f5785aef944aeb1aa5ce38bd62af3ee039d9ca56597333585e-1",
            "file": "src/app/sb/components/pin-entry/01_pin-entry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-entry",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_pin-entry.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "length",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-entry',\n  templateUrl: './01_pin-entry.component.html'\n})\nexport default class PinEntryComponent {\n  @Input() length: number = 3;\n\n  @Input() disabled: boolean;\n\n  @Input() type: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PinEntryComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <nexus-pin-entry data-testid=\"pin-entry\" [length]=\"length\" [disabled]=\"disabled\" [type]=\"type\">\n    </nexus-pin-entry>\n</div>"
        },
        {
            "name": "PinEntryDisabledComponent",
            "id": "component-PinEntryDisabledComponent-ee443c5b56b4f167b00f7e230916eb78b8907a34b137fc737f20df1821a96bd38f9b2fa83d44f18bfc7d2cd76ac68da51b822879d3457480e1c5366c03bc476c",
            "file": "src/app/sb/components/pin-entry/02_pin-entryDisabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-entry-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_pin-entryDisabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-entry-disabled',\n  templateUrl: './02_pin-entryDisabled.component.html'\n})\nexport default class PinEntryDisabledComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <nexus-pin-entry data-testid=\"pin-entry-disabled\" length=4 disabled type=\"number\">\n    </nexus-pin-entry>\n</div>"
        },
        {
            "name": "PinEntryExamplesComponent",
            "id": "component-PinEntryExamplesComponent-eed878b24be94d1402ef1d9b43230817e0065958efd42f74fc115cdfb502410ef53a2a83226e8f0a8336899afa4a90dd97f94c53132b289d28006a8ed236f3ac",
            "file": "src/app/components/pin-entry-examples/pin-entry-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-entry-examples",
            "styleUrls": [
                "./pin-entry-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pin-entry-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-entry-examples',\n  templateUrl: './pin-entry-examples.component.html',\n  styleUrls: ['./pin-entry-examples.component.scss']\n})\nexport class PinEntryExamplesComponent implements OnInit {\n  constructor() {\n    // This is intentional\n  }\n\n  ngOnInit(): void {\n    // This is intentional\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./pin-entry-examples.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"nexus-h5\">Default</p>\n<nexus-pin-entry data-testid=\"pin-entry-default\"></nexus-pin-entry>\n\n<p class=\"nexus-h5\">Custom Length</p>\n<nexus-pin-entry data-testid=\"pin-entry-customLen\" length=\"6\"></nexus-pin-entry>\n\n<p class=\"nexus-h5\">Disabled</p>\n<nexus-pin-entry data-testid=\"pin-entry-disabled\" length=\"3\" disabled></nexus-pin-entry>\n"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-b10ff120701558b676bfb53427e9c2019f077d4e8ab9fdb35bd062c847bfdc7eb47f2d80245ee9d7beffcc7ee7edea7a24fd10d293d62ed40e2b13e4269427d5",
            "file": "src/app/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "circle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent {\n  @Input() value: number;\n\n  @Input() indeterminate: boolean = false;\n\n  @Input() error: boolean = false;\n\n  @Input() circle: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-progress-bar [value]=\"value\" [indeterminate]=\"indeterminate\" [error]=\"error\" [circle]=\"circle\">\n</nexus-progress-bar>\n"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-8a072e11be09a3fb44ed0d3626113daec4e8607823fa3646fcdda0f4089813784963c7ee16b0b5d84bdd92d6fe84266227e0e660d9b53828c45483bda97874b0-1",
            "file": "src/app/sb/components/progress-bar/01_progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "circle",
                    "defaultValue": "progressBar.circle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "progressBar.error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "progressBar.indeterminate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "progressBar.value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { progressBar } from '../../constants';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './01_progress-bar.component.html'\n})\nexport default class ProgressBarComponent {\n  @Input() value: number = progressBar.value;\n\n  @Input() indeterminate: boolean = progressBar.indeterminate;\n\n  @Input() error: boolean = progressBar.error;\n\n  @Input() circle: boolean = progressBar.circle;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProgressBarComponent-1",
            "templateData": "<nexus-progress-bar\n    [value]=\"value\"\n    [indeterminate]=\"indeterminate\"\n    [error]=\"error\"\n    [circle]=\"circle\">\n</nexus-progress-bar>\n"
        },
        {
            "name": "ProgressBarETAComponent",
            "id": "component-ProgressBarETAComponent-963298ae5d7791e0eb62a17521540135ec0b3cf5cae23b566efa9aacc3d6079c201a93361572833cb6b9192ea29b027bc4bf573ba7d7480b0c7350a1c65cf033",
            "file": "src/app/sb/components/progress-bar/02_infinite.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar-eta",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_infinite.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "message",
                    "defaultValue": "progressBarETA.checkETA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "triggerClickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { progressBarETA } from '../../constants';\n\n@Component({\n  selector: 'app-progress-bar-eta',\n  templateUrl: './02_infinite.component.html'\n})\nexport default class ProgressBarETAComponent {\n  indeterminate = false;\n\n  message = progressBarETA.checkETA;\n\n  triggerClickHandler() {\n    this.indeterminate = !this.indeterminate;\n    this.message = this.indeterminate ? progressBarETA.calculatingETA : progressBarETA.checkETA;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-ml-6 nexus-col-md-4 nexus-mt-6\">\n        <nexus-progress-bar [indeterminate]=\"indeterminate\"></nexus-progress-bar>\n    </div>\n    <div class=\"nexus-col-md-3 nexus-mt-5\">\n        <button class=\"nexus-btn nexus-btn-large\" (click)=\"triggerClickHandler()\">\n            {{message}}\n        </button>\n    </div>\n</div>"
        },
        {
            "name": "ProgressBarExamplesComponent",
            "id": "component-ProgressBarExamplesComponent-b4201fd0ec479e2c1b9d2f610be4f7475c4318723dacc0ab49df862e590164d0bd4f8269e39fcab40ae4d1b6751147398c1c1988fbe305edf5698d1bab1b63e5",
            "file": "src/app/components/progress-bar-examples/progress-bar-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar-examples",
            "styleUrls": [
                "./progress-bar-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar-examples',\n  templateUrl: './progress-bar-examples.component.html',\n  styleUrls: ['./progress-bar-examples.component.scss']\n})\nexport class ProgressBarExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./progress-bar-examples.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"nexus-h5\">With Label</p>\n\n<nexus-progress-bar value=\"50\">\n  <nexus-progress-bar-label>\n    <span class=\"nexus-progress-bar-blue-label-span\">Progress Label</span>\n  </nexus-progress-bar-label>\n</nexus-progress-bar>\n\n<br />\n\n<p class=\"nexus-h5\">Error State</p>\n\n<nexus-progress-bar value=\"50\" error=\"true\"> </nexus-progress-bar>\n\n<br />\n\n<p class=\"nexus-h5\">Indeterminate</p>\n\n<nexus-progress-bar indeterminate=\"true\"> </nexus-progress-bar>\n\n<br />\n\n<p class=\"nexus-h5\">Circle</p>\n\n<nexus-progress-bar value=\"100\" circle=\"true\"> </nexus-progress-bar>\n\n<br />\n\n<p class=\"nexus-h5\">Circle with Label</p>\n\n<nexus-progress-bar circle=\"true\" value=\"75\">\n  <nexus-progress-bar-label>\n    <span class=\"nexus-progress-bar-label-span\">75%</span>\n  </nexus-progress-bar-label>\n</nexus-progress-bar>\n\n<br />\n\n<p class=\"nexus-h5\">Indeterminate Circle</p>\n\n<nexus-progress-bar circle=\"true\" indeterminate=\"true\"> </nexus-progress-bar>\n\n<br />\n\n<p class=\"nexus-h5\">Error Circle</p>\n\n<nexus-progress-bar circle=\"true\" error=\"true\" value=\"75\"> </nexus-progress-bar>\n"
        },
        {
            "name": "ProgressBarPerfReportComponent",
            "id": "component-ProgressBarPerfReportComponent-dcbc6a77eab55ba14437e4e0d673e998a3c02d1a4ac590cc8a51f1681924894fbc7c08ba4dc029c11dd59d72752b57f4bd0c326b65374f552efe607dfcb3baf6",
            "file": "src/app/sb/components/progress-bar/03_reports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar-reports",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_reports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "progressBarReport",
                    "defaultValue": "progressBarReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { progressBarReport } from '../../constants';\n\n@Component({\n  selector: 'app-progress-bar-reports',\n  templateUrl: './03_reports.component.html'\n})\nexport default class ProgressBarPerfReportComponent {\n  indeterminate = false;\n\n  progressBarReport = progressBarReport;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-card [clickable]=\"false\">\n    <nexus-card-header>\n        <nexus-card-header-title>{{progressBarReport.cardHeader}}</nexus-card-header-title>\n    </nexus-card-header>\n    <nexus-card-body>\n        <div class=\"nexus-row\">\n            <div class=\"nexus-col-md-2\">\n                <h3 class=\"nexus-h5\">{{progressBarReport.processor}}</h3>\n            </div>\n            <div class=\"nexus-col-md-1\">\n                <nexus-progress-bar [value]=\"progressBarReport.processorvalue\" circle=\"true\">\n                <div class=\"nexus-pl-3 nexus-pt-4\">{{progressBarReport.processorvalue}}%</div>\n                </nexus-progress-bar>\n            </div>\n\n            <div class=\"nexus-col-md-2 nexus-pl-4\">\n                <h3 class=\"nexus-h5\">{{progressBarReport.memory}}</h3>\n            </div>\n            <div class=\"nexus-col-md-1\">\n                <nexus-progress-bar [value]=\"progressBarReport.memoryValue\" circle=\"true\">\n                    <div class=\"nexus-pl-3 nexus-pt-4\">{{progressBarReport.memoryValue}}%</div>\n                </nexus-progress-bar>\n            </div>\n        </div>\n\n        <div class=\"nexus-row nexus-mt-4\">\n            <div class=\"nexus-col-md-2\">\n                <h3 class=\"nexus-h5\">{{progressBarReport.graphics}}</h3>\n            </div>\n            <div class=\"nexus-col-md-1\">\n                <nexus-progress-bar [value]=\"progressBarReport.graphicsValue\" circle=\"true\">\n                    <div class=\"nexus-pl-3 nexus-pt-4\">{{progressBarReport.graphicsValue}}%</div></nexus-progress-bar>\n            </div>\n\n            <div class=\"nexus-col-md-2 nexus-pl-4\">\n                <h3 class=\"nexus-h5\">{{progressBarReport.primaryHDD}}</h3>\n            </div>\n            <div class=\"nexus-col-md-1\">\n                <nexus-progress-bar [value]=\"progressBarReport.primaryHDDValue\" circle=\"true\">\n                    <div class=\"nexus-pl-3 nexus-pt-4\">{{progressBarReport.primaryHDDValue}}%</div>\n                </nexus-progress-bar>\n            </div>\n        </div>\n    </nexus-card-body>\n</nexus-card>"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-4df5a11e0dabd68f8eea02a9855e45844627aa5721b31178b22af2956167127af56cb01294848df48214c26b20361bfa58fecc7c563ad21e4dbd618b92ac3c77",
            "file": "src/app/components/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio",
            "styleUrls": [
                "./radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent {\n  @Input() disabled: boolean;\n\n  @Input() label: string;\n\n  @Input() required: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./radio.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-radio data-testid=\"radio-btn-opt1\" name=\"group1\" [disabled]=\"disabled\" [label]=\"label\" [required]=\"required\"\n  >Option 1</nexus-radio\n>\n<nexus-radio data-testid=\"radio-btn-opt2\" name=\"group1\" [disabled]=\"disabled\" [label]=\"label\" [required]=\"required\"\n  >Option 2</nexus-radio\n>\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-8b7a7cc74de7f1d7f37ebc7acd3f945b7df6045bc95e7f41b5bf73d8c37c62750978fecf1b1dd205b005a009095a31c508ad5d88ddc662e186b6739c3f88f5ed-1",
            "file": "src/app/sb/components/radio/01_radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "checked",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'radio-group'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './01_radio.component.html'\n})\nexport default class RadioComponent {\n  @Input() attrId: string;\n\n  @Input() checked: boolean = true;\n\n  @Input() disabled: boolean = true;\n\n  @Input() name: string = 'radio-group';\n\n  @Input() required: boolean;\n\n  @Input() value: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RadioComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row nexus-center-xs\">\n        <nexus-radio [checked]=\"checked\" data-testid=\"radio-btn-opt1\" [attrId]=\"attrId\" [name]=\"name\"\n            [disabled]=\"disabled\" [required]=\"required\" [value]=\"value\">\n            Option 1</nexus-radio>\n        <nexus-radio data-testid=\"radio-btn-opt1\" [attrId]=attrId [name]=\"name\" [disabled]=\"disabled\"\n            [required]=\"required\">\n            Option 2</nexus-radio>\n    </div>\n</div>"
        },
        {
            "name": "RadioExamplesComponent",
            "id": "component-RadioExamplesComponent-a46ec52acbc886146fbdeec8413437c776474dd6f9b00c1f1518b140371b6837c595c9b2d558b9d150566c2d3a3a8c8bed5b108e181380127b1909f4901f80dc",
            "file": "src/app/components/radio-examples/radio-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio-examples",
            "styleUrls": [
                "./radio-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "radioGroup1",
                    "defaultValue": "[\n    {\n      name: 'Option 1',\n      value: 'option1'\n    },\n    {\n      name: 'Option 2',\n      value: 'option2'\n    },\n    {\n      name: 'Option 3',\n      value: 'option3'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "radioGroup2",
                    "defaultValue": "[\n    {\n      name: 'Option 1',\n      value: 'option1'\n    },\n    {\n      name: 'Option 2',\n      value: 'option2'\n    },\n    {\n      name: 'Option 3',\n      value: 'option3'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "radioValue1",
                    "defaultValue": "new FormControl({ value: '',\n    disabled: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "radioValue2",
                    "defaultValue": "new FormControl({ value: 'option1',\n    disabled: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-radio-examples',\n  templateUrl: './radio-examples.component.html',\n  styleUrls: ['./radio-examples.component.scss']\n})\nexport class RadioExamplesComponent {\n  radioGroup1 = [\n    {\n      name: 'Option 1',\n      value: 'option1'\n    },\n    {\n      name: 'Option 2',\n      value: 'option2'\n    },\n    {\n      name: 'Option 3',\n      value: 'option3'\n    }\n  ];\n\n  radioValue1 = new FormControl({ value: '',\n    disabled: true });\n\n  radioGroup2 = [\n    {\n      name: 'Option 1',\n      value: 'option1'\n    },\n    {\n      name: 'Option 2',\n      value: 'option2'\n    },\n    {\n      name: 'Option 3',\n      value: 'option3'\n    }\n  ];\n\n  radioValue2 = new FormControl({ value: 'option1',\n    disabled: true });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./radio-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Disabled</p>\n\n<section class=\"nexus-rhythm-5\">\n  <div *ngFor=\"let option of radioGroup1\">\n    <nexus-radio\n      name=\"group3\"\n      ngDefaultControl\n      [value]=\"option.value\"\n      [checked]=\"radioValue1.value === option.value\"\n      [formControl]=\"radioValue1\"\n      disabled\n    >\n      {{ option.name }}\n    </nexus-radio>\n  </div>\n</section>\n\n<p class=\"nexus-h5\">Disabled - selected</p>\n\n<section class=\"nexus-rhythm-5\">\n  <div *ngFor=\"let option of radioGroup2\">\n    <nexus-radio\n      name=\"group2\"\n      ngDefaultControl\n      [value]=\"option.value\"\n      [checked]=\"radioValue2.value === option.value\"\n      [formControl]=\"radioValue2\"\n      disabled\n    >\n      {{ option.name }}\n    </nexus-radio>\n  </div>\n</section>\n"
        },
        {
            "name": "RemovableChipComponent",
            "id": "component-RemovableChipComponent-58bf89c66d1e3ab37acfb85f810950751c52c1b315c8ac11f61a01858031b1227832a02c77ebec41a2e3cdb1d0eb7076a8070c667d96cf8e03096a3d3604ca2a",
            "file": "src/app/sb/components/chip/04_removable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-removable",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_removable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "removable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "triggerCheckBoxSelection",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "triggerRemovableClickCall",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { removable } from '../../constants';\n\n@Component({\n  selector: 'app-chip-removable',\n  templateUrl: './04_removable.component.html'\n})\nexport default class RemovableChipComponent {\n  show = true;\n\n  data = removable;\n\n  triggerRemovableClickCall = (event) => {\n    this.show = false;\n  };\n\n  triggerCheckBoxSelection = (event) => {\n    this.show = event.target.checked;\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div class=\"nexus-row\">\n        <div class=\"nexus-col-xs-2 nexus-pl-5\">\n            <nexus-checkbox (click)=\"triggerCheckBoxSelection($event)\" [checked]=\"show\">{{data.text}}</nexus-checkbox>\n        </div>\n        <ng-container *ngIf=\"show\">\n            <div class=\"nexus-col-xs-2 nexus-pl-5\">\n                <nexus-chip data-testid=\"Item-1\" id=\"Item-1\" removable=\"true\"\n                    (triggerRemovableClick)=\"triggerRemovableClickCall($event)\">{{data.checkboxText}}</nexus-chip>\n            </div>\n        </ng-container>\n    </div>\n</div>"
        },
        {
            "name": "SBErrorMessageComponent",
            "id": "component-SBErrorMessageComponent-3bced303483168dee8e629f7e0062c0334d9f139aba549c3de3806feed32eb2ceb90e21ba93eca0868bfb451e667f61307b191533afeb83b4aa2c058051b0a6d",
            "file": "src/app/sb/components/error-message/01_errorMessage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_errorMessage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataTestIdErrorMessage",
                    "defaultValue": "errorMessage.dataTestIdErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "dataTestIdInput",
                    "defaultValue": "errorMessage.dataTestIdInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "dataTestIdLabel",
                    "defaultValue": "errorMessage.dataTestIdLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "text",
                    "defaultValue": "errorMessage.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "errorMessage.title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { errorMessage } from '../../constants';\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './01_errorMessage.component.html'\n})\nexport default class SBErrorMessageComponent {\n  title = errorMessage.title;\n\n  dataTestIdLabel = errorMessage.dataTestIdLabel;\n\n  dataTestIdInput = errorMessage.dataTestIdInput;\n\n  dataTestIdErrorMessage = errorMessage.dataTestIdErrorMessage;\n\n  text = errorMessage.text;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label [dataTestId]=\"dataTestIdLabel\">{{ text }}</nexus-label>\n  <nexus-input [dataTestId]=\"dataTestIdInput\" value=\"\"></nexus-input>\n  <nexus-error-message [dataTestId]=\"dataTestIdErrorMessage\">{{ title }} </nexus-error-message>\n</nexus-form-field>\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-323117f3786ae776f598fb6cb933c37ff65d43d68d3c275ad19d191aa3f85cbe5aa7b9419a16bde0c113d0b818456f9f778f553b2afa5e65bb0b3716dea312fc",
            "file": "src/app/components/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredItem",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "performFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  Items: any = [];\n\n  filteredItem: any = [];\n\n  ngOnInit(): void {\n    this.Items.push('Item 1');\n    this.Items.push('Item 2');\n    this.Items.push('Item 3');\n    this.filteredItem = this.Items;\n  }\n\n  performFilter(event: any) {\n    const filterBy = event.target.value.toLocaleLowerCase();\n    this.filteredItem = this.Items.filter((item: any) => item.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<nexus-search data-testid=\"search-bar\">\n  <nexus-input (keyup)=\"performFilter($event)\" autocomplete=\"off\" placeholder=\"Search\">\n    <nexus-icon data-testid=\"search-icon\" src=\"./assets/icons/action/ic_search_24px.svg\"></nexus-icon>\n  </nexus-input>\n  <nexus-search-list>\n    <nexus-search-list-item *ngFor=\"let item of filteredItem\">\n      <button>{{ item }}</button>\n    </nexus-search-list-item>\n  </nexus-search-list>\n</nexus-search>\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-1313a5c23adda3b0ef332b948254ff4a6017d2084d57143704d320d119c46e244e1da6a66e927806e24ca552abf5b734f5933034f29ef31a41132bf72c2ca531-1",
            "file": "src/app/sb/components/search/01_search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultSearch",
                    "defaultValue": "DefaultSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "filteredItem",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "performFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { DefaultSearch } from '../../constants';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './01_search.component.html'\n})\nexport default class SearchComponent implements OnInit {\n  Items: any = [];\n\n  filteredItem: any = [];\n\n  defaultSearch = DefaultSearch;\n\n  ngOnInit(): void {\n    this.Items.push('Item 1');\n    this.Items.push('Item 2');\n    this.Items.push('Item 3');\n    this.filteredItem = this.Items;\n  }\n\n  performFilter(event: any) {\n    const filterBy = event.target.value.toLocaleLowerCase();\n    this.filteredItem = this.Items.filter((item: any) => item.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SearchComponent-1",
            "templateData": "<nexus-search data-testid=\"search-bar\">\n    <nexus-input (keyup)=\"performFilter($event)\" autocomplete=\"off\" [placeholder]=\"defaultSearch.placeholder\">\n      <nexus-icon data-testid=\"search-icon\" [src]=\"defaultSearch.searchIconSrc\"></nexus-icon>\n    </nexus-input>\n    <nexus-search-list>\n      <nexus-search-list-item *ngFor=\"let item of filteredItem\">\n        <button>{{ item }}</button>\n      </nexus-search-list-item>\n    </nexus-search-list>\n  </nexus-search>\n"
        },
        {
            "name": "SearchExamplesComponent",
            "id": "component-SearchExamplesComponent-e040220db54d665fee695028ec2559463ef06a48a975961430e899d5cfe515efef55fb03bdcfb321ed178f51fb7e3dccaa560a9e3bf0c8c2e5b93cc5696ceaa1",
            "file": "src/app/components/search-examples/search-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxHeight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "'5'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSizeLabel",
                    "defaultValue": "'Items Per Page'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pagination",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\n    {\n      field: 'make',\n      label: 'Make',\n      isSortable: false\n    },\n    {\n      field: 'model',\n      label: 'Model',\n      isSortable: false\n\n    },\n    {\n      field: 'year',\n      label: 'Year',\n      isSortable: false\n\n    },\n    {\n      field: 'owner',\n      label: 'Car Owner',\n      isSortable: false\n\n    },\n    {\n      field: 'location',\n      label: 'Location',\n      isSortable: false\n\n    },\n    {\n      field: 'price',\n      label: 'Sale Price',\n      isSortable: false,\n      cellRenderer: (value) => `<i style=\"color: ${value < 55050 ? 'red' : 'green'}\">\n      ${\n  value < 55050 ? '<nexus-icon size=\"xs\" src=\"./assets/icons/alert/ic_warning_24px.svg\"></nexus-icon>' : ''\n} ${value} </i>`\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "filteredItem",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "Items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "rowData",
                    "defaultValue": "[\n    {\n      make: 'Toyota',\n      model: 'Outback',\n      year: '2020',\n      price: 35500,\n      owner: 'Iron Man',\n      location: 'PA'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2022',\n      price: 32500,\n      owner: 'Captain America',\n      location: 'LA'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2010',\n      price: 72500,\n      owner: 'Captain Marvel',\n      location: 'PA'\n    },\n    {\n      make: 'Toyota',\n      model: 'Outback',\n      year: '2015',\n      price: 24500,\n      owner: 'Spiderman',\n      location: 'NY'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2021',\n      price: 35050,\n      owner: 'Black Widow',\n      location: 'NY'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "rowDataNew",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 109
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "performFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshTable",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-search-examples',\n  templateUrl: './search-examples.component.html'\n})\nexport class SearchExamplesComponent implements OnInit {\n  @Input() currentPage: number = 1;\n\n  @Input() maxHeight: string = null;\n\n  @Input() pagination: boolean = true;\n\n  @Input() pageSize: string = '5';\n\n  @Input() pageSizeLabel: string = 'Items Per Page';\n\n  @Input() type: string = 'basic';\n\n  columnDefs: any = [\n    {\n      field: 'make',\n      label: 'Make',\n      isSortable: false\n    },\n    {\n      field: 'model',\n      label: 'Model',\n      isSortable: false\n\n    },\n    {\n      field: 'year',\n      label: 'Year',\n      isSortable: false\n\n    },\n    {\n      field: 'owner',\n      label: 'Car Owner',\n      isSortable: false\n\n    },\n    {\n      field: 'location',\n      label: 'Location',\n      isSortable: false\n\n    },\n    {\n      field: 'price',\n      label: 'Sale Price',\n      isSortable: false,\n      cellRenderer: (value) => `<i style=\"color: ${value < 55050 ? 'red' : 'green'}\">\n      ${\n  value < 55050 ? '<nexus-icon size=\"xs\" src=\"./assets/icons/alert/ic_warning_24px.svg\"></nexus-icon>' : ''\n} ${value} </i>`\n    }\n  ];\n\n  rowData: any = [\n    {\n      make: 'Toyota',\n      model: 'Outback',\n      year: '2020',\n      price: 35500,\n      owner: 'Iron Man',\n      location: 'PA'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2022',\n      price: 32500,\n      owner: 'Captain America',\n      location: 'LA'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2010',\n      price: 72500,\n      owner: 'Captain Marvel',\n      location: 'PA'\n    },\n    {\n      make: 'Toyota',\n      model: 'Outback',\n      year: '2015',\n      price: 24500,\n      owner: 'Spiderman',\n      location: 'NY'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2021',\n      price: 35050,\n      owner: 'Black Widow',\n      location: 'NY'\n    }\n  ];\n\n\n  Items: any = [];\n\n  filteredItem: any = [];\n\n  rowDataNew: any = [];\n\n  ngOnInit(): void {\n    this.Items.push('Nissan');\n    this.Items.push('Tesla');\n    this.Items.push('Toyota');\n    this.filteredItem = this.Items;\n  }\n\n  performFilter(event: any) {\n    const filterBy = event.target.value.toLocaleLowerCase();\n    this.filteredItem = this.Items.filter((item: any) => item.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n\n\n  refreshTable(event: any) {\n    const selectedItem = document.querySelector('input').value;\n    if (selectedItem !== null && selectedItem !== '')\n    {\n      this.rowDataNew = this.rowData.filter((newValue) => newValue.make === selectedItem);\n    }\n    else\n    {\n      this.rowDataNew = this.rowData;\n    }\n\n    const table = document.getElementById('tblNexus');\n    const tBody = table && table.getElementsByTagName('tbody')[0];\n    if (tBody) {\n      tBody.innerHTML = '';\n    }\n    const columnList = Object.keys(this.rowDataNew[0]);\n    for (const row of this.rowDataNew) {\n      const rowCount = tBody.rows.length;\n      const tableRow = tBody.insertRow(rowCount);\n      columnList.forEach((_key, index, arr) => {\n        const cell = tableRow.insertCell(index);\n\n        cell.innerHTML = row[arr[index]];\n      });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<nexus-search data-testid=\"search-bar\">\n    <nexus-input (keyup)=\"performFilter($event)\" autocomplete=\"off\" placeholder=\"Search\">\n      <nexus-icon (click)=\"refreshTable($event)\"  data-testid=\"search-icon\" src=\"./assets/icons/action/ic_search_24px.svg\"></nexus-icon>\n    </nexus-input>\n    <nexus-search-list (click)=\"refreshTable($event)\">\n      <nexus-search-list-item  *ngFor=\"let item of filteredItem\">\n        <button>{{ item }}</button>\n      </nexus-search-list-item>\n    </nexus-search-list>\n  </nexus-search>\n  <br/>\n  <nexus-table id=\"tblNexus\"\n    [rows]=\"rowData\"\n    [columns]=\"columnDefs\"\n    [pagination]=\"pagination\"\n    [pageSize]=\"pageSize\"\n    [pageSizeLabel]=\"pageSizeLabel\"\n  >\n  </nexus-table>\n  "
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-11ee8863dd8453eeda3877d05723733f57677af6f3295365bc902a69f2f8a63d680c906068c1f2712a5c294eb4049a82687df9aa018ead89a1327abc6408834b",
            "file": "src/app/components/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[\n    {\n      value: 'option1',\n      viewValue: 'Option 1'\n    },\n    {\n      value: 'option2',\n      viewValue: 'Option 2'\n    },\n    {\n      value: 'option3',\n      viewValue: 'Option 3'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('', Validators.required)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "evnt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "evnt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent {\n  @Input() disabled = false;\n\n  reactiveValue = new FormControl('', Validators.required);\n\n  options = [\n    {\n      value: 'option1',\n      viewValue: 'Option 1'\n    },\n    {\n      value: 'option2',\n      viewValue: 'Option 2'\n    },\n    {\n      value: 'option3',\n      viewValue: 'Option 3'\n    }\n  ];\n\n  handleChange(evnt) {\n    this.reactiveValue.setValue(evnt.target.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label>Select an option</nexus-label>\n  <nexus-select\n    data-testid=\"select\"\n    ngDefaultControl\n    [formControl]=\"reactiveValue\"\n    [value]=\"reactiveValue.value\"\n    [disabled]=\"disabled\"\n  >\n    <option disabled selected value>Please Select</option>\n    <option value=\"option1\">Option 1</option>\n    <option value=\"option2\">Option 2</option>\n    <option value=\"option3\">Option 3</option>\n  </nexus-select>\n</nexus-form-field>\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-99187919aa794184e5de5a797f350c632d354eff0c9fa52f8c2541927bf06a9e30fe41bc10e541820f1346632b7ca6d397c2c13bbe337bc5a9345165d488e6d5-1",
            "file": "src/app/sb/components/select/01_select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "selectNative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "reactiveValue",
                    "defaultValue": "new FormControl('', Validators.required)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "evnt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "evnt",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { selectNative } from '../../constants';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './01_select.component.html'\n})\nexport default class SelectComponent {\n  @Input() disabled = false;\n\n  reactiveValue = new FormControl('', Validators.required);\n\n  options = selectNative;\n\n  handleChange(evnt) {\n    this.reactiveValue.setValue(evnt.target.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SelectComponent-1",
            "templateData": "<nexus-form-field>\n    <nexus-label>Select an option Native</nexus-label>\n    <nexus-select data-testid=\"select\" ngDefaultControl [formControl]=\"reactiveValue\" [value]=\"reactiveValue.value\"\n        [disabled]=\"disabled\">\n        <option disabled selected value>Please Select</option>\n        <option value=\"option1\">Option 1</option>\n        <option value=\"option2\">Option 2</option>\n        <option value=\"option3\">Option 3</option>\n    </nexus-select>\n</nexus-form-field>"
        },
        {
            "name": "SelectExampleComponent",
            "id": "component-SelectExampleComponent-9fcd7dc483cd76bca36e27e80856f705486b92274a40bb9896da94e01411805f284ea19dd40159d5ca98c94a6442bfee6706e6114aa0faf55f5e8b428b9085dd",
            "file": "src/app/components/select-example/select-example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-example",
            "styleUrls": [
                "./select-example.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-example.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "delimiter",
                    "defaultValue": "'::'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "handleCloseEvent",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "handleMultiSelectData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "handleSingleSelectData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "multiSelectDefaultPlaceholder",
                    "defaultValue": "'Please Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "multiSelectOption",
                    "defaultValue": "[\n    {\n      value: 'Option 1',\n      isSelected: false\n    },\n    {\n      label: 'Option 2',\n      value: 'Option2',\n      isSelected: false\n    },\n    {\n      label: 'Option 3',\n      value: 'Option3',\n      isSelected: false\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "multiSelectValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "objectKeys",
                    "defaultValue": "Object.keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "selectOptions",
                    "defaultValue": "[\n    {\n      value: 'Please Select',\n      isSelected: true,\n      disabled: true\n    },\n    {\n      value: 'Option 1',\n      isSelected: false\n    },\n    {\n      value: 'Option 2',\n      isSelected: false\n    },\n    {\n      value: 'Option 3',\n      isSelected: false\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "selectOrDeSelectAllOptions",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "setMultiSelectPlaceholder",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "setSingleSelectPlaceholder",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "singleSelectValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-select-example',\n  templateUrl: './select-example.component.html',\n  styleUrls: ['./select-example.component.scss']\n})\nexport class SelectExampleComponent implements OnInit {\n  selectOptions = [\n    {\n      value: 'Please Select',\n      isSelected: true,\n      disabled: true\n    },\n    {\n      value: 'Option 1',\n      isSelected: false\n    },\n    {\n      value: 'Option 2',\n      isSelected: false\n    },\n    {\n      value: 'Option 3',\n      isSelected: false\n    }\n  ];\n\n  multiSelectOption = [\n    {\n      value: 'Option 1',\n      isSelected: false\n    },\n    {\n      label: 'Option 2',\n      value: 'Option2',\n      isSelected: false\n    },\n    {\n      label: 'Option 3',\n      value: 'Option3',\n      isSelected: false\n    }\n  ];\n\n  multiSelectDefaultPlaceholder = 'Please Select';\n\n  delimiter = '::';\n\n  objectKeys = Object.keys;\n\n  singleSelectValue = '';\n\n  multiSelectValue = '';\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.singleSelectValue = this.setSingleSelectPlaceholder();\n    this.multiSelectValue = this.setMultiSelectPlaceholder();\n  }\n\n  handleSingleSelectData = (eventData) => {\n    const updateSelectState = [...this.selectOptions];\n    updateSelectState.forEach((obj) => obj.isSelected = false);\n    const objIndex = updateSelectState.findIndex((obj) => obj.value === eventData.detail.key);\n    updateSelectState[objIndex].isSelected = true;\n    this.selectOptions = [...updateSelectState];\n    this.singleSelectValue = this.setSingleSelectPlaceholder();\n  };\n\n  setSingleSelectPlaceholder = () => this.selectOptions\n    .filter((el) => el.isSelected ? el.value : '')\n    .map((el) => el.value)\n    .join(this.delimiter);\n\n  handleMultiSelectData = (eventData) => {\n    if (eventData.detail.key) {\n      eventData.preventDefault();\n      const updateSelectState = [...this.multiSelectOption];\n      const objIndex = updateSelectState.findIndex((obj) => obj.value === eventData.detail.key);\n      updateSelectState[objIndex].isSelected = eventData.detail.status;\n      this.multiSelectOption = [...updateSelectState];\n      this.multiSelectValue = this.setMultiSelectPlaceholder();\n    }\n  };\n\n  setMultiSelectPlaceholder = () => {\n    const selecteddataObj = [];\n    this.multiSelectOption.forEach((element) => {\n      if (element.isSelected) {\n        selecteddataObj.push(element);\n      }\n    });\n    const resStr = selecteddataObj.map((elem) => elem.label ? elem.label : elem.value).join(this.delimiter);\n\n    return resStr ? resStr : this.multiSelectDefaultPlaceholder;\n  };\n\n  selectOrDeSelectAllOptions = (event) => {\n    const updateSelectState = [...this.multiSelectOption];\n    updateSelectState.forEach((obj) => obj.isSelected = event.target.checked);\n    this.multiSelectOption = [...updateSelectState];\n    this.multiSelectValue = this.setMultiSelectPlaceholder();\n  };\n\n  handleCloseEvent = (_event) => {};\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./select-example.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"nexus-h5\">Custom Content</p>\n\n<p class=\"nexus-h6\">Select</p>\n\n<div class=\"nexus-row\">\n  <div class=\"nexus-col-md-2\">\n    <nexus-form-field>\n      <nexus-label>Select an option Native</nexus-label>\n      <nexus-select value=\"\">\n        <option value=\"\" disabled selected>Please Select</option>\n        <option value=\"option1\">Option 1</option>\n        <option value=\"option2\">Option 2</option>\n        <option value=\"option3\">Option 3</option>\n      </nexus-select>\n    </nexus-form-field>\n  </div>\n  <div class=\"nexus-col-md-2\">\n    <nexus-form-field>\n      <nexus-label>Select an option Custom</nexus-label>\n      <nexus-select\n        type=\"custom\"\n        value=\"{{ singleSelectValue }}\"\n        (triggerSelection)=\"handleSingleSelectData($event)\"\n        (closeEvent)=\"handleCloseEvent($event)\"\n      >\n        <nexus-option\n          *ngFor=\"let element of selectOptions\"\n          value=\"{{ element.value }}\"\n          selected=\"{{ element.isSelected }}\"\n          [disabled]=\"element.disabled\"\n          >{{ element.value }}\n        </nexus-option>\n      </nexus-select>\n    </nexus-form-field>\n  </div>\n  <div class=\"nexus-col-md-2\">\n    <nexus-form-field>\n      <nexus-label>Select an option MultiSelect</nexus-label>\n      <nexus-select\n        type=\"custom\"\n        value=\"{{ multiSelectValue }}\"\n        delimiter=\"::\"\n        (triggerSelection)=\"handleMultiSelectData($event)\"\n        multiple\n        (closeEvent)=\"handleCloseEvent($event)\"\n      >\n        <nexus-option (click)=\"selectOrDeSelectAllOptions($event)\">\n          <nexus-checkbox>Select All</nexus-checkbox>\n        </nexus-option>\n        <nexus-option\n          *ngFor=\"let element of multiSelectOption\"\n          value=\"{{ element.value }}\"\n          selected=\"{{ element.isSelected }}\"\n        >\n          <nexus-checkbox checked=\"{{ element.isSelected }}\">{{ element.value }}</nexus-checkbox>\n        </nexus-option>\n      </nexus-select>\n    </nexus-form-field>\n  </div>\n</div>\n"
        },
        {
            "name": "SizeComponent",
            "id": "component-SizeComponent-d8812bb5e10da631d8879780776d88937ca987505839fd470fa4acfe0a38d8f23f25f6a7168b187a9797e29f078907793c48555da1531dd9dd807500a2d58460",
            "file": "src/app/sb/components/button/02_size.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-size-variants",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_size.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonSizeVariant",
                    "defaultValue": "buttonSizeVariant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { buttonSizeVariant } from '../../constants';\n\n@Component({\n  selector: 'app-button-size-variants',\n  templateUrl: './02_size.component.html'\n})\nexport default class SizeComponent {\n  buttonSizeVariant = buttonSizeVariant;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-2\">\n    <button data-testid=\"nexus-button-medium\" class=\"nexus-btn nexus-btn-medium\">{{buttonSizeVariant.medium}}</button>\n    <div class=\"nexus-mt-2 nexus-mb-2\"></div>\n\n    <button data-testid=\"nexus-button-medium\" class=\"nexus-btn nexus-btn-primary nexus-btn-large\">{{buttonSizeVariant.large}}</button>\n    <div class=\"nexus-mt-2 nexus-mb-2\"></div>\n\n    <div class=\"nexus-row nexus-around-xs\">\n        <div class=\"nexus-col-xs-3\">\n            <button data-testid=\"nexus-button-primary\" class=\"nexus-btn nexus-btn-fluid nexus-around-xs\">{{buttonSizeVariant.fluid}}</button>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-5efb7fd6486baf4f64387ec010637eb3ac1f3566fc1fcabfab9bc367e268506a5853b656de516e3cf089a0845000b55702ccb068fc452ca929545a7ceca96513",
            "file": "src/app/components/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [
                "./slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent {\n  @Input() max: number = 100;\n\n  @Input() min: number = 0;\n\n  @Input() disabled: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./slider.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-slider data-testid=\"slider\" [max]=\"max\" [min]=\"min\" [disabled]=\"disabled\"></nexus-slider>\n</nexus-form-field>\n"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-ffe098cf6d790cc2a148cc7fe50aec7be16e0964cbbf1aa55575eb31f9ace00de9406752f99dfce69bb2420c365373a6b36b222c719529b271d28917aee4dc8a-1",
            "file": "src/app/sb/components/slider/01_slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './01_slider.component.html'\n})\nexport default class SliderComponent {\n  @Input() max: number = 100;\n\n  @Input() min: number = 0;\n\n  @Input() disabled: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SliderComponent-1",
            "templateData": "<nexus-form-field>\n    <nexus-slider data-testid=\"slider\" [max]=\"max\" [min]=\"min\" [disabled]=\"disabled\"></nexus-slider>\n</nexus-form-field>"
        },
        {
            "name": "SliderDisabledComponent",
            "id": "component-SliderDisabledComponent-59d3da8e718ed1be00c5116e8202cbd570392afadf4a9144a7d29908f4904d574f15ee73846c0eeeeaa70d03044c2b331e3cd5ae9171aac55be8d85bb1482e7c",
            "file": "src/app/sb/components/slider/02_disabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_disabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-slider-disabled',\n  templateUrl: './02_disabled.component.html'\n})\nexport default class SliderDisabledComponent {\n  @Input() max: number = 100;\n\n  @Input() min: number = 0;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n    <nexus-slider data-testid=\"slider\" [max]=\"max\" [min]=\"min\" disabled=\"disabled\"></nexus-slider>\n</nexus-form-field>"
        },
        {
            "name": "SliderExamplesComponent",
            "id": "component-SliderExamplesComponent-99232b0a4d9c57c0c61ee9960561117891aef4dee7916d2d3426aad031f3f1c684b4a85eb946103d593622ead31212aa2e6e26addcff68ad6ab4edb31aec12db",
            "file": "src/app/components/slider-examples/slider-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider-examples",
            "styleUrls": [
                "./slider-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-slider-examples',\n  templateUrl: './slider-examples.component.html',\n  styleUrls: ['./slider-examples.component.scss']\n})\nexport class SliderExamplesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./slider-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label>Slider Disabled</nexus-label>\n  <nexus-slider disabled data-testid=\"slider-disabled\" disabled=\"true\"></nexus-slider>\n</nexus-form-field>\n"
        },
        {
            "name": "StackedBarChartComponent",
            "id": "component-StackedBarChartComponent-01622707bc56592d16145419be1eced4a13c1d8a76211d3a22efc36d5f4c2b7cb8997cfde0b452f201d6c28b01962e3420baf31da7598f15e66c0162e9c12992",
            "file": "src/app/components/stacked-bar-chart/stacked-bar-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stacked-bar-chart",
            "styleUrls": [
                "./stacked-bar-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stacked-bar-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentTankCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentXLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentYLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "elRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 230,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "gridlines",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "groupByConfiguration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideXAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hideYAxis",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "htmlElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 228,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inverse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "linearDomain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedYears",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showPieLegend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showXLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showXTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showYLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showYTicks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tankProductionData",
                    "defaultValue": "[\n    { year: '1941',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 943 },\n    { year: '1941',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 2680 },\n    { year: '1941',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1941',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 2321 },\n    { year: '1941',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 3016 },\n    { year: '1941',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 1353 },\n    { year: '1941',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 2591 },\n    { year: '1941',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 1430 },\n    { year: '1941',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1942',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 1500 },\n    { year: '1942',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 3952 },\n    { year: '1942',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 78 },\n    { year: '1942',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 9580 },\n    { year: '1942',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 13473 },\n    { year: '1942',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 2635 },\n    { year: '1942',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 10674 },\n    { year: '1942',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 15720 },\n    { year: '1942',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1943',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 1811 },\n    { year: '1943',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 9050 },\n    { year: '1943',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 740 },\n    { year: '1943',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 5512 },\n    { year: '1943',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 19808 },\n    { year: '1943',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 1422 },\n    { year: '1943',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 9024 },\n    { year: '1943',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 28164 },\n    { year: '1943',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1944',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 2507 },\n    { year: '1944',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 15380 },\n    { year: '1944',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 1069 },\n    { year: '1944',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 7155 },\n    { year: '1944',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 22618 },\n    { year: '1944',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 4764 },\n    { year: '1944',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 5738 },\n    { year: '1944',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 15489 },\n    { year: '1944',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 40 },\n    { year: '1945',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 1335 },\n    { year: '1945',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 2931 },\n    { year: '1945',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 140 },\n    { year: '1945',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 2966 },\n    { year: '1945',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 16602 },\n    { year: '1945',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 3100 },\n    { year: '1945',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 2801 },\n    { year: '1945',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 8055 },\n    { year: '1945',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 2162 }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vertices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 586,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateStackedBarChartData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 524,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getChartEl",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 265,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 604,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "randomizer",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectArcStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisLabelFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontFamily",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAxisTickFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 293,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectBarStrokeWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 298,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectColorScheme",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 303,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectGroupBy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 535,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectInnerRadius",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectInterpolation",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 313,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLegendFontSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 318,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLinearDomain",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectLineStroke",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 334,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMargin",
                    "args": [
                        {
                            "name": "marginAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 339,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "marginAttribute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectMaxBarWidth",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectTankCategory",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 552,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectXTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 350,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectYTickSize",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 355,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleGridlines",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 360,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleInverse",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 365,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleLegend",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 376,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleOrientation",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 389,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "togglePercent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 559,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggleShowHideXAxis",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 423,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 460,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideXTicks",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 473,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYAxis",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 478,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYLabel",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 514,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleShowHideYTicks",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 519,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleVertices",
                    "args": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 418,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "yearCheck",
                    "args": [
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 574,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-stacked-bar-chart',\n  templateUrl: './stacked-bar-chart.component.html',\n  styleUrls: ['./stacked-bar-chart.component.scss']\n})\nexport class StackedBarChartComponent implements OnInit {\n  public gridlines: any;\n\n  public inverse: any;\n\n  public showLegend: any;\n\n  public showPieLegend: any;\n\n  public vertices: any;\n\n  public hideYAxis: any;\n\n  public showYLabel: any;\n\n  public showYTicks: any;\n\n  public hideXAxis: any;\n\n  public showXLabel: any;\n\n  public showXTicks: any;\n\n  public currentTankCategory: any;\n\n  public currentXLabel: any;\n\n  public currentYLabel: any;\n\n  public groupByConfiguration: any;\n\n  public linearDomain: any;\n\n  public selectedYears: any;\n\n  public tankProductionData = [\n    { year: '1941',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 943 },\n    { year: '1941',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 2680 },\n    { year: '1941',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1941',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 2321 },\n    { year: '1941',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 3016 },\n    { year: '1941',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 1353 },\n    { year: '1941',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 2591 },\n    { year: '1941',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 1430 },\n    { year: '1941',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1942',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 1500 },\n    { year: '1942',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 3952 },\n    { year: '1942',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 78 },\n    { year: '1942',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 9580 },\n    { year: '1942',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 13473 },\n    { year: '1942',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 2635 },\n    { year: '1942',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 10674 },\n    { year: '1942',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 15720 },\n    { year: '1942',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1943',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 1811 },\n    { year: '1943',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 9050 },\n    { year: '1943',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 740 },\n    { year: '1943',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 5512 },\n    { year: '1943',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 19808 },\n    { year: '1943',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 1422 },\n    { year: '1943',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 9024 },\n    { year: '1943',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 28164 },\n    { year: '1943',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 0 },\n    { year: '1944',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 2507 },\n    { year: '1944',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 15380 },\n    { year: '1944',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 1069 },\n    { year: '1944',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 7155 },\n    { year: '1944',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 22618 },\n    { year: '1944',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 4764 },\n    { year: '1944',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 5738 },\n    { year: '1944',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 15489 },\n    { year: '1944',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 40 },\n    { year: '1945',\n      combatant: 'Germany',\n      armament: 'Light Tank',\n      produced: 1335 },\n    { year: '1945',\n      combatant: 'Germany',\n      armament: 'Medium Tank',\n      produced: 2931 },\n    { year: '1945',\n      combatant: 'Germany',\n      armament: 'Heavy Tank',\n      produced: 140 },\n    { year: '1945',\n      combatant: 'Soviet Union',\n      armament: 'Light Tank',\n      produced: 2966 },\n    { year: '1945',\n      combatant: 'Soviet Union',\n      armament: 'Medium Tank',\n      produced: 16602 },\n    { year: '1945',\n      combatant: 'Soviet Union',\n      armament: 'Heavy Tank',\n      produced: 3100 },\n    { year: '1945',\n      combatant: 'US',\n      armament: 'Light Tank',\n      produced: 2801 },\n    { year: '1945',\n      combatant: 'US',\n      armament: 'Medium Tank',\n      produced: 8055 },\n    { year: '1945',\n      combatant: 'US',\n      armament: 'Heavy Tank',\n      produced: 2162 }\n  ];\n\n  private htmlElement: HTMLElement;\n\n  constructor(public elRef: ElementRef) {\n    this.gridlines = false;\n    this.inverse = false;\n    this.showLegend = false;\n    this.showPieLegend = true;\n    this.vertices = true;\n    this.hideYAxis = false;\n    this.showYLabel = true;\n    this.showYTicks = true;\n    this.hideXAxis = false;\n    this.showXLabel = true;\n    this.showXTicks = true;\n\n    this.currentTankCategory = 'Medium Tank';\n    this.currentXLabel = 'Year';\n    this.currentYLabel = 'Production';\n    this.groupByConfiguration = 'year';\n    this.linearDomain = 'absolute';\n    this.selectedYears = ['1942', '1943', '1944'];\n\n    this.htmlElement = this.elRef.nativeElement;\n  }\n\n  public changeXLabel(args: any, value: any): any {\n    this.getChartEl(args).xLabel = value;\n    const xLabelInput = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInput.value = '';\n  }\n\n  public changeYLabel(args: any, value: any): any {\n    this.getChartEl(args).yLabel = value;\n    const yLabelInput = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInput.value = '';\n  }\n\n  public getChartEl(id: string): any {\n    return document.querySelector(id);\n  }\n\n  public randomizer(): any {\n    return Math.floor(Math.random() * 500) - 250;\n  }\n\n  public selectArcStroke(args: string): any {\n    const arcStroke = this.htmlElement.querySelector('#arcStroke') as HTMLInputElement;\n    this.getChartEl(args).stroke = arcStroke.value;\n  }\n\n  public selectAxisLabelFontSize(args: string): void {\n    const axisLabelFontSize = this.htmlElement.querySelector('#axisLabelFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisLabelFontSize = axisLabelFontSize.value;\n  }\n\n  public selectAxisTickFontSize(args: string): void {\n    const axisTickFontSize = this.htmlElement.querySelector('#axisTickFontSize') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontSize = axisTickFontSize.value;\n  }\n\n  public selectAxisTickFontFamily(args: string): void {\n    const axisTickFontFamily = this.htmlElement.querySelector('#axisTickFontFamily') as HTMLInputElement;\n    this.getChartEl(args).axisTickFontFamily = axisTickFontFamily.value;\n  }\n\n  public selectBarStroke(args: string): void {\n    const barStroke = this.htmlElement.querySelector('#barStroke') as HTMLInputElement;\n    this.getChartEl(args).barStroke = barStroke.value;\n  }\n\n  public selectBarStrokeWidth(args: string): void {\n    const barStrokeWidth = this.htmlElement.querySelector('#barStrokeWidth') as HTMLInputElement;\n    this.getChartEl(args).barStrokeWidth = barStrokeWidth.value;\n  }\n\n  public selectColorScheme(args: string): void {\n    const colorScheme = this.htmlElement.querySelector('#colorScheme') as HTMLInputElement;\n    this.getChartEl(args).colorScheme = colorScheme.value;\n  }\n\n  public selectInnerRadius(args: string): void {\n    const innerRadius = this.htmlElement.querySelector('#innerRadius') as HTMLInputElement;\n    this.getChartEl(args).innerRadius = innerRadius.value;\n  }\n\n  public selectInterpolation(args: string): void {\n    const interpolation = this.htmlElement.querySelector('#interpolation') as HTMLInputElement;\n    this.getChartEl(args).interpolation = interpolation.value;\n  }\n\n  public selectLegendFontSize(args: string): void {\n    const legendFontSize = this.htmlElement.querySelector('#legendFontSize') as HTMLInputElement;\n    this.getChartEl(args).legendFontSize = legendFontSize.value;\n  }\n\n  public selectLinearDomain(args: string): void {\n    const val = this.htmlElement.querySelector('#linearDomain') as HTMLInputElement;\n    const el = this.getChartEl(args);\n    if (val.value === 'percent') {\n      el.linearTickFormat = 'percent1d';\n    } else {\n      el.linearTickFormat = 'localestring';\n    }\n    this.getChartEl(args).linearDomain = val.value;\n  }\n\n  public selectLineStroke(args: string): void {\n    const val = this.htmlElement.querySelector('#lineStroke') as HTMLInputElement;\n    this.getChartEl(args).strokeWidth = val.value;\n  }\n\n  public selectMargin(marginAttribute: string, args: any): any {\n    const val = this.htmlElement.querySelector(`#${marginAttribute}`) as HTMLInputElement;\n    const el = this.getChartEl(args);\n    el[marginAttribute] = val.value;\n  }\n\n  public selectMaxBarWidth(args: string): void {\n    const val = this.htmlElement.querySelector('#maxBarWidth') as HTMLInputElement;\n    this.getChartEl(args).maxBarWidth = val.value;\n  }\n\n  public selectXTickSize(args: string): void {\n    const val = this.htmlElement.querySelector('#xTickSize') as HTMLInputElement;\n    this.getChartEl(args).xTickSize = val.value;\n  }\n\n  public selectYTickSize(args: string): void {\n    const val = this.htmlElement.querySelector('#yTickSize') as HTMLInputElement;\n    this.getChartEl(args).yTickSize = val.value;\n  }\n\n  public toggleGridlines(args: string): void {\n    this.gridlines = !this.gridlines;\n    this.getChartEl(args).gridlines = this.gridlines;\n  }\n\n  public toggleInverse(args: string): void {\n    this.inverse = !this.inverse;\n    this.getChartEl(args).inverse = this.inverse;\n\n    if (this.inverse) {\n      this.htmlElement.querySelector('div.chart').classList.add('inverse');\n    } else {\n      this.htmlElement.querySelector('div.chart').classList.remove('inverse');\n    }\n  }\n\n  public toggleLegend(args: string): void {\n    if (args === 'nexus-pie-chart') {\n      this.showPieLegend = !this.showPieLegend;\n      this.getChartEl(args).legend = this.showPieLegend;\n\n      return;\n    }\n\n    this.showLegend = !this.showLegend;\n\n    this.getChartEl(args).legend = this.showLegend;\n  }\n\n  public toggleOrientation(args: string): void {\n    const orientationValue = this.htmlElement.querySelector('#orientation') as HTMLInputElement;\n    const val = orientationValue.value || 'vertical';\n    const el = this.getChartEl(args);\n    let xLabel: any;\n    let yLabel: any;\n\n    // horizontal orientation\n    if (val === 'horizontal') {\n      if (args === 'nexus-stacked-bar-chart') {\n        xLabel = 'Production';\n        yLabel = 'Year';\n      } else {\n        xLabel = 'Price';\n        yLabel = 'Ticker Symbol';\n      }\n    } else if (args === 'nexus-stacked-bar-chart') {\n      xLabel = 'Year';\n      yLabel = 'Production';\n    } else {\n      xLabel = 'Ticker Symbol';\n      yLabel = 'Price';\n    }\n\n    el.orientation = val;\n    el.xLabel = xLabel;\n    el.yLabel = yLabel;\n  }\n\n  public toggleVertices(args: string): void {\n    this.vertices = !this.vertices;\n    this.getChartEl(args).vertices = this.vertices;\n  }\n\n  public toggleShowHideXAxis(args: string): void {\n    this.hideXAxis = !this.hideXAxis;\n    const el = this.getChartEl(args);\n\n    if (this.hideXAxis) {\n      el.xLabel = '';\n      el.hideXAxis = true;\n      el.hideXTicks = true;\n\n      this.showXLabel = false;\n      this.showXTicks = false;\n\n      const xLabelItem = this.htmlElement.querySelector('#xLabel') as HTMLInputElement;\n      xLabelItem.checked = false;\n      xLabelItem.disabled = true;\n\n      const xTicksItem = this.htmlElement.querySelector('#xTicks') as HTMLInputElement;\n      xTicksItem.checked = false;\n      xTicksItem.disabled = true;\n    } else {\n      el.xLabel = 'Date';\n      el.hideXAxis = false;\n      el.hideXTicks = false;\n\n      this.showXLabel = true;\n      this.showXTicks = true;\n\n      const xLabelItem1 = this.htmlElement.querySelector('#xLabel') as HTMLInputElement;\n      xLabelItem1.checked = true;\n      xLabelItem1.disabled = false;\n\n      const xTicksItem1 = this.htmlElement.querySelector('#xTicks') as HTMLInputElement;\n      xTicksItem1.checked = true;\n      xTicksItem1.disabled = false;\n    }\n  }\n\n  public toggleShowHideXLabel(args: string): void {\n    this.showXLabel = !this.showXLabel;\n\n    let label: any;\n    label = '';\n    switch (args) {\n    default:\n      label = 'Date';\n      break;\n    }\n    this.getChartEl(args).xLabel = this.showXLabel ? label : '';\n  }\n\n  public toggleShowHideXTicks(args: string): void {\n    this.showXTicks = !this.showXTicks;\n    this.getChartEl(args).hideXTicks = !this.showXTicks;\n  }\n\n  public toggleShowHideYAxis(args: string): void {\n    this.hideYAxis = !this.hideYAxis;\n    const el = this.getChartEl(args);\n\n    if (this.hideYAxis) {\n      el.yLabel = '';\n      el.hideYAxis = true;\n      el.hideYTicks = true;\n\n      this.showYLabel = false;\n      this.showYTicks = false;\n\n      const yLabelItem2 = this.htmlElement.querySelector('#yLabel') as HTMLInputElement;\n      yLabelItem2.checked = false;\n      yLabelItem2.disabled = true;\n\n      const yTicksItem2 = this.htmlElement.querySelector('#yTicks') as HTMLInputElement;\n      yTicksItem2.checked = false;\n      yTicksItem2.disabled = true;\n    } else {\n      el.yLabel = 'Score';\n      el.hideYAxis = false;\n      el.hideYTicks = false;\n\n      this.showYLabel = true;\n      this.showYTicks = true;\n\n      const yLabelItem3 = this.htmlElement.querySelector('#yLabel') as HTMLInputElement;\n      yLabelItem3.checked = true;\n      yLabelItem3.disabled = false;\n      const yTicksItem3 = this.htmlElement.querySelector('#yTicks') as HTMLInputElement;\n      yTicksItem3.checked = true;\n      yTicksItem3.disabled = false;\n    }\n  }\n\n  public toggleShowHideYLabel(args: string): void {\n    this.showYLabel = !this.showYLabel;\n    this.getChartEl(args).yLabel = this.showYLabel ? 'Score' : '';\n  }\n\n  public toggleShowHideYTicks(args: string): void {\n    this.showYTicks = !this.showYTicks;\n    this.getChartEl(args).hideYTicks = !this.showYTicks;\n  }\n\n  public generateStackedBarChartData(): void {\n    let filteredData: any;\n\n    if (this.groupByConfiguration === 'country') {\n      filteredData = this.tankProductionData.filter((fData) => fData.armament === this.currentTankCategory);\n    } else {\n      filteredData = this.tankProductionData.filter((fData) => this.selectedYears.indexOf(fData.year) >= 0 && fData.armament === this.currentTankCategory);\n    }\n    this.getChartEl('nexus-stacked-bar-chart').chartData = filteredData;\n  }\n\n  public selectGroupBy(): void {\n    const groupBy = this.htmlElement.querySelector('#groupBy') as HTMLInputElement;\n    const val = groupBy.value || 'year';\n    const el = this.getChartEl('nexus-stacked-bar-chart');\n    if (val === 'country') {\n      el.ordinalMetric = 'combatant';\n      el.seriesMetric = 'year';\n      this.currentXLabel = 'Country';\n      el.xLabel = 'Country';\n    } else {\n      el.ordinalMetric = 'year';\n      el.seriesMetric = 'combatant';\n      this.currentXLabel = 'Year';\n      el.xLabel = 'Year';\n    }\n  }\n\n  public selectTankCategory(): void {\n    const tankCategory = this.htmlElement.querySelector('#tankCategory') as HTMLInputElement;\n    const val = tankCategory.value || 'Light Tank';\n    this.currentTankCategory = val;\n    this.generateStackedBarChartData();\n  }\n\n  public togglePercent(): void {\n    let tickFormat;\n    const el = this.getChartEl('nexus-stacked-bar-chart');\n\n    if (this.linearDomain === 'absolute') {\n      this.linearDomain = 'percent';\n      tickFormat = 'percent';\n    } else {\n      this.linearDomain = 'absolute';\n      tickFormat = 'localestring';\n    }\n    el.linearDomain = this.linearDomain;\n    el.linearTickFormat = tickFormat;\n  }\n\n  public yearCheck(year): void {\n    const el = this.htmlElement.querySelector(`#year${year}`) as HTMLInputElement;\n    if (el) {\n      if (el.checked) {\n        this.selectedYears.push(year);\n      } else {\n        this.selectedYears = this.selectedYears.filter((fData) => fData !== year);\n      }\n      this.generateStackedBarChartData();\n    }\n  }\n\n  public addListeners(): any {\n    const xLabelInputMethod = this.htmlElement.querySelector('#xLabelInput') as HTMLInputElement;\n    xLabelInputMethod.addEventListener('keyup', (evt) => {\n      if (evt.key === 'Enter') {\n        const evtVal = evt.target as HTMLInputElement;\n        this.changeXLabel('nexus-stacked-bar-chart', evtVal.value);\n      }\n    });\n\n    const yLabelInputMethod = this.htmlElement.querySelector('#yLabelInput') as HTMLInputElement;\n    yLabelInputMethod.addEventListener('keyup', (evt) => {\n      if (evt.key === 'Enter') {\n        const evtVal = evt.target as HTMLInputElement;\n        this.changeYLabel('nexus-stacked-bar-chart', evtVal.value);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.addListeners();\n    const chartComponent = this.htmlElement.querySelector('#nexus-stacked-bar-chart') as HTMLInputElement;\n    chartComponent.addEventListener('nexus-stacked-bar-chart-loaded', (evt) => {\n      this.generateStackedBarChartData();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '@nexus/core/dist/styles/variables';\n\nh1,\nh2,\nh3 {\n  color: $grey-700;\n}\n\na {\n  color: $blue-400;\n  text-decoration: none;\n}\n\na:hover {\n  color: $blue-700;\n  text-decoration: none;\n}\n\npre.code {\n  white-space: pre-wrap;\n  background: hsl(30, 80%, 90%);\n  padding: 1.25 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  font-size: 1.25 * $rhythm;\n  border: solid 1px $grey-100;\n  color: $grey-900;\n}\n\n/*********************************************\n * Form\n *********************************************/\n\nselect {\n  padding: $rhythm 2 * $rhythm $rhythm $rhythm;\n  display: inline-block;\n  line-height: 3 * $rhythm;\n  font-size: 2 * $rhythm;\n  width: 100%;\n}\n\n/*********************************************\n * Classes\n *********************************************/\n\nbutton.action {\n  background: $grey-700;\n  font-size: 2 * $rhythm;\n  color: $grey-100;\n  height: 3.5 * $rhythm;\n  border-radius: 0.5 * $rhythm;\n  padding: 0 1.25 * $rhythm;\n  cursor: pointer;\n}\n\nbutton.action:hover {\n  background: $grey-900;\n}\n\ndiv.btn-item,\ndiv.cbx-item,\ndiv.select-item {\n  padding-left: 0.5 * $rhythm;\n  padding-right: 0.5 * $rhythm;\n}\n\ndiv.chart {\n  min-height: 60 * $rhythm;\n}\n\ndiv.inverse {\n  background: $grey-900;\n}\n\ndiv.control-category {\n  border-bottom: solid 1px $grey-100;\n  padding-bottom: 0.5 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n  font-weight: 600;\n}\n\ndiv.control-item {\n  margin-top: 1.25 * $rhythm;\n  margin-bottom: 1.25 * $rhythm;\n}\n\ndiv.header-link {\n  margin-right: 2 * $rhythm;\n}\n\ndiv.header-link a {\n  color: $grey-100;\n}\n\ndiv.header-link a:hover {\n  color: $orange-400;\n}\n\ndiv.hoz-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.1em;\n}\n\ndiv.page-title {\n  font-size: 2.25 * $rhythm;\n  color: $grey-900;\n  padding: 0.5 * $rhythm $rhythm;\n  border-radius: 0.5 * $rhythm;\n  background: $grey-100;\n  margin-bottom: 2 * $rhythm;\n  text-align: center;\n}\n\ndiv.select-el {\n  margin-top: 0.5 * $rhythm;\n}\n\ndiv.select-group {\n  font-size: 2 * $rhythm;\n  font-style: italic;\n  color: $blue-400;\n}\n\ndiv.select-item > label {\n  font-size: 0.8em;\n}\n\ndiv.select-item > label,\ndiv.select-item > select {\n  display: inline;\n}\n\n.position {\n  position: inherit;\n}\n",
                    "styleUrl": "./stacked-bar-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 228,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"wrapper\" class=\"nexus-row\">\n    <div id=\"control-container\" class=\"nexus-col-xs-4 nexus-col-lg-3\">\n      <!-- X axis -->\n      <div class=\"control-category\">X-axis</div>\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"x-label\" id=\"xLabel\" checked (change)=\"toggleShowHideXLabel('nexus-stacked-bar-chart')\"\n          >Show Label</nexus-checkbox\n        >\n      </div>\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"x-ticks\" id=\"xTicks\" checked (change)=\"toggleShowHideXTicks('nexus-stacked-bar-chart')\"\n          >Show Tick Values</nexus-checkbox\n        >\n      </div>\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"hide-x\" id=\"hideX\" (change)=\"toggleShowHideXAxis('nexus-stacked-bar-chart')\"\n          >Hide Entire X-axis</nexus-checkbox\n        >\n      </div>\n      <div class=\"control-item\">\n        <nexus-label for=\"xTickSize\" class=\"select\">Tick Size / Length</nexus-label>\n        <select name=\"x-tick-size\" id=\"xTickSize\" (input)=\"selectXTickSize('nexus-stacked-bar-chart')\">\n          <option value=\"2\" selected>2</option>\n          <option value=\"4\">4</option>\n          <option value=\"10\">10</option>\n          <option value=\"12\">12</option>\n          <option value=\"16\">16</option>\n        </select>\n      </div>\n      <div class=\"control-item\">\n        <nexus-label for=\"xLabelInput\" class=\"select\">Label</nexus-label>\n        <nexus-input type=\"text\" placeholder=\"Enter text\" id=\"xLabelInput\"></nexus-input>\n      </div>\n\n      <!-- Y axis -->\n      <div class=\"control-category\">Y-axis</div>\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"y-label\" id=\"yLabel\" checked (change)=\"toggleShowHideYLabel('nexus-stacked-bar-chart')\"\n          >Show Label</nexus-checkbox\n        >\n      </div>\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"y-ticks\" id=\"yTicks\" checked (change)=\"toggleShowHideYTicks('nexus-stacked-bar-chart')\"\n          >Show Tick Values</nexus-checkbox\n        >\n      </div>\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"hide-y\" id=\"hideY\" (change)=\"toggleShowHideYAxis('nexus-stacked-bar-chart')\"\n          >Hide Entire Y-axis</nexus-checkbox\n        >\n      </div>\n      <div class=\"control-item\">\n        <nexus-label for=\"yTickSize\" class=\"select\">Tick Size / Length</nexus-label>\n        <select name=\"y-tick-size\" id=\"yTickSize\" (input)=\"selectYTickSize('nexus-stacked-bar-chart')\">\n          <option value=\"2\" selected>2</option>\n          <option value=\"4\">4</option>\n          <option value=\"10\">10</option>\n          <option value=\"12\">12</option>\n          <option value=\"16\">16</option>\n        </select>\n      </div>\n      <div class=\"control-item\">\n        <nexus-label for=\"yLabelInput\" class=\"select\">Label</nexus-label>\n        <nexus-input type=\"text\" placeholder=\"Enter text\" id=\"yLabelInput\"></nexus-input>\n      </div>\n\n      <!-- miscellaneous options -->\n      <div class=\"control-category\">Options</div>\n\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"show-gridlines\" id=\"showGridlines\" (change)=\"toggleGridlines('nexus-stacked-bar-chart')\"\n          >Gridlines</nexus-checkbox\n        >\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"inverse\" id=\"inverse\" (change)=\"toggleInverse('nexus-stacked-bar-chart')\"\n          >Inverse</nexus-checkbox\n        >\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-checkbox name=\"show-legend\" id=\"showLegend\" (change)=\"toggleLegend('nexus-stacked-bar-chart')\"\n          >Legend</nexus-checkbox\n        >\n      </div>\n\n      <!-- axis other -->\n      <div class=\"control-item\">\n        <nexus-label for=\"axisLabelFontSize\" class=\"select\">Axis Label Font Size</nexus-label>\n        <select\n          name=\"axis-label-font-size\"\n          id=\"axisLabelFontSize\"\n          (input)=\"selectAxisLabelFontSize('nexus-stacked-bar-chart')\"\n        >\n          <option value=\"9\">9px</option>\n          <option value=\"12\">12px</option>\n          <option value=\"14\" selected>14px</option>\n          <option value=\"16\">16px</option>\n          <option value=\"20\">20px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"axisTickFontFamily\" class=\"select\">Axis Tick Font Family</nexus-label>\n        <select\n          name=\"axis-tick-font-family\"\n          id=\"axisTickFontFamily\"\n          (input)=\"selectAxisTickFontFamily('nexus-stacked-bar-chart')\"\n        >\n          <option value=\"sans\" selected>sans-serif</option>\n          <option value=\"serif\">serif</option>\n          <option value=\"monospace\">monospace</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"axisTickFontSize\" class=\"select\">Axis Tick Font Size</nexus-label>\n        <select\n          name=\"axis-tick-font-size\"\n          id=\"axisTickFontSize\"\n          (input)=\"selectAxisTickFontSize('nexus-stacked-bar-chart')\"\n        >\n          <option value=\"8\">8px</option>\n          <option value=\"9\">9px</option>\n          <option value=\"10\" selected>10px</option>\n          <option value=\"12\">12px</option>\n        </select>\n      </div>\n\n      <!-- bar stuff -->\n      <div class=\"control-item\">\n        <nexus-label for=\"barStroke\" class=\"select\">Bar Stroke</nexus-label>\n        <select name=\"bar_stroke\" id=\"barStroke\" (input)=\"selectBarStroke('nexus-stacked-bar-chart')\">\n          <option value=\"transparent\" selected>transparent</option>\n          <option value=\"#000000\">black</option>\n          <option value=\"#ffffff\">white</option>\n          <option value=\"#999999\">gray</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"barStrokeWidth\" class=\"select\">Bar Stroke Width</nexus-label>\n        <select name=\"bar_stroke_width\" id=\"barStrokeWidth\" (input)=\"selectBarStrokeWidth('nexus-stacked-bar-chart')\">\n          <option value=\"0\">none</option>\n          <option value=\"1\" selected>1px</option>\n          <option value=\"2\">2px</option>\n          <option value=\"5\">5px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"maxBarWidth\" class=\"select\">Bar Width, Max</nexus-label>\n        <select name=\"max_bar_width\" id=\"maxBarWidth\" (input)=\"selectMaxBarWidth('nexus-stacked-bar-chart')\">\n          <option value=\"5\">5px</option>\n          <option value=\"25\">25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"75\" selected>75px</option>\n          <option value=\"2000\">fill space</option>\n        </select>\n      </div>\n\n      <!-- color scheme --->\n      <div class=\"control-item\">\n        <nexus-label for=\"colorScheme\" class=\"select\">Color Scheme</nexus-label>\n        <select name=\"color-scheme\" id=\"colorScheme\" (input)=\"selectColorScheme('nexus-stacked-bar-chart')\">\n          <option value=\"category10\" selected>Category 10</option>\n          <option value=\"accent\">Accent</option>\n          <option value=\"paired\">Paired</option>\n          <option value=\"set1\">Set 1</option>\n          <option value=\"set2\">Set 2</option>\n          <option value=\"set3\">Set 3</option>\n          <option value=\"black\">Black</option>\n          <option value=\"gray\">Gray</option>\n        </select>\n      </div>\n\n      <!-- legend font size -->\n      <div class=\"control-item\">\n        <nexus-label for=\"legendFontSize\" class=\"select\">Legend Font Size</nexus-label>\n        <select name=\"legend_font_size\" id=\"legendFontSize\" (input)=\"selectLegendFontSize('nexus-stacked-bar-chart')\">\n          <option value=\"10\">10px</option>\n          <option value=\"12\" selected>12px</option>\n          <option value=\"14\">14px</option>\n        </select>\n      </div>\n\n      <!-- orientation -->\n      <div class=\"control-item\">\n        <nexus-label for=\"orientation\" class=\"select\">Orientation</nexus-label>\n        <select name=\"orient\" id=\"orientation\" (input)=\"toggleOrientation('nexus-stacked-bar-chart')\">\n          <option value=\"vertical\" selected>vertical</option>\n          <option value=\"horizontal\">horizontal</option>\n        </select>\n      </div>\n\n      <!-- top, right, bottom, left margins -->\n      <div class=\"control-item\">\n        <nexus-label for=\"marginBottom\" class=\"select\">Margin Bottom</nexus-label>\n        <select name=\"margin-bottom\" id=\"marginBottom\" (input)=\"selectMargin('marginBottom', 'nexus-stacked-bar-chart')\">\n          <option value=\"25\" selected>25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"75\">75px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginRight\" class=\"select\">Margin Right</nexus-label>\n        <select name=\"margin_right\" id=\"marginRight\" (input)=\"selectMargin('marginRight', 'nexus-stacked-bar-chart')\">\n          <option value=\"25\" selected>25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"75\">75px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginLeft\" class=\"select\">Margin Left</nexus-label>\n        <select name=\"margin_left\" id=\"marginLeft\" (input)=\"selectMargin('marginLeft', 'nexus-stacked-bar-chart')\">\n          <option value=\"25\" selected>25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"75\">75px</option>\n        </select>\n      </div>\n\n      <div class=\"control-item\">\n        <nexus-label for=\"marginTop\" class=\"select\">Margin Top</nexus-label>\n        <select name=\"margin_top\" id=\"marginTop\" (input)=\"selectMargin('marginTop', 'nexus-stacked-bar-chart')\">\n          <option value=\"25\" selected>25px</option>\n          <option value=\"50\">50px</option>\n          <option value=\"75\">75px</option>\n        </select>\n      </div>\n\n      <!-- absolute or percentage value view -->\n      <div class=\"control-item\">\n        <nexus-label for=\"linearDomain\" class=\"select\">Values</nexus-label>\n        <select name=\"linear_domain\" id=\"linearDomain\" (input)=\"selectLinearDomain('nexus-stacked-bar-chart')\">\n          <option value=\"absolute\" selected>absolute</option>\n          <option value=\"percent\">percentages</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- chart container -->\n    <div id=\"chart-container\" class=\"nexus-col-xs-4 nexus-col-lg-9 position\">\n      <div class=\"page-title\">&lt;nexus-stacked-bar-chart&gt;</div>\n\n      <div class=\"hoz-group\">\n        <div class=\"select-item\">\n          <nexus-label for=\"armament\">Category:</nexus-label>\n          <select name=\"tank-category\" id=\"tankCategory\" (input)=\"selectTankCategory()\">\n            <option selected value=\"Light Tank\">Light Tanks</option>\n            <option value=\"Medium Tank\">Medium Tanks</option>\n            <option value=\"Heavy Tank\">Heavy Tanks</option>\n          </select>\n        </div>\n\n        <div class=\"select-item\">\n          <nexus-label for=\"armament\">Group By:</nexus-label>\n          <select name=\"group-by\" id=\"groupBy\" (input)=\"selectGroupBy()\">\n            <option selected value=\"year\">Year</option>\n            <option value=\"country\">Country</option>\n          </select>\n        </div>\n        <div class=\"cbx-item\">Production Year(s):</div>\n        <div class=\"cbx-item\">\n          <nexus-checkbox id=\"year1941\" value=\"1941\" (change)=\"yearCheck('1941')\">1941</nexus-checkbox>\n        </div>\n        <div class=\"cbx-item\">\n          <nexus-checkbox id=\"year1942\" value=\"1942\" checked (change)=\"yearCheck('1942')\">1942</nexus-checkbox>\n        </div>\n\n        <div class=\"cbx-item\">\n          <nexus-checkbox id=\"year1943\" value=\"1943\" checked (change)=\"yearCheck('1943')\">1943</nexus-checkbox>\n        </div>\n\n        <div class=\"cbx-item\">\n          <nexus-checkbox id=\"year1944\" value=\"1944\" checked (change)=\"yearCheck('1944')\">1944</nexus-checkbox>\n        </div>\n\n        <div class=\"cbx-item\">\n          <nexus-checkbox id=\"year1945\" value=\"1945\" (change)=\"yearCheck('1945')\">1945</nexus-checkbox>\n        </div>\n      </div>\n\n      <div class=\"chart\">\n        <nexus-stacked-bar-chart\n          chart-id=\"mynexusStackedBarChart\"\n          linear-metric=\"produced\"\n          linear-tick-format=\"localestring\"\n          margin-left=\"50\"\n          ordinal-metric=\"year\"\n          responsive\n          series-metric=\"combatant\"\n          x-label=\"Year\"\n          y-label=\"Production\"\n          [chartData]=\"tankProductionData\"\n        ></nexus-stacked-bar-chart>\n      </div>\n    </div>\n  </div>"
        },
        {
            "name": "StateComponent",
            "id": "component-StateComponent-c61572757bcb50b9c13cf6d232522f73a733a52ccfd0539fd17a0fbe716bc742f49c409f28da5164bf17359d394dab914539cc61c32032f65f189747efed3181",
            "file": "src/app/sb/components/button/03_state.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-states",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_state.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonState",
                    "defaultValue": "buttonState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { buttonState } from '../../constants';\n\n@Component({\n  selector: 'app-button-states',\n  templateUrl: './03_state.component.html'\n})\nexport default class StateComponent {\n  buttonState = buttonState;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-mt-2\">\n    <div class=\"nexus-row nexus-center-xs\">\n        <div class=\"nexus-col-xs-4 nexus-col-md-4 nexus-col-lg-2\">\n            <button data-testid=\"btnVariantDefault\" class=\"nexus-btn nexus-mt-2\">{{buttonState.default}}</button>\n        </div>\n        <div class=\"nexus-col-xs-4 nexus-col-md-4 nexus-col-lg-2\">\n            <button data-testid=\"btnVariantPrimary\" class=\"nexus-btn-primary nexus-mt-2\">{{buttonState.primary}}</button>\n        </div>\n        <div class=\"nexus-col-xs-4 nexus-col-md-4 nexus-col-lg-2\">\n            <button data-testid=\"btnVariantWarn\" class=\"nexus-btn-warn nexus-mt-2\">{{buttonState.warn}}</button>\n        </div>\n        <div class=\"nexus-col-xs-4 nexus-col-md-4 nexus-col-lg-2 nexus-mt-3\">\n            <button class=\"nexus-link\">{{buttonState.link}}</button>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "StatusComponent",
            "id": "component-StatusComponent-85e7b3a410ae86a4068ee5cb891cbdc6621497e86ee1fa4cc0c240d9f5703313569d672cd058f97427fa7ddd9b23c02408438dc4ed250abbe06d7ffd82a48654",
            "file": "src/app/sb/components/avatar/07_status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar-examples-status",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./07_status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "avatarNameDisplay",
                    "defaultValue": "status.avatarNameDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "name",
                    "defaultValue": "status.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "defaultValue": "status.size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "status",
                    "defaultValue": "status.status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { status } from '../../constants';\n@Component({\n  selector: 'app-avatar-examples-status',\n  templateUrl: './07_status.component.html'\n})\nexport default class StatusComponent {\n  name = status.name;\n\n  size = status.size;\n\n  status = status.status;\n\n  avatarNameDisplay = status.avatarNameDisplay;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xl-2\">\n  <p>\n    <nexus-avatar\n      [avatarSize]=\"size\"\n      [userName]=\"name\"\n      [avatarStatus]=\"status\"\n      [avatarNameDisplay]=\"avatarNameDisplay\"\n    ></nexus-avatar>\n  </p>\n</div>\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-edc233eabac357c0d5d66025c7fdc165bd992a589bac2c511a7f73aa2f81921a1bac107c191d57f0fd67bc4e81fca0441bde45dd376964c2895cd7ea4ae2cd7b",
            "file": "src/app/components/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "steppertype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss']\n})\nexport class StepperComponent implements OnInit {\n  @Input() steppertype: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nexus-stepper [steppertype]=\"steppertype\">\n  <nexus-stepper-item status=\"complete\">\n    <button aria-label=\"step1\" class=\"step-item-target\">Source data</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"active\">\n    <button aria-current=\"step\">Data exploration</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step3\">Feature sets</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"warning\">\n    <button aria-label=\"step4\">Training</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item>\n    <button aria-label=\"step5\">Test & analysis</button>\n  </nexus-stepper-item>\n</nexus-stepper>\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-e0a4c3d40b9223378899b8d9512c0cb0834be9cc8f18ad8c81194f178c01b2a580472aedd58c3de7987a07c306b64b4887f12db876fd8be8015722df505be135-1",
            "file": "src/app/sb/components/stepper/01_stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "steppertype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "DefaultStepper",
                    "defaultValue": "DefaultStepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DefaultStepper } from '../../constants';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './01_stepper.component.html'\n})\nexport default class StepperComponent {\n  @Input() steppertype: string;\n\n  DefaultStepper = DefaultStepper;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "StepperComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-pt-3 nexus-pl-6\">\n  <nexus-stepper [steppertype]=\"steppertype\">\n    <nexus-stepper-item status=\"complete\">\n      <button aria-label=\"step1\" class=\"step-item-target\">{{DefaultStepper.source}}</button>\n    </nexus-stepper-item>\n    <nexus-stepper-item status=\"active\">\n      <button aria-current=\"step\">{{DefaultStepper.dataExploration}}</button>\n    </nexus-stepper-item>\n    <nexus-stepper-item status=\"default\">\n      <button aria-label=\"step3\">{{DefaultStepper.featureSets}}</button>\n    </nexus-stepper-item>\n    <nexus-stepper-item status=\"warning\">\n      <button aria-label=\"step4\">{{DefaultStepper.training}}</button>\n    </nexus-stepper-item>\n    <nexus-stepper-item>\n      <button aria-label=\"step5\">{{DefaultStepper.test}}</button>\n    </nexus-stepper-item>\n  </nexus-stepper>\n</div>"
        },
        {
            "name": "StepperExamplesComponent",
            "id": "component-StepperExamplesComponent-394c6a1c95a1c32117346000af1d56b62511ab47814163ceddbcb3998c20172ddd9b9735d058a84a86b35dce6531204b789af01b2678c7346bdaf8f998f02e2d",
            "file": "src/app/components/stepper-examples/stepper-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper-examples",
            "styleUrls": [
                "./stepper-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stepper-examples',\n  templateUrl: './stepper-examples.component.html',\n  styleUrls: ['./stepper-examples.component.scss']\n})\nexport class StepperExamplesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./stepper-examples.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nexus-stepper>\n  <nexus-stepper-item status=\"active\">\n    <button aria-label=\"step1\">Source data</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-current=\"step\">Data exploration</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step3\">Feature sets</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step4\">Training</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step5\">Test & analysis</button>\n  </nexus-stepper-item>\n</nexus-stepper>\n<nexus-stepper>\n  <nexus-stepper-item status=\"complete\">\n    <button aria-label=\"step1\">Source data</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"active\">\n    <button aria-current=\"step\">Data exploration</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step3\">Feature sets</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step4\">Training</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step5\">Test & analysis</button>\n  </nexus-stepper-item>\n</nexus-stepper>\n<nexus-stepper>\n  <nexus-stepper-item status=\"complete\">\n    <button aria-label=\"step1\">Source data</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"complete\">\n    <button aria-current=\"step\">Data exploration</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"active\">\n    <button aria-label=\"step3\">Feature sets</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step4\">Training</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step5\">Test & analysis</button>\n  </nexus-stepper-item>\n</nexus-stepper>\n<nexus-stepper>\n  <nexus-stepper-item status=\"complete\">\n    <button aria-label=\"step1\">Source data</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"complete\">\n    <button aria-current=\"step\">Data exploration</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"error\">\n    <button aria-label=\"step3\">Feature sets</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step4\">Training</button>\n  </nexus-stepper-item>\n  <nexus-stepper-item status=\"default\">\n    <button aria-label=\"step5\">Test & analysis</button>\n  </nexus-stepper-item>\n</nexus-stepper>\n"
        },
        {
            "name": "StepperStatusComponent",
            "id": "component-StepperStatusComponent-1ba6127fdf7744281d6e981baaf386e969a736aa60c50bffaf1178274f94d6f2eb862bd6dc73fd9ea384df0b1f9a846e2be4d54f9d0bf6ee82923c2f89b22877",
            "file": "src/app/sb/components/stepper/02_status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper-status",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "StepperStatus",
                    "defaultValue": "StepperStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { StepperStatus } from '../../constants';\n\n@Component({\n  selector: 'app-stepper-status',\n  templateUrl: './02_status.component.html'\n})\nexport default class StepperStatusComponent {\n  StepperStatus = StepperStatus;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-pt-3 nexus-pl-6\">\n    <nexus-stepper>\n        <nexus-stepper-item status=\"complete\">\n            <button aria-label=\"step1\">{{StepperStatus.createJourney}}</button>\n        </nexus-stepper-item>\n        <nexus-stepper-item status=\"complete\">\n            <button aria-current=\"step\">{{StepperStatus.addJourneyStep}}</button>\n        </nexus-stepper-item>\n        <nexus-stepper-item status=\"active\">\n            <a aria-label=\"step3\">{{StepperStatus.linkToJourneyStep}}</a>\n        </nexus-stepper-item>\n        <nexus-stepper-item status=\"error\">\n            <button aria-label=\"step4\">{{StepperStatus.bindActionsToActivity}}</button>\n        </nexus-stepper-item>\n        <nexus-stepper-item status=\"default\">\n            <button aria-label=\"step5\">{{StepperStatus.activate}}</button>\n        </nexus-stepper-item>\n    </nexus-stepper>\n</div>"
        },
        {
            "name": "SwitchDisabledComponent",
            "id": "component-SwitchDisabledComponent-00162e7e0f7290f370690a732261e920e3053341c7092a31ea615084636c67e4f90bf9b6a01fd4770b59a3acf35d63a00dd336abde715e15bb8c4714eb56ff9c",
            "file": "src/app/sb/components/toggle/02_switchDisabled.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-switch-disabled",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_switchDisabled.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-switch-disabled',\n  templateUrl: './02_switchDisabled.component.html'\n})\nexport default class SwitchDisabledComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-toggle disabled data-testid=\"toggle-disabled\"></nexus-toggle>"
        },
        {
            "name": "SwitchSizeComponent",
            "id": "component-SwitchSizeComponent-a337bdb17b2ccadf3adf62fe564361672eec57da7b786ac48d77aa5a24bb5d187e4f4b6b6f47a2ddb4635bfdb8c40c3290c8b438a370218d5d9c7b7def23ce9f",
            "file": "src/app/sb/components/toggle/05_switchSize.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-switch-size",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./05_switchSize.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "size",
                    "defaultValue": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { size } from '../../constants';\n\n@Component({\n  selector: 'app-switch-size',\n  templateUrl: './05_switchSize.component.html'\n})\nexport default class SwitchSizeComponent {\n  size = size;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-lg-1\">\n        <p class=\"nexus-h6\">{{size.xs}}</p>\n        <nexus-toggle data-testid=\"toggle-size-xs\" size=\"xs\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-1\">\n        <p class=\"nexus-h6\">{{size.sm}}</p>\n        <nexus-toggle data-testid=\"toggle-size-sm\" size=\"sm\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.md}}</p>\n        <nexus-toggle data-testid=\"toggle-size-md\" size=\"md\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.lg}}</p>\n        <nexus-toggle data-testid=\"toggle-size-lg\" size=\"lg\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">{{size.xl}}</p>\n        <nexus-toggle data-testid=\"toggle-size-xl\" size=\"xl\"></nexus-toggle>\n    </div>\n</div>"
        },
        {
            "name": "TabBarComponent",
            "id": "component-TabBarComponent-85d0ba41afb83fb41f4dc1bff5715f65f2d2a1f46984f8e9dd632502c0d2a4621a4f9746149f09ca3f317a209e14727fecf22c7f7e38dacdf94c20d2935adc42",
            "file": "src/app/components/tab-bar/tab-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-bar",
            "styleUrls": [
                "./tab-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabOption",
                    "defaultValue": "[\n    {\n      title: 'Option 1',\n      value: 'Option 1 selected',\n      isActive: true\n    },\n    {\n      title: 'Option 2',\n      value: 'Option 2 selected',\n      isActive: false\n    },\n    {\n      title: 'Option 3',\n      value: 'Option 3 selected',\n      isActive: false\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ChangeActive",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tab-bar',\n  templateUrl: './tab-bar.component.html',\n  styleUrls: ['./tab-bar.component.scss']\n})\nexport class TabBarComponent {\n  tabOption = [\n    {\n      title: 'Option 1',\n      value: 'Option 1 selected',\n      isActive: true\n    },\n    {\n      title: 'Option 2',\n      value: 'Option 2 selected',\n      isActive: false\n    },\n    {\n      title: 'Option 3',\n      value: 'Option 3 selected',\n      isActive: false\n    }\n  ];\n\n  ChangeActive(index: number) {\n    this.tabOption.forEach((item) => {\n      item.isActive = false;\n    });\n    this.tabOption[index].isActive = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./tab-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-tab-bar>\n  <span >\n    <button (click)=\"ChangeActive(i)\" [ngClass]=\"option.isActive == true ? 'nexus-link nexus-active' : 'nexus-link'\" *ngFor=\"let option of tabOption; let i = index\"><a>{{ option.title }}</a></button>\n  </span>\n</nexus-tab-bar>\n\n<div style=\"margin: 20px\" *ngFor=\"let option of tabOption\">\n  <div *ngIf=\"option.isActive\">{{ option.value }}</div>\n</div>"
        },
        {
            "name": "TabBarComponent",
            "id": "component-TabBarComponent-9581f520ab97a050b838a8305b81054e0e4b9f152dfa7e4bcfd224e53abf9bde78475cbc1fffc2759bb4ff18f4fdbf78b5cbbf29187189cad451b86dce4ed101-1",
            "file": "src/app/sb/components/tab-bar/01_tab-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_tab-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabOption",
                    "defaultValue": "tabOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ChangeActive",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { tabOption } from '../../constants';\n\n@Component({\n  selector: 'app-tab-bar',\n  templateUrl: './01_tab-bar.component.html'\n})\nexport default class TabBarComponent {\n  tabOption = tabOption;\n\n  ChangeActive(index: number) {\n    tabOption.forEach((item) => {\n      item.isActive = false;\n    });\n    tabOption[index].isActive = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TabBarComponent-1",
            "templateData": "<nexus-tab-bar>\n    <span>\n        <button (click)=\"ChangeActive(i)\" [ngClass]=\"option.isActive == true ? 'nexus-link nexus-active' : 'nexus-link'\"\n            *ngFor=\"let option of tabOption; let i = index\"><a>{{ option.title }}</a></button>\n    </span>\n</nexus-tab-bar>\n\n<div style=\"margin: 20px\" *ngFor=\"let option of tabOption\">\n    <div *ngIf=\"option.isActive\">{{ option.value }}</div>\n</div>"
        },
        {
            "name": "TabbedButtonComponent",
            "id": "component-TabbedButtonComponent-f993f5cc6f772ec993cfc395e848a3738632ec079dd42a1ed3e120119ac5c42f9de69fe82fe266640d4c7079fe8f9523089e88c275ef5d9dcc80f3a04284a174",
            "file": "src/app/sb/components/button/07_tabbed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-tabbed",
            "styleUrls": [],
            "styles": [
                "tabbed.successColortabbed.textColortabbed.successColor"
            ],
            "templateUrl": [
                "./07_tabbed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabbedInfo",
                    "defaultValue": "tabbed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { tabbed } from '../../constants';\n\n@Component({\n  selector: 'app-button-tabbed',\n  templateUrl: './07_tabbed.component.html',\n  styles: [\n    `.btn-success {\n      background-color: ${tabbed.successColor};\n      color: ${tabbed.textColor};\n      border: 1px solid ${tabbed.successColor};\n    }`\n  ]\n})\nexport default class TabbedButtonComponent {\n  tabbedInfo = tabbed;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "tabbed.successColortabbed.textColortabbed.successColor\n",
            "templateData": "<div class=\"nexus-row nexus-body\">\n    <div class=\"nexus-col-xs-4\">\n        <div class=\"nexus-center-xs nexus-mt-3\">\n            <button class=\"nexus-btn nexus-btn-medium nexus-btn-primary nexus-overline\">\n                <nexus-icon [src]=\"tabbedInfo.micIconSrc\" size=\"md\"></nexus-icon>\n                {{tabbedInfo.on}}\n            </button>\n            <button class=\"nexus-btn nexus-btn-medium nexus-overline\">\n                <nexus-icon [src]=\"tabbedInfo.micOffIconSrc\" size=\"md\"></nexus-icon>\n                {{tabbedInfo.off}}\n            </button>\n        </div>\n    </div>\n    <div class=\"nexus-col-xs-4\">\n        <div class=\"nexus-center-xs nexus-mt-2\">\n            <button class=\"nexus-btn nexus-btn-medium nexus-overline btn-success\">\n                <nexus-icon [src]=\"tabbedInfo.showIconSrc\" size=\"md\"></nexus-icon>\n                {{tabbedInfo.show}}\n            </button>\n            <button class=\"nexus-btn nexus-btn-medium nexus-btn-warn nexus-overline\">\n                <nexus-icon [src]=\"tabbedInfo.hideIconSrc\" size=\"md\"></nexus-icon>\n                {{tabbedInfo.hide}}\n            </button>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "TableBasicComponent",
            "id": "component-TableBasicComponent-d7a2ff716fb4c5975c07cf0feb2d6f0a28b922ab80c561b9b51de8f7953a2ef46491f7be3b0b6211cf646c4c9dd86ff7350d065fb2e8b7c444dea8dec9518cf1",
            "file": "src/app/sb/components/table/02_tableBasic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-basic",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_tableBasic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tData",
                    "defaultValue": "rowData.map((row) => Object.values(row))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "tHeadSection",
                    "defaultValue": "columnDefs.map((item) => item.label)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { rowData, columnDefs } from '../../constants';\n\n@Component({\n  selector: 'app-table-basic',\n  templateUrl: './02_tableBasic.component.html'\n})\nexport default class TableBasicComponent {\n  tHeadSection = columnDefs.map((item) => item.label);\n\n  tData = rowData.map((row) => Object.values(row));\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<table class=\"nexus-table\">\n    <thead>\n        <tr>\n            <th *ngFor=\"let header of tHeadSection;\">{{header}}</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let row of tData\">\n            <td *ngFor=\"let value of row\">{{value}}</td>\n        </tr>\n    </tbody>\n</table>"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-a8bab5d3ea7d5eb270dd5f9862c87265a1db5e86f67b8e032b5f932f1938b8c8563d8670da5a058be7bedcf578040839a1665c2426b3adf9492ee1c7dd782b0e",
            "file": "src/app/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxHeight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "'5'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSizeLabel",
                    "defaultValue": "'Items Per Page'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pagination",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rowSelection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "sortAscIcon",
                    "defaultValue": "'./assets/icons/navigation/ic_arrow_upward_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sortDefaultIcon",
                    "defaultValue": "'./assets/icons/content/ic_sort_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sortDescIcon",
                    "defaultValue": "'./assets/icons/navigation/ic_arrow_downward_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\n    {\n      field: 'make',\n      label: 'Make',\n      isSortable: true\n    },\n    {\n      field: 'model',\n      label: 'Model',\n      isSortable: true,\n      headerClass: 'cls-col-width',\n      cellClass: 'cls-col-width',\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'year',\n      label: 'Year',\n      isSortable: true,\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'owner',\n      label: 'Car Owneer',\n      isSortable: true,\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'location',\n      label: 'Location',\n      isSortable: true,\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'price',\n      label: 'Sale Price',\n      isSortable: true,\n      cellRenderer: (value) => `<i style=\"color: ${value < 55050 ? 'red' : 'green'}\">\n      ${\n  value < 55050 ? '<nexus-icon size=\"xs\" src=\"./assets/icons/alert/ic_warning_24px.svg\"></nexus-icon>' : ''\n} ${value} </i>`,\n      headerClass: 'text-right',\n      cellClass: 'text-right'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "rowData",
                    "defaultValue": "[\n    {\n      make: 'Subaru',\n      model: 'Outback',\n      year: '2020',\n      price: 35500,\n      owner: 'Iron Man',\n      location: 'PA'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2022',\n      price: 32500,\n      owner: 'Captain America',\n      location: 'LA'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2010',\n      price: 72500,\n      owner: 'Captain Marvel',\n      location: 'PA'\n    },\n    {\n      make: 'Subaru',\n      model: 'Outback',\n      year: '2015',\n      price: 24500,\n      owner: 'Spiderman',\n      location: 'NY'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2021',\n      price: 35050,\n      owner: 'Black Widow',\n      location: 'NY'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2015',\n      price: 90550,\n      owner: 'Hulk',\n      location: 'AK'\n    },\n    {\n      make: 'Subaru',\n      model: 'Outback',\n      year: '2017',\n      price: 29500,\n      owner: 'Wanda',\n      location: 'NJ'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2018',\n      price: 27550,\n      owner: 'Thor',\n      location: 'MD'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2022',\n      price: 105500,\n      owner: 'Loki',\n      location: 'IL'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2010',\n      price: 25550,\n      owner: 'Thanos',\n      location: 'TX'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2012',\n      price: 15500,\n      owner: 'Dr. Strange',\n      location: 'NY'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "selectedRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "rowSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent {\n  @Input() currentPage: number = 1;\n\n  @Input() maxHeight: string = null;\n\n  @Input() pagination: boolean = true;\n\n  @Input() pageSize: string = '5';\n\n  @Input() pageSizeLabel: string = 'Items Per Page';\n\n  @Input() rowSelection: boolean = false;\n\n  @Input() type: string = 'basic';\n\n  @Input() sortAscIcon: string = './assets/icons/navigation/ic_arrow_upward_24px.svg';\n\n  @Input() sortDefaultIcon: string = './assets/icons/content/ic_sort_24px.svg';\n\n  @Input() sortDescIcon: string = './assets/icons/navigation/ic_arrow_downward_24px.svg';\n\n  selectedRows = [];\n\n  columnDefs: any = [\n    {\n      field: 'make',\n      label: 'Make',\n      isSortable: true\n    },\n    {\n      field: 'model',\n      label: 'Model',\n      isSortable: true,\n      headerClass: 'cls-col-width',\n      cellClass: 'cls-col-width',\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'year',\n      label: 'Year',\n      isSortable: true,\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'owner',\n      label: 'Car Owneer',\n      isSortable: true,\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'location',\n      label: 'Location',\n      isSortable: true,\n      sortAscending: (firstValue, secondValue, sortField) => firstValue[sortField] > secondValue[sortField] ? 1 : -1\n    },\n    {\n      field: 'price',\n      label: 'Sale Price',\n      isSortable: true,\n      cellRenderer: (value) => `<i style=\"color: ${value < 55050 ? 'red' : 'green'}\">\n      ${\n  value < 55050 ? '<nexus-icon size=\"xs\" src=\"./assets/icons/alert/ic_warning_24px.svg\"></nexus-icon>' : ''\n} ${value} </i>`,\n      headerClass: 'text-right',\n      cellClass: 'text-right'\n    }\n  ];\n\n  rowData: any = [\n    {\n      make: 'Subaru',\n      model: 'Outback',\n      year: '2020',\n      price: 35500,\n      owner: 'Iron Man',\n      location: 'PA'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2022',\n      price: 32500,\n      owner: 'Captain America',\n      location: 'LA'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2010',\n      price: 72500,\n      owner: 'Captain Marvel',\n      location: 'PA'\n    },\n    {\n      make: 'Subaru',\n      model: 'Outback',\n      year: '2015',\n      price: 24500,\n      owner: 'Spiderman',\n      location: 'NY'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2021',\n      price: 35050,\n      owner: 'Black Widow',\n      location: 'NY'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2015',\n      price: 90550,\n      owner: 'Hulk',\n      location: 'AK'\n    },\n    {\n      make: 'Subaru',\n      model: 'Outback',\n      year: '2017',\n      price: 29500,\n      owner: 'Wanda',\n      location: 'NJ'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2018',\n      price: 27550,\n      owner: 'Thor',\n      location: 'MD'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2022',\n      price: 105500,\n      owner: 'Loki',\n      location: 'IL'\n    },\n    {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: '2010',\n      price: 25550,\n      owner: 'Thanos',\n      location: 'TX'\n    },\n    {\n      make: 'Nissan',\n      model: 'Altima',\n      year: '2012',\n      price: 15500,\n      owner: 'Dr. Strange',\n      location: 'NY'\n    }\n  ];\n\n  rowSelectHandler(event) {\n    this.selectedRows = event?.detail;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n\n.cls-col-width {\n  width: 20%;\n  text-align: center;\n  font-style: italic;\n  color: #9C27B0;\n  font-weight: bold;\n}\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-table\n  [rows]=\"rowData\"\n  [columns]=\"columnDefs\"\n  [pagination]=\"pagination\"\n  [pageSize]=\"pageSize\"\n  [rowSelection]=\"rowSelection\"\n  (rowSelect)=\"rowSelectHandler($event)\"\n  [pageSizeLabel]=\"pageSizeLabel\"\n  [currentPage]=\"currentPage\"\n  [sortAscIcon]=\"sortAscIcon\"\n  [sortDefaultIcon]=\"sortDefaultIcon\"\n  [sortDescIcon]=\"sortDescIcon\"\n>\n</nexus-table>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-a8d1fbb81052baae8a69b4fb7fc26c1fd8f3d0ce4083b2b2b2f824f803f6d85b1ab2e855330870b66af874a097e7458c7df74dd81d86204bfc61239cace9c7fa-1",
            "file": "src/app/sb/components/table/01_table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxHeight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "'5'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageSizeLabel",
                    "defaultValue": "'Items Per Page'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pagination",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rowSelection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "sortAscIcon",
                    "defaultValue": "'./assets/icons/navigation/ic_arrow_upward_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sortDefaultIcon",
                    "defaultValue": "'./assets/icons/content/ic_sort_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sortDescIcon",
                    "defaultValue": "'./assets/icons/navigation/ic_arrow_downward_24px.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "columnDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "rowData",
                    "defaultValue": "rowData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "selectedRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "rowSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { rowData, columnDefs } from '../../constants';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './01_table.component.html'\n})\nexport default class TableComponent {\n  @Input() currentPage: number = 1;\n\n  @Input() maxHeight: string = null;\n\n  @Input() pagination: boolean = true;\n\n  @Input() pageSize: string = '5';\n\n  @Input() pageSizeLabel: string = 'Items Per Page';\n\n  @Input() rowSelection: boolean = false;\n\n  @Input() type: string = 'basic';\n\n  @Input() sortAscIcon: string = './assets/icons/navigation/ic_arrow_upward_24px.svg';\n\n  @Input() sortDefaultIcon: string = './assets/icons/content/ic_sort_24px.svg';\n\n  @Input() sortDescIcon: string = './assets/icons/navigation/ic_arrow_downward_24px.svg';\n\n  selectedRows = [];\n\n  products = [];\n\n  columnDefs = columnDefs;\n\n  rowData = rowData;\n\n  rowSelectHandler(event) {\n    this.selectedRows = event?.detail;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TableComponent-1",
            "templateData": "<nexus-table\n  [rows]=\"rowData\"\n  [columns]=\"columnDefs\"\n  [pagination]=\"pagination\"\n  [pageSize]=\"pageSize\"\n  [rowSelection]=\"rowSelection\"\n  (rowSelect)=\"rowSelectHandler($event)\"\n  [pageSizeLabel]=\"pageSizeLabel\"\n  [currentPage]=\"currentPage\"\n  [sortAscIcon]=\"sortAscIcon\"\n  [sortDefaultIcon]=\"sortDefaultIcon\"\n  [sortDescIcon]=\"sortDescIcon\"\n>\n</nexus-table>"
        },
        {
            "name": "TableExamplesComponent",
            "id": "component-TableExamplesComponent-a88671d00c6f69d27c39b5f0497f70a322b4109274d26ae99919fca7a05da78b4e991fddaef914917f43e5421a1e1be028bbae63f7d1c703aafc2c01eee0a7ac",
            "file": "src/app/components/table-examples/table-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-examples",
            "styleUrls": [
                "./table-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 159
                },
                {
                    "name": "columnDefs",
                    "defaultValue": "[\n    {\n      field: 'make',\n      label: 'Make',\n      isSortable: true\n    },\n    {\n      field: 'model',\n      label: 'Automobile Model',\n      isSortable: true\n    },\n    {\n      field: 'year',\n      label: 'Manufactured Year',\n      isSortable: true\n    },\n    {\n      field: 'owner',\n      label: 'Automobile Owner',\n      isSortable: true\n    },\n    {\n      field: 'location',\n      label: 'Automobile Location',\n      isSortable: true\n    },\n    {\n      field: 'price',\n      label: 'Sale Price',\n      isSortable: false,\n      cellRenderer: (value) => `<i style=\"color: ${value < 35100 ? 'red' : 'green'}\">\n      ${\n  value < 35100 ? '<nexus-icon size=\"xs\" src=\"./assets/icons/alert/ic_warning_24px.svg\"></nexus-icon>' : ''\n} ${value} </i>`,\n      headerClass: 'text-right',\n      cellClass: 'text-right'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "columnList",
                    "defaultValue": "Object.keys(this.rowData[0])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "customCurrent",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "displayedCustomRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "displayedRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isExpandedCustomRow",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isExpandedRow",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "maxPagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "Object",
                    "defaultValue": "Object",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "pageSize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "rowData",
                    "defaultValue": "[\n    {\n      make: 'Toyota',\n      model: 'Celica',\n      year: '2020',\n      owner: 'Iron Man',\n      location: 'PA',\n      price: 35910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2022',\n      owner: 'Captain America',\n      location: 'LA',\n      price: 32910\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2010',\n      owner: 'Captain Marvel',\n      location: 'PA',\n      price: 72910\n    },\n    {\n      make: 'Toyota',\n      model: 'Celica',\n      year: '2015',\n      owner: 'Spiderman',\n      location: 'NY',\n      price: 24910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2021',\n      owner: 'Black Widow',\n      location: 'NY',\n      price: 39100\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2015',\n      owner: 'Hulk',\n      location: 'AK',\n      price: 99500\n    },\n    {\n      make: 'Toyota',\n      model: 'Celica',\n      year: '2017',\n      owner: 'Wanda',\n      location: 'NJ',\n      price: 29910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2018',\n      owner: 'Thor',\n      location: 'MD',\n      price: 27500\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2022',\n      owner: 'Loki',\n      location: 'IL',\n      price: 105910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2010',\n      owner: 'Thanos',\n      location: 'TX',\n      price: 25900\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2012',\n      owner: 'Dr. Strange',\n      location: 'NY',\n      price: 15910\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "selectedRows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeEvent",
                    "args": [
                        {
                            "name": "_eventData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_eventData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleCustomChangeEvent",
                    "args": [
                        {
                            "name": "_event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePaginationChange",
                    "args": [
                        {
                            "name": "_event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "rowSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setExpandedCustomRowFlag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setExpandedRowFlag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-examples',\n  templateUrl: './table-examples.component.html',\n  styleUrls: ['./table-examples.component.scss']\n})\nexport class TableExamplesComponent implements OnInit {\n  Object = Object;\n\n  selectedRows = [];\n\n  displayedRows = [];\n\n  displayedCustomRows = [];\n\n  pageSize = 5;\n\n  customCurrent = 1;\n\n  maxPagination;\n\n  isExpandedRow = [];\n\n  isExpandedCustomRow = [];\n\n  columnDefs: any = [\n    {\n      field: 'make',\n      label: 'Make',\n      isSortable: true\n    },\n    {\n      field: 'model',\n      label: 'Automobile Model',\n      isSortable: true\n    },\n    {\n      field: 'year',\n      label: 'Manufactured Year',\n      isSortable: true\n    },\n    {\n      field: 'owner',\n      label: 'Automobile Owner',\n      isSortable: true\n    },\n    {\n      field: 'location',\n      label: 'Automobile Location',\n      isSortable: true\n    },\n    {\n      field: 'price',\n      label: 'Sale Price',\n      isSortable: false,\n      cellRenderer: (value) => `<i style=\"color: ${value < 35100 ? 'red' : 'green'}\">\n      ${\n  value < 35100 ? '<nexus-icon size=\"xs\" src=\"./assets/icons/alert/ic_warning_24px.svg\"></nexus-icon>' : ''\n} ${value} </i>`,\n      headerClass: 'text-right',\n      cellClass: 'text-right'\n    }\n  ];\n\n  rowData: any = [\n    {\n      make: 'Toyota',\n      model: 'Celica',\n      year: '2020',\n      owner: 'Iron Man',\n      location: 'PA',\n      price: 35910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2022',\n      owner: 'Captain America',\n      location: 'LA',\n      price: 32910\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2010',\n      owner: 'Captain Marvel',\n      location: 'PA',\n      price: 72910\n    },\n    {\n      make: 'Toyota',\n      model: 'Celica',\n      year: '2015',\n      owner: 'Spiderman',\n      location: 'NY',\n      price: 24910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2021',\n      owner: 'Black Widow',\n      location: 'NY',\n      price: 39100\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2015',\n      owner: 'Hulk',\n      location: 'AK',\n      price: 99500\n    },\n    {\n      make: 'Toyota',\n      model: 'Celica',\n      year: '2017',\n      owner: 'Wanda',\n      location: 'NJ',\n      price: 29910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2018',\n      owner: 'Thor',\n      location: 'MD',\n      price: 27500\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2022',\n      owner: 'Loki',\n      location: 'IL',\n      price: 105910\n    },\n    {\n      make: 'Dodge',\n      model: 'Charger',\n      year: '2010',\n      owner: 'Thanos',\n      location: 'TX',\n      price: 25900\n    },\n    {\n      make: 'BMW',\n      model: '320',\n      year: '2012',\n      owner: 'Dr. Strange',\n      location: 'NY',\n      price: 15910\n    }\n  ];\n\n  columnList = Object.keys(this.rowData[0]);\n\n  columnData = [];\n\n  ngOnInit(): void {\n    this.maxPagination = Math.ceil(this.rowData.length / this.pageSize);\n    this.displayedRows = this.rowData.slice(0, this.pageSize);\n    this.displayedCustomRows = this.rowData.slice(0, this.pageSize);\n    this.setExpandedRowFlag();\n    this.setExpandedCustomRowFlag();\n    const tempData = JSON.parse(JSON.stringify(this.columnDefs));\n    for (const col of tempData) {\n      const temp = col;\n      temp.isSortable = false;\n      this.columnData.push(temp);\n    }\n  }\n\n  setExpandedCustomRowFlag() {\n    this.isExpandedCustomRow = [];\n    for (const _row of this.displayedCustomRows) {\n      this.isExpandedCustomRow.push(false);\n    }\n  }\n\n  setExpandedRowFlag() {\n    this.isExpandedRow = [];\n    for (const _row of this.displayedRows) {\n      this.isExpandedRow.push(false);\n    }\n  }\n\n  rowSelectHandler(event) {\n    this.selectedRows = event?.detail;\n  }\n\n  handleChangeEvent(_eventData) {}\n\n  handlePaginationChange(_event) {\n    this.displayedRows = [];\n    this.customCurrent = _event.detail;\n    const offset = this.customCurrent * this.pageSize;\n    const from = offset - this.pageSize;\n    const end = offset;\n    this.displayedRows = this.rowData.slice(from, end);\n    this.setExpandedRowFlag();\n  }\n\n  handleCustomChangeEvent(_event) {\n    this.displayedCustomRows = [];\n    const offset = _event.detail.currentPage * _event.detail.pageSize;\n    const from = offset - _event.detail.pageSize;\n    const end = offset;\n    this.displayedCustomRows = this.rowData.slice(from, end);\n    this.setExpandedCustomRowFlag();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n\n.tr-expandable nexus-icon {\n  width: 20px;\n  height: 20px;\n  position: relative;\n  top: 5px;\n}\n",
                    "styleUrl": "./table-examples.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p id=\"mydesc\">Sample Table using Nexus-table class</p>\n<table class=\"nexus-table\" aria-describedby=\"mydesc\">\n  <thead>\n    <tr>\n      <th id=\"col1\">Column Header <nexus-icon src=\"./assets/icons/content/ic_sort_24px.svg\"></nexus-icon></th>\n      <th id=\"col2\">Column Header</th>\n      <th id=\"col3\">Column Header</th>\n      <th id=\"col4\">Column Header</th>\n      <th id=\"col5\">Column Header</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr>\n      <td>Row Name</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n    </tr>\n    <tr>\n      <td>Row Name</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n    </tr>\n    <tr>\n      <td>Row Name</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n      <td>000.000.00</td>\n    </tr>\n  </tbody>\n</table>\n\n<br />\n<br />\n<br />\n\n<p id=\"mydesc\">Nexus Table (without Pagination & Row Select)</p>\n\n<nexus-table [rows]=\"rowData\" [columns]=\"columnDefs\"></nexus-table>\n\n<br />\n<br />\n<br />\n\n<p id=\"mydesc\">Nexus Table (with max-height)</p>\n\n<nexus-table [rows]=\"rowData\" [columns]=\"columnDefs\" [pagination]=\"true\" [pageSize]=\"5\" [maxHeight]=\"200\"> </nexus-table>\n\n<br />\n<br />\n<br />\n\n<p id=\"mydesc\">Nexus Table (with Pagination)</p>\n\n<nexus-table [rows]=\"rowData\" [columns]=\"columnDefs\" [pagination]=\"true\" [pageSize]=\"5\" (tableChangeEvent)=\"handleChangeEvent($event)\"> </nexus-table>\n\n<br />\n<br />\n<br />\n\n<p id=\"mydesc\">Nexus Table (with Pagination & Row Select)</p>\n\n<nexus-table\n  [rows]=\"rowData\"\n  [columns]=\"columnDefs\"\n  [pagination]=\"true\"\n  [pageSize]=\"5\"\n  [rowSelection]=\"true\"\n  (rowSelect)=\"rowSelectHandler($event)\"\n  [pageSizeLabel]=\"'Items Per Page:'\"\n  [pageSizeOpt]=\"[5, 10, 25]\"\n>\n</nexus-table>\n\n<br />\n<br />\n<br />\n\n<p>Number of Selected Rows {{ selectedRows?.length }}</p>\n<br />\n<br />\n<br />\n\n<p id=\"mydesccustom\">CustomNexus Table (Custom Header, Body and Footer)</p>\n<p id=\"mydesccustom\">type=\"custom\" will have slots for thead, tbody and tfoot where developer can pass custom templates and logic.</p>\n\n\n<nexus-table\n  [pagination]=\"false\"\n  type=\"custom\"\n>\n  <tr slot=\"thead\">\n    <th *ngFor=\"let colum of columnDefs\">{{colum.label}}</th>\n  </tr>\n  <tbody slot=\"tbody\" *ngIf=\"displayedRows.length\">\n    <section *ngFor=\"let rows of displayedRows; let i=index\">\n      <tr class=\"tr-expandable\" (click)=\"isExpandedRow[i] = !isExpandedRow[i]\" >\n        <td *ngFor=\"let key of columnList; let j = index\">\n          <nexus-icon *ngIf=\"j===0 && !isExpandedRow[i]\" src=\"./assets/icons/content/ic_add_24px.svg\"></nexus-icon>\n          <nexus-icon *ngIf=\"j===0 && isExpandedRow[i]\" src=\"./assets/icons/content/ic_remove_24px.svg\"></nexus-icon>\n          {{rows[key]}}</td>\n      </tr>\n      <tr *ngIf=\"isExpandedRow[i]\">\n        <td *ngFor=\"let key of columnList\">{{rows[key]}}</td>\n      </tr>\n    </section>\n  </tbody>\n\n    <nexus-pagination class=\"nexus-mt-2 nexus-mb-2 nexus-ml-2\" [current]=\"customCurrent\" [max]=\"maxPagination\" (changeEvent)=\"handlePaginationChange($event)\" slot=\"tfoot\"></nexus-pagination>\n</nexus-table>\n<br />\n<br />\n<br />\n\n<p id=\"mydesc\">Custom Nexus Table (with default Header and Pagination and custom Body).</p>\n<p>For default Pagination to work with custom Body content please pass totalItems prop.</p>\n\n\n<nexus-table\n  type=\"custom\"\n  [columns]=\"columnData\"\n  [pagination]=\"true\"\n  [pageSize]=\"5\"\n  [totalItems]=\"rowData.length\"\n  (tableChangeEvent)=\"handleCustomChangeEvent($event)\"\n>\n  <tbody slot=\"tbody\" *ngIf=\"displayedCustomRows.length\">\n    <section *ngFor=\"let rows of displayedCustomRows; let i=index\">\n      <tr class=\"tr-expandable\" (click)=\"isExpandedCustomRow[i] = !isExpandedCustomRow[i]\" >\n        <td *ngFor=\"let key of columnList; let j = index\">\n          <nexus-icon *ngIf=\"j===0 && !isExpandedCustomRow[i]\" src=\"./assets/icons/hardware/ic_keyboard_arrow_down_24px.svg\"></nexus-icon>\n          <nexus-icon *ngIf=\"j===0 && isExpandedCustomRow[i]\" src=\"./assets/icons/hardware/ic_keyboard_arrow_up_24px.svg\"></nexus-icon>\n          {{rows[key]}}</td>\n      </tr>\n      <tr *ngIf=\"isExpandedCustomRow[i]\">\n        <td *ngFor=\"let key of columnList\">{{rows[key]}}</td>\n      </tr>\n    </section>\n  </tbody>\n</nexus-table>\n<br />\n<br />\n<br />\n<br />"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-bf90573661d5769c35ee5913be991a2fc7e420a72dd62aaaff3e36b2268f6a5a818cbe715d28ac864bf74b6454e3696ac5ceb222a9ad443226b6a725b7777be4",
            "file": "src/app/components/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss']\n})\nexport class TextareaComponent {\n  @Input() attrId: string = '';\n\n  @Input() disabled: boolean = false;\n\n  @Input() maxLength: number;\n\n  @Input() minLength: number;\n\n  @Input() cols: number = 100;\n\n  @Input() rows: number = 3;\n\n  @Input() placeholder: string = '';\n\n  @Input() required: boolean = false;\n\n  @Input() value: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-form-field>\n  <nexus-label data-testid=\"textarea-header\">Bio...</nexus-label>\n  <nexus-textarea\n    data-testid=\"textarea-content\"\n    [attrId]=\"attrId\"\n    [disabled]=\"disabled\"\n    [maxLength]=\"maxLength\"\n    [minLength]=\"minLength\"\n    [cols]=\"cols\"\n    [rows]=\"rows\"\n    [placeholder]=\"placeholder\"\n    [required]=\"required\"\n    [value]=\"value\"\n  ></nexus-textarea>\n</nexus-form-field>\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-00334f920eb2d37fdcfe7746a4134d100da8eb4b21175ba891f683ab7e0153f50f826695a0ea32036b10268892a20edcae385745c688ecbbc76c92609adecaec-1",
            "file": "src/app/sb/components/textarea/01_textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "textarea",
                    "defaultValue": "textarea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { textarea } from '../../constants';\n\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './01_textarea.component.html'\n})\nexport default class TextareaComponent {\n  @Input() attrId: string = '';\n\n  @Input() disabled: boolean = false;\n\n  @Input() maxLength: number;\n\n  @Input() minLength: number;\n\n  @Input() cols: number = 100;\n\n  @Input() rows: number = 3;\n\n  @Input() placeholder: string = '';\n\n  @Input() required: boolean = false;\n\n  @Input() value: string = '';\n\n  textarea = textarea;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TextareaComponent-1",
            "templateData": "<nexus-form-field>\n  <nexus-label data-testid=\"textarea-header\">{{textarea.text}}</nexus-label>\n  <nexus-textarea data-testid=\"textarea-content\" [attrId]=\"attrId\" [disabled]=\"disabled\" [maxLength]=\"maxLength\"\n    [minLength]=\"minLength\" [cols]=\"cols\" [rows]=\"rows\" [placeholder]=\"placeholder\" [required]=\"required\"\n    [value]=\"value\"></nexus-textarea>\n</nexus-form-field>"
        },
        {
            "name": "ToastAutoCloseComponent",
            "id": "component-ToastAutoCloseComponent-0a4859e172d06100a9c9945d399a24bd4cfd51bae0ebe4b59264bc49da1b629d1d42d6d42a40a700f697243b9654f47c894a7c6bb84a2b14e495b556bfb4f315",
            "file": "src/app/sb/components/toast/03_autoClose.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-auto-close",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_autoClose.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "interval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "timeLeft",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "restartTimer",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "startTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n// eslint-disable-next-line no-restricted-imports\nimport { startWith, Subject, switchMap, timer } from 'rxjs';\n\n@Component({\n  selector: 'app-toast-auto-close',\n  templateUrl: './03_autoClose.component.html'\n})\nexport default class ToastAutoCloseComponent {\n  timeLeft: number = 20;\n\n  interval;\n\n  constructor() {\n    this.startTimer();\n  }\n\n  restartTimer(event) {\n    this.timeLeft = 20;\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft -= 1;\n      }\n    }, 1000);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <div *ngIf=\"timeLeft <= 1; else elseBlock\">\n        <button class=\"nexus-mt-1 nexus-btn nexus-btn-primary\" (click)=\"restartTimer($event)\">Reset</button>\n      </div>\n      <ng-template #elseBlock>\n        <nexus-toast\n        data-testid='toast-with-auto-close'\n        show\n        [autoClose]=\"timeLeft * 1000\"\n        variant=\"info\">The toast will diappear after {{timeLeft}}s.</nexus-toast>\n      </ng-template>\n</div>"
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-76d3535eb2b381320324e82aeb26c50498f0ecce4a9409c4c265ac692686669708e8e6ca889470a65c331b9a3b081344f8bae31ce25d065d4a963168d6a84040",
            "file": "src/app/components/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast",
            "styleUrls": [
                "./toast.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "closeable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent {\n  @Input() autoClose: number;\n\n  @Input() closeable: boolean = false;\n\n  @Input() show: boolean = true;\n\n  @Input() variant: string = 'info';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./toast.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Toast Default</p>\n<div class=\"nexus-rhythm-2\">\n  <nexus-toast\n    [autoClose]=\"autoClose\"\n    [closeable]=\"closeable\"\n    [show]=\"show\"\n    [variant]=\"variant\"\n    data-testid=\"information-toast-message\"\n    >Default message.</nexus-toast\n  >\n</div>\n\n<p class=\"nexus-h5\">Toast Variants</p>\n\n<div class=\"nexus-rhythm-2\">\n  <nexus-toast data-testid=\"information-toast-message\">Information message.</nexus-toast>\n</div>\n\n<div class=\"nexus-rhythm-2\">\n  <nexus-toast data-testid=\"success-toast-message\" class=\"nexus-rhythm-2\" variant=\"success\"\n    >Success message.</nexus-toast\n  >\n</div>\n\n<div class=\"nexus-rhythm-2\">\n  <nexus-toast data-testid=\"warning-toast-message\" class=\"nexus-rhythm-2\" variant=\"warning\"\n    >Warning message.</nexus-toast\n  >\n</div>\n\n<div class=\"nexus-rhythm-2\">\n  <nexus-toast data-testid=\"error-toast-message\" class=\"nexus-rhythm-2\" variant=\"error\">Error message.</nexus-toast>\n</div>\n"
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-aac64c25dbe29f7183b2addab24db88629301677e54956b9f3d97057f56e6d56ef38666ed36729e8c5ba41a8db0ceda04deb4d1c6c6747e4f2fff1f634a813f9-1",
            "file": "src/app/sb/components/toast/01_toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "closeable",
                    "defaultValue": "defaultToast.closeable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconSrc",
                    "defaultValue": "defaultToast.iconSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "defaultToast.position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "defaultToast.show",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "defaultToast.variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "message",
                    "defaultValue": "defaultToast.message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { defaultToast } from '../../constants';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './01_toast.component.html'\n})\nexport default class ToastComponent {\n  @Input() autoClose: number;\n\n  @Input() closeable: boolean = defaultToast.closeable;\n\n  @Input() show: boolean = defaultToast.show;\n\n  @Input() variant: string = defaultToast.variant;\n\n  @Input() iconSrc: string = defaultToast.iconSrc;\n\n  @Input() position: string = defaultToast.position;\n\n  message = defaultToast.message;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ToastComponent-1",
            "templateData": "  <nexus-toast\n    [iconSrc]=\"iconSrc\"\n    [position]=\"position\"\n    [autoClose]=\"autoClose\"\n    [closeable]=\"closeable\"\n    [show]=\"show\"\n    [variant]=\"variant\"\n    data-testid=\"information-toast-message\">{{message}}</nexus-toast>"
        },
        {
            "name": "ToastExamplesComponent",
            "id": "component-ToastExamplesComponent-fb909b7f3063af6c25bf2cf13091254ba770a698b915c8e305238223e1a677f89b07ee24a2e9bb05c7d619ea6ce0cb0ef6209f64de9c2c4001f1084122b8edf6",
            "file": "src/app/components/toast-examples/toast-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-examples",
            "styleUrls": [
                "./toast-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toast-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toast-examples',\n  templateUrl: './toast-examples.component.html',\n  styleUrls: ['./toast-examples.component.scss']\n})\nexport class ToastExamplesComponent {\n  show: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./toast-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Dynamic Toast</p>\n\n<button data-testid=\"btn-trigger-toast\" class=\"nexus-btn-primary nexus-btn-large nexus-rhythm-4\" (click)=\"show = true\">Trigger toast</button>\n<nexus-toast data-testid=\"btn-trigger-toast-info\" *ngIf=\"show\" closeable=\"true\" (closeEvent)=\"show = false\">Information message.</nexus-toast>\n\n\n<div class=\"nexus-rhythm-2\">\n    <nexus-toast data-testid=\"disappear-toast\" class=\"nexus-rhythm-2\" variant=\"custom\" icon-src=\"./assets/icons/action/ic_3d_rotation_24px.svg\"\n        auto-close=5000>Test\n        This message will disappear in 5 sec.</nexus-toast>\n</div>\n\n<div class=\"nexus-rhythm-2\">\n    <nexus-toast data-testid=\"float-bottom-toast\" class=\"nexus-rhythm-2\" variant=\"info\" position=\"bottom\">Float at the bottom of the page.</nexus-toast>\n</div>\n\n<div class=\"nexus-rhythm-2\">\n    <nexus-toast data-testid=\"float-top-toast\" class=\"nexus-rhythm-2\" variant=\"info\" position=\"top\">Float at the top of the page.</nexus-toast>\n</div>"
        },
        {
            "name": "ToastVariantComponent",
            "id": "component-ToastVariantComponent-d2853c4179a232681309c18d57e563ad3b90855e98ce6c8bd8fea05830d677bea8d0681a3faca684549d180eb4c6aa5fd04411fa74363e848268de856029da24",
            "file": "src/app/sb/components/toast/02_variants.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast-variants",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_variants.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "toastVariants",
                    "defaultValue": "toastVariants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { toastVariants } from '../../constants';\n\n@Component({\n  selector: 'app-toast-variants',\n  templateUrl: './02_variants.component.html'\n})\nexport default class ToastVariantComponent {\n  toastVariants = toastVariants;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-row\">\n    <div class=\"nexus-col-xs-4 nexus-mt-2 neuxs-mb-1\">\n        <nexus-toast data-testid=\"toast-info\" [show]=\"toastVariants.show\" [closeable]=\"toastVariants.closeable\"\n            variant=\"info\">{{toastVariants.info}}</nexus-toast>\n    </div>\n    <div class=\"nexus-col-xs-4 nexus-mt-2 neuxs-mb-1\">\n        <nexus-toast data-testid=\"toast-error\" [show]=\"toastVariants.show\" [closeable]=\"toastVariants.closeable\"\n            variant=\"error\">{{toastVariants.error}}</nexus-toast>\n    </div>\n    <div class=\"nexus-col-xs-4 nexus-mt-2 neuxs-mb-1\">\n        <nexus-toast data-testid=\"toast-success\" [show]=\"toastVariants.show\" [closeable]=\"toastVariants.closeable\"\n            variant=\"success\">{{toastVariants.success}}</nexus-toast>\n    </div>\n    <div class=\"nexus-col-xs-4 nexus-mt-2 neuxs-mb-1\">\n        <nexus-toast data-testid=\"toast-warning\" [show]=\"toastVariants.show\" [closeable]=\"toastVariants.closeable\"\n            variant=\"warning\">{{toastVariants.warning}}</nexus-toast>\n    </div>\n    <div class=\"nexus-col-xs-4 nexus-mt-2 neuxs-mb-2\">\n        <nexus-toast data-testid=\"toast-custom\" [show]=\"toastVariants.show\" [closeable]=\"toastVariants.closeable\"\n            [iconSrc]=\"toastVariants.iconSrc\" variant=\"custom\">{{toastVariants.custom}}</nexus-toast>\n    </div>\n</div>"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-d09e58652d83b2ee34b4ef4a8a4f3707833ea9b1340711533602385c719ea556ea9daef4ba85d4846f07133d00ad396411610661f7797c0042471e0944d40878",
            "file": "src/app/components/toggle/toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle",
            "styleUrls": [
                "./toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelActive",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelInactive",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent {\n  @Input() size: string = 'md';\n\n  @Input() disabled: boolean = false;\n\n  @Input() labelActive: string = '';\n\n  @Input() labelInactive: string = '';\n\n  @Input() toggled: boolean = false;\n\n  @Input() required: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./toggle.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-toggle [size]=\"size\" [disabled]=\"disabled\" [labelActive]=\"labelActive\" [labelInactive]=\"labelInactive\"\n  [toggled]=\"toggled\" [required]=\"required\">\n</nexus-toggle>\n"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-e516d3a74db9a5706a7ccab4f14ecad63c18e2f58848e3272fe54301307bf0be7f785cb443d8a6c0365edbd856368130b4a086b1f3ce7fdde3976008b3b9a32c-1",
            "file": "src/app/sb/components/toggle/01_toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelActive",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelInactive",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'switch'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle',\n  templateUrl: './01_toggle.component.html'\n\n})\nexport default class ToggleComponent {\n  @Input() size: string = 'md';\n\n  @Input() disabled: boolean = false;\n\n  @Input() labelActive: string = '';\n\n  @Input() labelInactive: string = '';\n\n  @Input() toggled: boolean = false;\n\n  @Input() required: boolean = false;\n\n  @Input() type: string = 'switch';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ToggleComponent-1",
            "templateData": "<nexus-toggle [size]=\"size\" [disabled]=\"disabled\" [labelActive]=\"labelActive\" [labelInactive]=\"labelInactive\"\n    [toggled]=\"toggled\" [type]=\"type\" [required]=\"required\">\n</nexus-toggle>"
        },
        {
            "name": "ToggleExamplesComponent",
            "id": "component-ToggleExamplesComponent-51be60a426d4fb290423a03d5e5dbfc4f7504583ed6893ce0c0c1eb53b95d472cd3b5e9348a18eaecb1eb35c4223b9878fc7301b6ec162f59253fb8f222200fc",
            "file": "src/app/components/toggle-examples/toggle-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle-examples",
            "styleUrls": [
                "./toggle-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-examples',\n  templateUrl: './toggle-examples.component.html',\n  styleUrls: ['./toggle-examples.component.scss']\n})\nexport class ToggleExamplesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./toggle-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Disabled</p>\n<nexus-toggle disabled data-testid=\"toggle-disabled\"></nexus-toggle>\n\n<p class=\"nexus-h5\">Add Labels</p>\n<nexus-toggle data-testid=\"toggle-labels\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>\n\n<p class=\"nexus-h5\">Toggle Types:</p>\n\n<p class=\"nexus-h6\">Default</p>\n<nexus-toggle data-testid=\"toggle-default\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>\n\n<p class=\"nexus-h5\">Button</p>\n<nexus-toggle data-testid=\"toggle-button\" type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>\n\n<p class=\"nexus-h5\">Toggle switch size variants.</p>\n<div class=\"nexus-row\">\n    <div class=\"nexus-col-lg-1\">\n        <p class=\"nexus-h6\">xs</p>\n        <nexus-toggle data-testid=\"toggle-size-xs\" size=\"xs\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-1\">\n        <p class=\"nexus-h6\">sm</p>\n        <nexus-toggle data-testid=\"toggle-size-sm\" size=\"sm\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">md</p>\n        <nexus-toggle data-testid=\"toggle-size-md\" size=\"md\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">lg</p>\n        <nexus-toggle data-testid=\"toggle-size-lg\" size=\"lg\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">xl</p>\n        <nexus-toggle data-testid=\"toggle-size-xl\" size=\"xl\"></nexus-toggle>\n    </div>\n</div>\n\n<p class=\"nexus-h5\">Toggle Button size variants.</p>\n<div class=\"nexus-row\">\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">xs</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"xs\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">sm</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">md</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"md\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">lg</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"lg\"></nexus-toggle>\n    </div>\n    <div class=\"nexus-col-lg-2\">\n        <p class=\"nexus-h6\">xl</p>\n        <nexus-toggle type=\"button\" label-inactive=\"hide\" label-active=\"show\" size=\"xl\"></nexus-toggle>\n    </div>\n</div>\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-7998e8968d2b1b9fd9789a65e48fba30391340872eadab0b50964f95f5248b74a1d6559c39168804af256ece93922a80e7baaa00230d8a1a18835ac1b63d6b6b",
            "file": "src/app/components/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowClick",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placement",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipComponent {\n  @Input() placement: string = 'right';\n\n  @Input() allowClick: boolean = true;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-tooltip [placement]=\"placement\" [allowClick]=\"allowClick\">\n  <nexus-tooltip-trigger>\n    <nexus-icon src=\"./assets/icons/action/ic_help_outline_24px.svg\"></nexus-icon>\n    <span class=\"nexus-visually-hidden\">Help</span>\n  </nexus-tooltip-trigger>\n\n  <nexus-tooltip-content>Tooltip Content</nexus-tooltip-content>\n</nexus-tooltip>\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-f22835151a957fafbd675dad720e72a455cdadf40852d971b151f4b243effb3786b4ef4386c04a54ec908b0911f3564151c3686c7133eff0ba430cfac6151a42-1",
            "file": "src/app/sb/components/tooltip/01_tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowClick",
                    "defaultValue": "DefaultToolTip.allowClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placement",
                    "defaultValue": "DefaultToolTip.placement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "DefaultToolTip",
                    "defaultValue": "DefaultToolTip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DefaultToolTip } from '../../constants';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './01_tooltip.component.html'\n})\nexport default class TooltipComponent {\n  @Input() placement: string = DefaultToolTip.placement;\n\n  @Input() allowClick: boolean = DefaultToolTip.allowClick;\n\n  DefaultToolTip = DefaultToolTip;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TooltipComponent-1",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n  <nexus-tooltip [placement]=\"placement\" [allowClick]=\"allowClick\">\n    <nexus-tooltip-trigger>\n      Get Help\n      <nexus-icon [src]=\"DefaultToolTip.helpIconSrc\"></nexus-icon>\n      <span class=\"nexus-visually-hidden\">{{DefaultToolTip.tooltipTrigger}}</span>\n    </nexus-tooltip-trigger>\n\n    <nexus-tooltip-content>{{DefaultToolTip.tooltipContent}}</nexus-tooltip-content>\n  </nexus-tooltip>\n</div>"
        },
        {
            "name": "TooltipExamplesComponent",
            "id": "component-TooltipExamplesComponent-bb21d0f8695a4eba555da77f78d257316e5e3264d3035a207acd0397172b6d816f47937f2e71062b17df184e62845729e254d3f2f11d070d14e1b82a4b654e60",
            "file": "src/app/components/tooltip-examples/tooltip-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip-examples",
            "styleUrls": [
                "./tooltip-examples.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip-examples.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltip-examples',\n  templateUrl: './tooltip-examples.component.html',\n  styleUrls: ['./tooltip-examples.component.scss']\n})\nexport class TooltipExamplesComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./tooltip-examples.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"nexus-h5\">Custom Content</p>\n\n<p class=\"nexus-h6\">Tooltip</p>\n<p>\n  Lorem ipsum dolor sit amet, <nexus-tooltip>\n    <nexus-tooltip-trigger>\n      consectetur\n    </nexus-tooltip-trigger>\n\n    <nexus-tooltip-content>Default Tooltip Content </nexus-tooltip-content>\n  </nexus-tooltip> adipiscing elit. Donec massa dui, bibendum et bibendum ut, facilisis nec lorem.\n</p>\n\n<p class=\"nexus-h6\">Tooltip Placement</p>\n<p>\n  Lorem ipsum dolor sit amet, <nexus-tooltip placement=\"bottom\">\n    <nexus-tooltip-trigger>\n      consectetur\n    </nexus-tooltip-trigger>\n\n    <nexus-tooltip-content>Tooltip Content on bottom</nexus-tooltip-content>\n  </nexus-tooltip> adipiscing elit. Donec massa dui, bibendum et bibendum ut, facilisis nec lorem.\n</p>\n<p>\n  Lorem ipsum dolor sit amet, <nexus-tooltip placement=\"top\">\n    <nexus-tooltip-trigger>\n      consectetur\n    </nexus-tooltip-trigger>\n\n    <nexus-tooltip-content>Tooltip Content on top</nexus-tooltip-content>\n  </nexus-tooltip> adipiscing elit. Donec massa dui, bibendum et bibendum ut, facilisis nec lorem.\n</p>\n<p>\n  Lorem ipsum dolor sit amet, <nexus-tooltip placement=\"right\">\n  <nexus-tooltip-trigger>\n    consectetur\n  </nexus-tooltip-trigger>\n\n  <nexus-tooltip-content>Tooltip Content on right</nexus-tooltip-content>\n</nexus-tooltip> adipiscing elit. Donec massa dui, bibendum et bibendum ut, facilisis nec lorem.\n</p>\n<p>\n  Lorem ipsum dolor sit amet, <nexus-tooltip placement=\"left\">\n    <nexus-tooltip-trigger>\n      consectetur\n    </nexus-tooltip-trigger>\n  \n    <nexus-tooltip-content>Tooltip Content on left</nexus-tooltip-content>\n  </nexus-tooltip> adipiscing elit. Donec massa dui, bibendum et bibendum ut, facilisis nec lorem.\n</p>\n<p>\n  Lorem ipsum dolor sit amet, <nexus-tooltip placement=\"left\">\n  <nexus-tooltip-trigger>\n    consectetur Tooltip Content on left, auto calculates in case of overflow.<br/>Tooltip Content on left, auto calculates in case of overflow.<br />\n  </nexus-tooltip-trigger>\n\n  <nexus-tooltip-content>Tooltip Content on left, auto calculates in case of overflow.</nexus-tooltip-content>\n</nexus-tooltip> adipiscing elit. Donec massa dui, bibendum et bibendum ut, facilisis nec lorem.\n</p>\n\n<p class=\"nexus-h6\">Tooltip click disabled</p> \n<p>\n  This is a , <nexus-tooltip allow-click=\"false\" placement=\"top\">\n    <nexus-tooltip-trigger>\n      tooltip\n    </nexus-tooltip-trigger>\n\n    <nexus-tooltip-content>Tooltip Content</nexus-tooltip-content>\n  </nexus-tooltip> that has click disabled.\n</p>"
        },
        {
            "name": "TooltipPositionVariantComponent",
            "id": "component-TooltipPositionVariantComponent-25612c31477cc0a84f00bb314f69e74cea89d495b095b922fbc05a46c60fa41e554cfde15c19a64aa066be8b7d055f6c41dc8f3e90c0cec20e8ced335e8bae93",
            "file": "src/app/sb/components/tooltip/02_position.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip-position-variant",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_position.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "TooltipPosition",
                    "defaultValue": "TooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { TooltipPosition } from '../../constants';\n\n@Component({\n  selector: 'app-tooltip-position-variant',\n  templateUrl: './02_position.component.html'\n})\nexport default class TooltipPositionVariantComponent {\n  TooltipPosition = TooltipPosition;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-2\">\n    <div class=\"nexus-row\">\n        <div class=\"nexus-col-xs-2\">\n            <nexus-tooltip placement=\"bottom\" [allowClick]=\"TooltipPosition.allowClick\">\n                <nexus-tooltip-trigger>\n                    <button class=\"nexus-btn nexus-btn-large nexus-btn-link\">\n                        {{TooltipPosition.bottomText}} <nexus-icon\n                        [src]=\"TooltipPosition.iconSrc\"></nexus-icon>\n                        <span class=\"nexus-visually-hidden\">{{TooltipPosition.tooltipTriggerContent}}</span>\n                    </button>\n                </nexus-tooltip-trigger>\n                <nexus-tooltip-content>{{TooltipPosition.tooltipContent}}</nexus-tooltip-content>\n            </nexus-tooltip>\n        </div>\n\n        <div class=\"nexus-col-xs-2\">\n            <nexus-tooltip placement=\"top\" [allowClick]=\"TooltipPosition.allowClick\">\n                <nexus-tooltip-trigger>\n                    <button class=\"nexus-btn nexus-btn-large nexus-btn-primary\">\n                        {{TooltipPosition.topText}} <nexus-icon\n                        [src]=\"TooltipPosition.iconSrc\"></nexus-icon>\n                        <span class=\"nexus-visually-hidden\">{{TooltipPosition.tooltipTriggerContent}}</span>\n                    </button>\n                </nexus-tooltip-trigger>\n                <nexus-tooltip-content>{{TooltipPosition.tooltipContent}}</nexus-tooltip-content>\n            </nexus-tooltip>\n        </div>\n    </div>\n    <div class=\"nexus-mt-2 nexus-mb-2\"></div>\n    <div class=\"nexus-row\">\n        <div class=\"nexus-col-xs-2\">\n            <nexus-tooltip placement=\"left\" [allowClick]=\"TooltipPosition.allowClick\">\n                <nexus-tooltip-trigger>\n                    <button class=\"nexus-btn nexus-btn-large\">\n                        {{TooltipPosition.leftText}} <nexus-icon\n                        [src]=\"TooltipPosition.iconSrc\"></nexus-icon>\n                        <span class=\"nexus-visually-hidden\">{{TooltipPosition.tooltipTriggerContent}}</span>\n                    </button>\n                </nexus-tooltip-trigger>\n                <nexus-tooltip-content>{{TooltipPosition.tooltipContent}}</nexus-tooltip-content>\n            </nexus-tooltip>\n        </div>\n\n        <div class=\"nexus-col-xs-2\">\n            <nexus-tooltip placement=\"right\" [allowClick]=\"TooltipPosition.allowClick\">\n                <nexus-tooltip-trigger>\n                    <button class=\"nexus-btn nexus-btn-large nexus-btn-primary\">\n                        {{TooltipPosition.rightText}} <nexus-icon\n                            [src]=\"TooltipPosition.iconSrc\"></nexus-icon>\n                        <span class=\"nexus-visually-hidden\">{{TooltipPosition.tooltipTriggerContent}}</span>\n                    </button>\n                </nexus-tooltip-trigger>\n                <nexus-tooltip-content>{{TooltipPosition.tooltipContent}}</nexus-tooltip-content>\n            </nexus-tooltip>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "TreeComponent",
            "id": "component-TreeComponent-a45e73964bb7d2cb5c766a0c1d98a332d364738249abc2e8b64dbdb9141e96b19144441882086aa789432f513675163b1e6e65412c84ef3b6cdd0c2c1ae78dca",
            "file": "src/app/components/tree/tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tree",
            "styleUrls": [
                "./tree.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss']\n})\nexport class TreeComponent {\n  @Input() open: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-top {\n  margin-top: 10px;\n}\n",
                    "styleUrl": "./tree.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nexus-tree [open]=\"open\">\n  <nexus-tree-trigger>Click to expand</nexus-tree-trigger>\n  <nexus-tree-content>\n    <ul>\n      <li>Tree content item</li>\n      <li>Tree content item</li>\n      <li>Tree content item</li>\n    </ul>\n  </nexus-tree-content>\n</nexus-tree>\n"
        },
        {
            "name": "TreeComponent",
            "id": "component-TreeComponent-389ea16aec99cfe534cc8bb61897a4a54eda76228eab526c95bcdedfc5c3157af42387e74093e71064ee86d51e47f51072081456f1d5a32e5d8133164cc9d2fd-1",
            "file": "src/app/sb/components/tree/01_tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./01_tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultTree",
                    "defaultValue": "DefaultTree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DefaultTree } from '../../constants';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './01_tree.component.html'\n})\nexport default class TreeComponent {\n  @Input() open: boolean = false;\n\n  defaultTree = DefaultTree;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TreeComponent-1",
            "templateData": "<nexus-tree [open]=\"open\">\n  <nexus-tree-trigger>{{defaultTree.title}}</nexus-tree-trigger>\n  <nexus-tree-content>\n    <ul>\n      <li>{{defaultTree.option_1}}</li>\n      <li>{{defaultTree.option_2}}</li>\n      <li>{{defaultTree.option_3}}</li>\n    </ul>\n  </nexus-tree-content>\n</nexus-tree>\n"
        },
        {
            "name": "TypesComponent",
            "id": "component-TypesComponent-269c9dea1e4986c526a59c882b4cd4e6760c6d2b91e3aef0e52df4635e593401772b5941646c5125a5391fc77afedb52301971ee2480b9b37d93b74b0f6d72e2",
            "file": "src/app/sb/components/toggle/04_types.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-types",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_types.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "types",
                    "defaultValue": "types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { types } from '../../constants';\n\n@Component({\n  selector: 'app-types',\n  templateUrl: './04_types.component.html'\n})\nexport default class TypesComponent {\n  types = types;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p class=\"nexus-h6\">{{types.default}}</p>\n<nexus-toggle data-testid=\"toggle-default\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>\n\n<p class=\"nexus-h6\">{{types.button}}</p>\n<nexus-toggle data-testid=\"toggle-button\" type=\"button\" label-inactive=\"hide\" label-active=\"show\"\n    size=\"sm\"></nexus-toggle>"
        },
        {
            "name": "UploadImageComponent",
            "id": "component-UploadImageComponent-50c1ea5633db9158c51b672c7fd567a9c8db93040aeb84337fb65765ef5503acc63b7159606327d9bc63a9b4a79379fd3c586e10c7e9e122d3bbeff5b0711d3a",
            "file": "src/app/sb/components/file-upload/02_uploadImage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-upload-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_uploadImage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "attrId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addToQueueUnique",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "errorFile",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "handleChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleSubmit",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "incorrectFile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "queue",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeFile",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeUploadedFile",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploaded",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "uploadImage",
                    "defaultValue": "uploadImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { uploadImage } from '../../constants';\n\n@Component({\n  selector: 'app-upload-image',\n  templateUrl: './02_uploadImage.component.html'\n})\nexport default class UploadImageComponent {\n  @Input() accept: String = '';\n\n  @Input() attrId: String = '';\n\n  @Input() disabled: boolean = true;\n\n  @Input() multiple: boolean = false;\n\n  @Input() required: boolean = false;\n\n  public queue: any = [];\n\n  public uploaded: any = [];\n\n  uploadImage = uploadImage;\n\n  incorrectFile = false;\n\n  errorFile = '';\n\n  public handleChange = (event) => {\n    this.queue = this.addToQueueUnique(this.queue, [...event.target.files]);\n  };\n\n  public handleSubmit = (event) => {\n    event.preventDefault();\n    const uploadURL = 'https://httpstat.us/200';\n    const formData = new FormData();\n    formData.append('files', this.queue);\n\n    // Fake API request that returns a 200\n    // Replace this with your API method\n    fetch(uploadURL, {\n      method: 'POST',\n      body: formData\n    })\n      .then((response) => response)\n      .then(() => {\n        // eslint-disable-next-line array-callback-return\n        const nextQueue = this.queue.map((file) => {\n          file.uploaded = true;\n          const format = file.name.split('.');\n          if (format[1] === 'png') {\n            return file;\n          }\n          // eslint-disable-next-line prefer-destructuring\n          this.errorFile = format[0];\n          this.incorrectFile = true;\n        });\n\n        this.queue = [];\n        this.uploaded = this.addToQueueUnique(this.uploaded, nextQueue);\n      });\n  };\n\n  public removeFile = (removedFile) => {\n    this.queue = this.queue.filter((file) => file.name !== removedFile.name);\n  };\n\n  public removeUploadedFile = (removedFile) => {\n    this.uploaded = this.uploaded.filter((file) => file.name !== removedFile.name);\n  };\n\n  private readonly addToQueueUnique = (prevQueue, newFiles) => {\n    const ids = new Set(prevQueue.map((prevFile) => prevFile.name));\n\n    return [...prevQueue, ...newFiles.filter((newFile) => !ids.has(newFile.name))];\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<form (submit)=\"handleSubmit($event)\">\n    <nexus-form-field>\n        <nexus-file-upload [accept]=\"accept\" [attrId]=\"attrId\" [disabled]=\"disabled\" [multiple]=\"multiple\"\n            [required]=\"required\" (change)=\"handleChange($event)\">\n            <div [innerHTML]=\"uploadImage.content\"></div>\n        </nexus-file-upload>\n    </nexus-form-field>\n\n    <nexus-chip-group class=\"nexus-rhythm-4\" *ngIf=\"queue.length\">\n        <nexus-chip *ngFor=\"let item of queue; trackBy: item?.name\" removable success=\"{{ item.uploaded || false }}\"\n            (click)=\"removeFile(item)\">\n            {{ item.name }}\n        </nexus-chip>\n    </nexus-chip-group>\n\n    <nexus-chip-group class=\"nexus-rhythm-4\" *ngIf=\"uploaded.length\">\n        <nexus-chip *ngFor=\"let item of uploaded; trackBy: item?.name\" removable success=\"{{ item.uploaded || false }}\"\n            (click)=\"removeUploadedFile(item)\">\n            {{ item.name }}\n        </nexus-chip>\n    </nexus-chip-group>\n\n    <button type=\"submit\" class=\"nexus-btn-primary\">{{uploadImage.upload}}</button>\n</form>\n\n<nexus-toast data-testid=\"toast-error\" closable=\"false\" show=\"true\" variant=\"error\" position=\"bottom\" closeable=\"true\"\n    [ngStyle]=\"{'display': (incorrectFile) ? 'flex' : 'none'}\" style=\"z-index: 100\">\n    <strong>{{errorFile}} </strong>{{uploadImage.text}}\n</nexus-toast>"
        },
        {
            "name": "ValidationComponent",
            "id": "component-ValidationComponent-ca30df4f6096dfd07fe9dd98fe2dbc066f082e5613327079a5e2b416c1092d16c158ce53929409eecb74b28cac3f043aacc813f421467b21343eb6b618c33c6c",
            "file": "src/app/sb/components/slider/03_validation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-validation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_validation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "text",
                    "defaultValue": "validation.text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "values",
                    "defaultValue": "validation.values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "variable",
                    "defaultValue": "validation.variable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "onKey",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { validation } from '../../constants';\n\n\n@Component({\n  selector: 'app-validation',\n  templateUrl: './03_validation.component.html'\n})\nexport default class ValidationComponent {\n  @Input() disabled: boolean = false;\n\n  values = validation.values;\n\n  text = validation.text;\n\n  variable = validation.variable;\n\n  onKey(event: any) {\n    this.values = event.target.value;\n    if (this.values >= 7) {\n      this.variable = 'master';\n    } else if (this.values >= 4) {\n      this.variable = 'medium advanced';\n    } else {\n      this.variable = 'novice';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-form-field>\n    <div class=\"nexus-row nexus-center-xs\">\n        <nexus-label>{{text}}</nexus-label>\n    </div>\n    <div class=\"nexus-row nexus-center-xs\">\n        <div class=\"nexus-col-xs-4 nexus-col-sm-3\">\n            <nexus-slider data-testid=\"slider\" max=\"10\" min=\"0\" [disabled]=\"disabled\" (input)=\"onKey($event)\">\n            </nexus-slider>\n        </div>\n    </div>\n    <div class=\"nexus-row nexus-center-xs\">\n        <p id=\"userScore\">If you have <b>{{variable}}</b> years of experience, you are\n            {{variable}}.</p>\n    </div>\n</nexus-form-field>"
        },
        {
            "name": "VariantsComponent",
            "id": "component-VariantsComponent-0592d7f2bc79840fd03c1b911bf4dd4db81586133a165e240915b4d213fb647529fe6fb9f8dd02241c9edec6f43c520f6dd5994f5a91a15caac65d3d34afd631",
            "file": "src/app/sb/components/radio/04_variants.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-variants",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_variants.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "radio.name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "variants",
                    "defaultValue": "variants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { radio, variants } from '../../constants';\n\n@Component({\n  selector: 'app-variants',\n  templateUrl: './04_variants.component.html'\n})\nexport default class VariantsComponent {\n  @Input() name = radio.name;\n\n  @Input() disabled: boolean = true;\n\n  variants = variants;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-col-xs \">\n    <nexus-label>{{variants.first}}</nexus-label>\n\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" name=\"variants\">\n            {{variants.default}}</nexus-radio>\n    </div>\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" name=\"variants\" checked=\"true\">\n            {{variants.checked}}</nexus-radio>\n    </div>\n\n    <nexus-label>{{variants.second}}</nexus-label>\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" name=\"variantDisabled\" [disabled]=\"true\">\n            {{variants.disabled}}</nexus-radio>\n    </div>\n    <div class=\"nexus-col-xs-1\">\n        <nexus-radio data-testid=\"radio-btn-opt1\" name=\"variantDisabled\" checked [disabled]=\"true\">\n            {{variants.both}}</nexus-radio>\n    </div>\n</div>"
        },
        {
            "name": "WithCustomContentComponent",
            "id": "component-WithCustomContentComponent-b06b8d458f0e347aa4ef22ce7c323c303883807a64bbd9590ee378029036eafdeb004884ecaa95bf49621f0d4d02f5c2c90a18a2131d8258f8cedbf0a8e40a44",
            "file": "src/app/sb/components/tab-bar/02_withCustomContent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-bar-custom-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./02_withCustomContent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabOption",
                    "defaultValue": "tabBarCustomContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ChangeActive",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { tabBarCustomContent } from '../../constants';\n\n@Component({\n  selector: 'app-tab-bar-custom-content',\n  templateUrl: './02_withCustomContent.component.html'\n})\nexport default class WithCustomContentComponent {\n  tabOption = tabBarCustomContent;\n\n  ChangeActive(index: number) {\n    this.tabOption.forEach((item) => {\n      item.isActive = false;\n    });\n    this.tabOption[index].isActive = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-tab-bar>\n    <span>\n        <button (click)=\"ChangeActive(i)\" [ngClass]=\"option.isActive == true ? 'nexus-link nexus-active' : 'nexus-link'\"\n            *ngFor=\"let option of tabOption; let i = index\"><a>{{ option.title }}</a></button>\n    </span>\n</nexus-tab-bar>\n\n<div style=\"margin: 20px\" *ngFor=\"let option of tabOption\">\n    <div *ngIf=\"option.isActive\" [innerHTML]=\"option.value\"></div>\n</div>"
        },
        {
            "name": "WithCustomLengthComponent",
            "id": "component-WithCustomLengthComponent-bcb8e3f1490affd41794fa2a43084fd42876f8325aba35681af075dc94bd600bd57bdd137e64bdf10e2caff8728c413e0755758c643021797a28a37b81cdd88c",
            "file": "src/app/sb/components/pin-entry/03_withCustomLength.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-entry-with-custom-length",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_withCustomLength.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-entry-with-custom-length',\n  templateUrl: './03_withCustomLength.component.html'\n})\nexport default class WithCustomLengthComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"nexus-center-xs nexus-mt-5\">\n    <nexus-pin-entry data-testid=\"pin-entry\" length=6 type='tel'>\n    </nexus-pin-entry>\n</div>"
        },
        {
            "name": "WithIconComponent",
            "id": "component-WithIconComponent-5fb26c0e93775851574a7250841ff5061ee380e9c6b05bb947c98e44f264cd95b8d034b2fc2db0fdd3bd7732237f9a0dc675ecce034326e2fcb93df5f91a58f4",
            "file": "src/app/sb/components/radio/03_withIcon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-with-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_withIcon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "withIcon",
                    "defaultValue": "withIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { withIcon } from '../../constants';\n\n\n@Component({\n  selector: 'app-with-icon',\n  templateUrl: './03_withIcon.component.html'\n})\nexport default class WithIconComponent {\n  withIcon = withIcon;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-card>\n    <div class=\"nexus-center-xs\">\n        <h4 class='nexus-h4'>{{withIcon.agreement}}</h4>\n        <div [innerHTML]=\"withIcon.details\"></div>\n        <div class=\"nexus-row nexus-center-xs\">\n            <nexus-radio data-testid=\"radio-btn-opt1\" name=\"withIcon\">\n                <nexus-icon src=\"./assets/icons/action/ic_done_24px.svg\" size=\"md\"\n                    style=\"position:relative; bottom:5px; color:#44AB46\">\n                </nexus-icon>\n                <span style=\"position:relative; bottom:11px; font-size:16px\">{{withIcon.accept}}</span>\n            </nexus-radio>\n            <nexus-radio data-testid=\"radio-btn-opt1\" name=\"withIcon\">\n                <nexus-icon src=\"./assets/icons/content/ic_clear_24px.svg\" size=\"md\"\n                    style=\"position:relative; bottom:5px; color: #DA3510\">\n                </nexus-icon>\n                <span style=\"position:relative; bottom:11px; font-size:16px\">{{withIcon.reject}}</span>\n            </nexus-radio>\n        </div>\n    </div>\n</nexus-card>"
        },
        {
            "name": "WithLabelComponent",
            "id": "component-WithLabelComponent-77a857d811c5d221e57176436906fbf28bf67dbc8179fdfa57361dfdd78d3827b1a4e859b7057210ce460ea7d0190dfb44d2544e1c9240afafba4d0b224ae155",
            "file": "src/app/sb/components/toggle/03_withLabel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-with-label",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_withLabel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-with-label',\n  templateUrl: './03_withLabel.component.html'\n})\nexport default class WithLabelComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<nexus-toggle data-testid=\"toggle-labels\" label-inactive=\"hide\" label-active=\"show\" size=\"sm\"></nexus-toggle>"
        },
        {
            "name": "WithSearchBarComponent",
            "id": "component-WithSearchBarComponent-4abc2e165dad2e904fdde1a1afa2e487fcfd6a6c95c6d861de13ec3ac4f28c338b2684c670561c5bedd797755f0530baa78b689729ff5caa57605335ccb020f6",
            "file": "src/app/sb/components/dropdown/04_withSearchBar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown-examples-search",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./04_withSearchBar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredItem",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "performFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown-examples-search',\n  templateUrl: './04_withSearchBar.component.html'\n})\nexport default class WithSearchBarComponent implements OnInit {\n  @Input() show: boolean = false;\n\n  Items: any = [];\n\n  filteredItem: any = [];\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.show = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.Items.push('Item 1');\n    this.Items.push('Item 2');\n\n    this.filteredItem = this.Items;\n  }\n\n  performFilter(event: any) {\n    const filterBy = event.target.value.toLocaleLowerCase();\n    this.filteredItem = this.Items.filter((item: any) => item.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nexus-center-xs\">\n  <nexus-dropdown [show]=\"show\" id=\"dropdownId\" dropdown-type=\"select\" placement=\"right\" height=\"150\" width=\"600\">\n    <nexus-icon\n      (click)=\"show = !show\"\n      slot=\"trigerer\"\n      id=\"iconId\"\n      src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"\n    ></nexus-icon>\n\n    <nexus-search data-testid=\"search-bar\">\n      <nexus-input (keyup)=\"performFilter($event)\" autocomplete=\"off\" placeholder=\"Search\">\n        <nexus-icon data-testid=\"search-icon\" src=\"./assets/icons/action/ic_search_24px.svg\"></nexus-icon>\n      </nexus-input>\n\n      <nexus-search-list-item *ngFor=\"let item of filteredItem\">\n        <button>{{ item }}</button>\n      </nexus-search-list-item>\n    </nexus-search>\n  </nexus-dropdown>\n</div>\n"
        },
        {
            "name": "WithSelectComponent",
            "id": "component-WithSelectComponent-511a64ea356e098234fc58c64ebeb2755765e8779012e22b741dd1045fe0dc626d0c9a7d16c6229798551aa8528f798fbbcc682916f469f3a8a3c6625ad2a6b9",
            "file": "src/app/sb/components/dropdown/03_withSelect.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown-examples-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./03_withSelect.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown-examples-select',\n  templateUrl: './03_withSelect.component.html'\n})\nexport default class WithSelectComponent {\n  @Input() show = false;\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event) {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.show = false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"nexus-center-xs\" >\n  <nexus-dropdown\n    [show]=\"show\"\n    id=\"dropdownId\"\n    dropdown-type=\"basic\"\n    placement=\"center\"\n    height=\"250\"\n    width=\"250\"\n    show=\"true\"\n  >\n    <nexus-icon\n      (click)=\"show = !show\"\n      slot=\"trigerer\"\n      id=\"iconId\"\n      src=\"./assets/icons/navigation/ic_more_vert_24px.svg\"\n    ></nexus-icon>\n\n    <nexus-select value=\"\">\n      <option value=\"\" disabled selected>Your Primary Options</option>\n      <option value=\"option1\">Add <button class=\"nexus-btn-warn\"></button></option>\n      <option value=\"option2\" disabled selected>Delete</option>\n      <option value=\"option3\">Block</option>\n    </nexus-select>\n    <nexus-select value=\"\">\n      <option value=\"\" disabled selected>Your Secondary Options</option>\n      <option value=\"option1\">Save</option>\n      <option value=\"option2\">Load</option>\n      <option value=\"option3\" disabled selected>Edit</option>\n    </nexus-select>\n  </nexus-dropdown>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-1ec5804c54f8f7d0e1181a5c8d7b593001ae3b5fa04d365a9b6ab7fb81818f7a1a0c7dfa10f1bb62cb190af7a817790e26326edebaba3b974a98fac42016e6cb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "// tslint:disable: max-line-length\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SBAppModule } from './sb/app.modules';\n\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './views/index/index.component';\nimport { PlaybookDirective } from './playbook-component.directive';\n\nimport { NexusAngularModule } from '@nexus/angular';\nimport { AccordionComponent } from './components/accordion/accordion.component';\nimport { AccordionExamplesComponent } from './components/accordion-examples/accordion-examples.component';\nimport { AccordionGroupExamplesComponent } from './components/accordion-examples/accordion-group-examples/accordion-group-examples.component';\nimport { AvatarComponent } from './components/avatar/avatar.component';\nimport { AvatarExamplesComponent } from './components/avatar-examples/avatar-examples.component';\nimport { BadgeComponent } from './components/badge/badge.component';\nimport { BadgeExamplesComponent } from './components/badge-examples/badge-examples.component';\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\nimport { BreadcrumbExampleComponent } from './components/breadcrumb-example/breadcrumb-example.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { ButtonExamplesComponent } from './components/button-examples/button-examples.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CardExamplesComponent } from './components/card-examples/card-examples.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { CheckboxExamplesComponent } from './components/checkbox-examples/checkbox-examples.component';\nimport { ChipComponent } from './components/chip/chip.component';\nimport { ChipGroupComponent } from './components/chip-group/chip-group.component';\nimport { ChipExamplesComponent } from './components/chip-examples/chip-examples.component';\nimport { LabelComponent } from './components/label/label.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoaderExamplesComponent } from './components/loader-examples/loader-examples.component';\nimport { ErrorMessageComponent } from './components/error-message/error-message.component';\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormFieldExamplesComponent } from './components/form-field-examples/form-field-examples.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { InputComponent } from './components/input/input.component';\nimport { InputExamplesComponent } from './components/input-examples/input-examples.component';\nimport { IconExamplesComponent } from './components/icon-examples/icon-examples.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { ModalComponent } from './components/modal/modal.component';\nimport { ModalExamplesComponent } from './components/modal-examples/modal-examples.component';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { PinEntryComponent } from './components/pin-entry/pin-entry.component';\nimport { PinEntryExamplesComponent } from './components/pin-entry-examples/pin-entry-examples.component';\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\nimport { ProgressBarExamplesComponent } from './components/progress-bar-examples/progress-bar-examples.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { RadioExamplesComponent } from './components/radio-examples/radio-examples.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SearchExamplesComponent } from './components/search-examples/search-examples.component';\nimport { SliderComponent } from './components/slider/slider.component';\nimport { SliderExamplesComponent } from './components/slider-examples/slider-examples.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SelectExampleComponent } from './components/select-example/select-example.component';\nimport { TabBarComponent } from './components/tab-bar/tab-bar.component';\nimport { TableComponent } from './components/table/table.component';\nimport { TableExamplesComponent } from './components/table-examples/table-examples.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { ToastExamplesComponent } from './components/toast-examples/toast-examples.component';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { ToggleExamplesComponent } from './components/toggle-examples/toggle-examples.component';\nimport { TooltipComponent } from './components/tooltip/tooltip.component';\nimport { TooltipExamplesComponent } from './components/tooltip-examples/tooltip-examples.component';\nimport { TreeComponent } from './components/tree/tree.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { DropdownExamplesComponent } from './components/dropdown-examples/dropdown-examples.component';\nimport { StepperComponent } from './components/stepper/stepper.component';\nimport { StepperExamplesComponent } from './components/stepper-examples/stepper-examples.component';\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\nimport { StackedBarChartComponent } from './components/stacked-bar-chart/stacked-bar-chart.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    PlaybookDirective,\n    AccordionComponent,\n    AccordionExamplesComponent,\n    AvatarComponent,\n    AvatarExamplesComponent,\n    AccordionGroupExamplesComponent,\n    BadgeComponent,\n    BadgeExamplesComponent,\n    BreadcrumbComponent,\n    BreadcrumbExampleComponent,\n    ButtonComponent,\n    ButtonExamplesComponent,\n    CardComponent,\n    CardExamplesComponent,\n    CarouselComponent,\n    CheckboxComponent,\n    CheckboxExamplesComponent,\n    ChipComponent,\n    ChipGroupComponent,\n    ChipExamplesComponent,\n    ErrorMessageComponent,\n    FileUploadComponent,\n    FormFieldComponent,\n    FormFieldExamplesComponent,\n    FooterComponent,\n    HeaderComponent,\n    IconComponent,\n    IconExamplesComponent,\n    InputComponent,\n    InputExamplesComponent,\n    LabelComponent,\n    LoaderComponent,\n    LoaderExamplesComponent,\n    MenuComponent,\n    ModalComponent,\n    ModalExamplesComponent,\n    NotificationComponent,\n    PaginationComponent,\n    PinEntryComponent,\n    PinEntryExamplesComponent,\n    ProgressBarComponent,\n    ProgressBarExamplesComponent,\n    RadioComponent,\n    RadioExamplesComponent,\n    SearchComponent,\n    SearchExamplesComponent,\n    SelectComponent,\n    SelectExampleComponent,\n    SliderComponent,\n    SliderExamplesComponent,\n    StepperComponent,\n    StepperExamplesComponent,\n    TabBarComponent,\n    TableComponent,\n    TableExamplesComponent,\n    TextareaComponent,\n    TooltipComponent,\n    TooltipExamplesComponent,\n    ToastComponent,\n    ToastExamplesComponent,\n    ToggleComponent,\n    ToggleExamplesComponent,\n    TreeComponent,\n    DropdownComponent,\n    DropdownExamplesComponent,\n    BarChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    StackedBarChartComponent\n  ],\n  imports: [HttpClientModule, BrowserModule, FormsModule, ReactiveFormsModule, NexusAngularModule, SBAppModule],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    AvatarComponent,\n    AvatarExamplesComponent,\n    IndexComponent,\n    AccordionComponent,\n    AccordionExamplesComponent,\n    AccordionGroupExamplesComponent,\n    BadgeComponent,\n    BadgeExamplesComponent,\n    BreadcrumbComponent,\n    BreadcrumbExampleComponent,\n    ButtonComponent,\n    ButtonExamplesComponent,\n    CardComponent,\n    CardExamplesComponent,\n    CarouselComponent,\n    CheckboxComponent,\n    CheckboxExamplesComponent,\n    ChipExamplesComponent,\n    ErrorMessageComponent,\n    FileUploadComponent,\n    FormFieldComponent,\n    FormFieldExamplesComponent,\n    FooterComponent,\n    HeaderComponent,\n    IconComponent,\n    IconExamplesComponent,\n    InputComponent,\n    InputExamplesComponent,\n    LabelComponent,\n    LoaderComponent,\n    LoaderExamplesComponent,\n    ModalComponent,\n    ModalExamplesComponent,\n    MenuComponent,\n    NotificationComponent,\n    PaginationComponent,\n    PinEntryComponent,\n    PinEntryExamplesComponent,\n    ProgressBarComponent,\n    ProgressBarExamplesComponent,\n    RadioComponent,\n    RadioExamplesComponent,\n    SelectComponent,\n    SelectExampleComponent,\n    SearchComponent,\n    SearchExamplesComponent,\n    SliderComponent,\n    SliderExamplesComponent,\n    StepperComponent,\n    StepperExamplesComponent,\n    TableComponent,\n    TabBarComponent,\n    TextareaComponent,\n    ToastComponent,\n    ToastExamplesComponent,\n    ToggleComponent,\n    ToggleExamplesComponent,\n    TooltipComponent,\n    TooltipExamplesComponent,\n    TreeComponent,\n    BarChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    StackedBarChartComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionExamplesComponent"
                        },
                        {
                            "name": "AccordionGroupExamplesComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "AvatarExamplesComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "BadgeExamplesComponent"
                        },
                        {
                            "name": "BarChartComponent"
                        },
                        {
                            "name": "BreadcrumbComponent"
                        },
                        {
                            "name": "BreadcrumbExampleComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonExamplesComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardExamplesComponent"
                        },
                        {
                            "name": "CarouselComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "CheckboxExamplesComponent"
                        },
                        {
                            "name": "ChipComponent"
                        },
                        {
                            "name": "ChipExamplesComponent"
                        },
                        {
                            "name": "ChipGroupComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "DropdownExamplesComponent"
                        },
                        {
                            "name": "ErrorMessageComponent"
                        },
                        {
                            "name": "FileUploadComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "FormFieldComponent"
                        },
                        {
                            "name": "FormFieldExamplesComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "IconExamplesComponent"
                        },
                        {
                            "name": "IndexComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "InputExamplesComponent"
                        },
                        {
                            "name": "LabelComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "LoaderExamplesComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "ModalComponent"
                        },
                        {
                            "name": "ModalExamplesComponent"
                        },
                        {
                            "name": "NotificationComponent"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "PieChartComponent"
                        },
                        {
                            "name": "PinEntryComponent"
                        },
                        {
                            "name": "PinEntryExamplesComponent"
                        },
                        {
                            "name": "PlaybookDirective"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "ProgressBarExamplesComponent"
                        },
                        {
                            "name": "RadioComponent"
                        },
                        {
                            "name": "RadioExamplesComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "SearchExamplesComponent"
                        },
                        {
                            "name": "SelectComponent"
                        },
                        {
                            "name": "SelectExampleComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "SliderExamplesComponent"
                        },
                        {
                            "name": "StackedBarChartComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "StepperExamplesComponent"
                        },
                        {
                            "name": "TabBarComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TableExamplesComponent"
                        },
                        {
                            "name": "TextareaComponent"
                        },
                        {
                            "name": "ToastComponent"
                        },
                        {
                            "name": "ToastExamplesComponent"
                        },
                        {
                            "name": "ToggleComponent"
                        },
                        {
                            "name": "ToggleExamplesComponent"
                        },
                        {
                            "name": "TooltipComponent"
                        },
                        {
                            "name": "TooltipExamplesComponent"
                        },
                        {
                            "name": "TreeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SBAppModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-1dbab62071254477ca1c706bd581ae3866d4f4904b5c6b78cf07a3c8156972d10db3a517cb0a1346c883f651c304ddbda57c5d541db216624ae384e3ddf5e535",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SBAppModule",
            "id": "module-SBAppModule-6173000014dfa4805256aecb52a585a58367045959fe449ebc40d4eb8c0de8237489eb0169f7029c72c9724cc9f1a58aea8d097c030496a7c897f798a2789d9b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/sb/app.modules.ts",
            "methods": [],
            "sourceCode": "/* eslint-disable max-lines */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NexusAngularModule } from '@nexus/angular';\nimport SBAccordionComponent from './components/accordion/01_accordion.component';\nimport SBAccordionAlignmentComponent from './components/accordion/02_accordionAlignment.component';\nimport SBCardInsideAccordionComponent from './components/accordion/03_cardInsideAccordion.component';\nimport SBAccordionGroupComponent from './components/accordion/04_accordionGroup.component';\nimport SBBadgeComponent from './components/badge/01_badge.component';\nimport SBAppearenceComponent from './components/badge/02_appearence.component';\nimport SBButtonOverlayComponent from './components/badge/03_buttonOverlay.component';\nimport SBIconOverlayComponent from './components/badge/04_iconOverlay.component';\nimport SBCarouselComponent from './components/carousel/01_carousel.component';\nimport SBChipComponent from './components/chip/01_chip.component';\nimport SBChipVariantComponent from './components/chip/02_variant.component';\nimport SBChipGroupComponent from './components/chip/03_group.component';\nimport SBRemovableChipComponent from './components/chip/04_removable.component';\nimport SBChipOnDarkThemeComponent from './components/chip/05_darkTheme.component';\nimport SBIconComponent from './components/icon/01_icon.component';\nimport SBIconSizeComponent from './components/icon/02_size.component';\nimport SBLoaderComponent from './components/loader/01_loader.component';\nimport SBLoaderOverlayComponent from './components/loader/02_overlay.component';\nimport SBNotificationComponent from './components/notification/01_notification.component';\nimport SBOverlayComponent from './components/icon/03_overlay.component';\nimport SBIconOnFormComponent from './components/icon/04_iconOnForm.component';\nimport SBNotificationOverlayComponent from './components/notification/02_overlay.component';\nimport SBPaginationComponent from './components/pagination/01_pagination.component';\nimport SBProgressBarComponent from './components/progress-bar/01_progress-bar.component';\nimport SBProgressBarETAComponent from './components/progress-bar/02_infinite.component';\nimport SBProgressBarPerfReportComponent from './components/progress-bar/03_reports.component';\nimport SBModalComponent from './components/modal/01_modal.component';\nimport SBModalTOUComponent from './components/modal/02_termsOfUse.component';\nimport SBToastComponent from './components/toast/01_toast.component';\nimport SBToastVariantComponent from './components/toast/02_variants.component';\nimport SBToastAutoCloseComponent from './components/toast/03_autoClose.component';\nimport SBTooltipComponent from './components/tooltip/01_tooltip.component';\nimport SBTooltipPositionVariantComponent from './components/tooltip/02_position.component';\nimport SBBreadcrumbComponent from './components/breadcrumb/01_breadcrumb.component';\nimport SBBreadcrumbWithIconComponent from './components/breadcrumb/02_breadcrumbWithIcon.component';\nimport SBDisableBreadcrumbItemComponent from './components/breadcrumb/03_disableBreadcrumbItem.component';\nimport SBFooterComponent from './components/footer/01_footer.component';\nimport SBHeaderComponent from './components/header/01_header.component';\nimport SBMenuComponent from './components/menu/01_menu.component';\nimport SBHeaderWithAvatarComponent from './components/header/02_withAvatar.component';\nimport SBStepperComponent from './components/stepper/01_stepper.component';\nimport SBButtonComponent from './components/button/01_button.component';\nimport SBStateComponent from './components/button/03_state.component';\nimport SBSizeComponent from './components/button/02_size.component';\nimport SBDisabledComponent from './components/button/05_disabled.component';\nimport SBFloatingButtonComponent from './components/button/06_floatingButton.component';\nimport SBDarkThemeComponent from './components/button/04_darkTheme.component';\nimport SBTabBarComponent from './components/tab-bar/01_tab-bar.component';\nimport SBWithCustomContentComponent from './components/tab-bar/02_withCustomContent.component';\nimport SBTableComponent from './components/table/01_table.component';\nimport SBDropdownComponent from './components/dropdown/01_dropdown.component';\nimport SBWithSelectComponent from './components/dropdown/03_withSelect.component';\nimport SBTabbedButtonComponent from './components/button/07_tabbed.component';\nimport SBWithSearchBarComponent from './components/dropdown/04_withSearchBar.component';\nimport SBPinEntryComponent from './components/pin-entry/01_pin-entry.component';\nimport SBPinEntryDisabledComponent from './components/pin-entry/02_pin-entryDisabled.component';\nimport SBWithCustomLengthComponent from './components/pin-entry/03_withCustomLength.component';\nimport SBErrorMessageComponent from './components/error-message/01_errorMessage.component';\nimport SBEmailValidationComponent from './components/error-message/02_emailValidation.component';\nimport SBNameValidationComponent from './components/error-message/03_nameValidation.component';\nimport SBNexusNotificationVariant from './components/notification/03_variants.component';\nimport SBInputComponent from './components/input/01_input.component';\nimport SBInputMaxLengthComponent from './components/input/02_maxLength.component';\nimport SBInputPasswordComponent from './components/input/04_withPassword.component';\nimport SBInputNumberComponent from './components/input/03_withNumber.component';\nimport SBInputDateComponent from './components/input/05_withDate.component';\nimport SBInputReadOnlyComponent from './components/input/06_readOnly.component';\nimport SBInputDisabledComponent from './components/input/07_disabled.component';\nimport SBFormFieldComponent from './components/form-field/01_formField.component';\nimport SBFormFieldDisableComponent from './components/form-field/02_disabled.component';\nimport SBFormFieldMessageComponent from './components/form-field/03_withMessage.component';\nimport SBFormFieldWithErrorComponent from './components/form-field/04_withError.component';\nimport SBRadioComponent from './components/radio/01_radio.component';\nimport SBGroupComponent from './components/radio/02_group.component';\nimport SBWithIconComponent from './components/radio/03_withIcon.component';\nimport SBVariantsComponent from './components/radio/04_variants.component';\nimport SBGroupDisabledComponent from './components/radio/05_groupDisabled.component';\nimport SBDisabledSelectedComponent from './components/radio/06_disabledSelected.component';\nimport SBSelectComponent from './components/select/01_select.component';\nimport SBCustomComponent from './components/select/02_custom.component';\nimport SBMultiselectComponent from './components/select/03_multiselect.component';\nimport SBFileUploadComponent from './components/file-upload/01_fileUpload.component';\nimport SBUploadImageComponent from './components/file-upload/02_uploadImage.component';\nimport SBSliderComponent from './components/slider/01_slider.component';\nimport SBSliderDisabledComponent from './components/slider/02_disabled.component';\nimport SBValidationComponent from './components/slider/03_validation.component';\nimport SBToggleComponent from './components/toggle/01_toggle.component';\nimport SBSwitchDisabledComponent from './components/toggle/02_switchDisabled.component';\nimport SBWithLabelComponent from './components/toggle/03_withLabel.component';\nimport SBTypesComponent from './components/toggle/04_types.component';\nimport SBSwitchSizeComponent from './components/toggle/05_switchSize.component';\nimport SBButtonSwitchComponent from './components/toggle/06_buttonSize.component';\nimport SBBarchartComponent from './components/bar-chart/01_bar-chart.component';\nimport SBLinechartComponent from './components/line-chart/01_line-chart.component';\nimport SBCheckboxComponent from './components/checkbox/01_checkbox.component';\nimport SBConfigurationComponent from './components/checkbox/02_setUp.component';\nimport SBTextareaComponent from './components/textarea/01_textarea.component';\nimport SBCardComponent from './components/card/01_card.component';\nimport SBCardWithBackgroundColor from './components/card/02_backgroundColor.component';\nimport SBCardFullBackgroundImage from './components/card/03_fullBackgroundImage.component';\nimport SBCardBodyWithBackgroundImage from './components/card/04_bodyWithImage.component';\nimport SBAccordionGroupWithTableSlotComponent from './components/accordion/05_accordionGroupWithTableSlot';\nimport SBTreeComponent from './components/tree/01_tree.component';\nimport SBAvatarComponent from './components/avatar/01_avatar.component';\nimport SBImageAndNameComponent from './components/avatar/02_imageAndName.component';\nimport SBAvatarInitialsComponent from './components/avatar/03_initials.component';\nimport SBAvatarInitialsAndNameComponent from './components/avatar/04_initialsAndName.component';\nimport SBInitialsNameAndNotificationComponent from './components/avatar/05_initialsNameAndNotification.component';\nimport SBLogoAndNameComponent from './components/avatar/06_logoAndName.component';\nimport SBStatusComponent from './components/avatar/07_status.component';\nimport SBAvatarSizeComponent from './components/avatar/08_size.component';\nimport SBSearchComponent from './components/search/01_search.component';\nimport SBFilterTableComponent from './components/search/02_filterTable.component';\nimport SBStepperStatusComponent from './components/stepper/02_status.component';\n\n@NgModule({\n  declarations: [\n    SBAccordionComponent,\n    SBAccordionAlignmentComponent,\n    SBCardInsideAccordionComponent,\n    SBAccordionGroupComponent,\n    SBBadgeComponent,\n    SBAppearenceComponent,\n    SBButtonOverlayComponent,\n    SBSizeComponent,\n    SBIconOverlayComponent,\n    SBCarouselComponent,\n    SBChipComponent,\n    SBChipVariantComponent,\n    SBChipGroupComponent,\n    SBRemovableChipComponent,\n    SBChipOnDarkThemeComponent,\n    SBIconComponent,\n    SBIconSizeComponent,\n    SBLoaderComponent,\n    SBLoaderOverlayComponent,\n    SBNotificationComponent,\n    SBOverlayComponent,\n    SBIconOnFormComponent,\n    SBNotificationOverlayComponent,\n    SBPaginationComponent,\n    SBProgressBarComponent,\n    SBProgressBarETAComponent,\n    SBProgressBarPerfReportComponent,\n    SBModalComponent,\n    SBModalTOUComponent,\n    SBToastComponent,\n    SBToastVariantComponent,\n    SBToastAutoCloseComponent,\n    SBTooltipComponent,\n    SBBreadcrumbComponent,\n    SBBreadcrumbWithIconComponent,\n    SBDisableBreadcrumbItemComponent,\n    SBFooterComponent,\n    SBHeaderComponent,\n    SBMenuComponent,\n    SBHeaderWithAvatarComponent,\n    SBStepperComponent,\n    SBButtonComponent,\n    SBStateComponent,\n    SBTooltipPositionVariantComponent,\n    SBDisabledComponent,\n    SBFloatingButtonComponent,\n    SBDarkThemeComponent,\n    SBTabBarComponent,\n    SBWithCustomContentComponent,\n    SBTabBarComponent,\n    SBTableComponent,\n    SBDropdownComponent,\n    SBWithSelectComponent,\n    SBWithSearchBarComponent,\n    SBTabbedButtonComponent,\n    SBPinEntryComponent,\n    SBPinEntryDisabledComponent,\n    SBWithCustomLengthComponent,\n    SBErrorMessageComponent,\n    SBEmailValidationComponent,\n    SBNameValidationComponent,\n    SBNexusNotificationVariant,\n    SBInputComponent,\n    SBInputMaxLengthComponent,\n    SBInputPasswordComponent,\n    SBInputNumberComponent,\n    SBInputDateComponent,\n    SBInputReadOnlyComponent,\n    SBInputDisabledComponent,\n    SBFormFieldComponent,\n    SBFormFieldDisableComponent,\n    SBFormFieldMessageComponent,\n    SBFormFieldWithErrorComponent,\n    SBRadioComponent,\n    SBGroupComponent,\n    SBWithIconComponent,\n    SBVariantsComponent,\n    SBGroupDisabledComponent,\n    SBDisabledSelectedComponent,\n    SBSelectComponent,\n    SBCustomComponent,\n    SBMultiselectComponent,\n    SBFileUploadComponent,\n    SBUploadImageComponent,\n    SBSliderComponent,\n    SBSliderDisabledComponent,\n    SBValidationComponent,\n    SBToggleComponent,\n    SBSwitchDisabledComponent,\n    SBWithLabelComponent,\n    SBTypesComponent,\n    SBSwitchSizeComponent,\n    SBButtonSwitchComponent,\n    SBBarchartComponent,\n    SBLinechartComponent,\n    SBCheckboxComponent,\n    SBConfigurationComponent,\n    SBTextareaComponent,\n    SBCardComponent,\n    SBCardWithBackgroundColor,\n    SBCardFullBackgroundImage,\n    SBCardBodyWithBackgroundImage,\n    SBLinechartComponent,\n    SBAccordionGroupWithTableSlotComponent,\n    SBTreeComponent,\n    SBAvatarComponent,\n    SBImageAndNameComponent,\n    SBAvatarInitialsComponent,\n    SBAvatarInitialsAndNameComponent,\n    SBInitialsNameAndNotificationComponent,\n    SBLogoAndNameComponent,\n    SBStatusComponent,\n    SBAvatarSizeComponent,\n    SBSearchComponent,\n    SBFilterTableComponent,\n    SBStepperStatusComponent\n  ],\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule, NexusAngularModule],\n\n  bootstrap: [],\n  entryComponents: [\n    SBAccordionComponent,\n    SBAccordionAlignmentComponent,\n    SBCardInsideAccordionComponent,\n    SBAccordionGroupComponent,\n    SBBadgeComponent,\n    SBAppearenceComponent,\n    SBButtonOverlayComponent,\n    SBSizeComponent,\n    SBIconOverlayComponent,\n    SBCarouselComponent,\n    SBChipComponent,\n    SBChipVariantComponent,\n    SBChipGroupComponent,\n    SBRemovableChipComponent,\n    SBChipOnDarkThemeComponent,\n    SBIconComponent,\n    SBIconSizeComponent,\n    SBLoaderComponent,\n    SBLoaderOverlayComponent,\n    SBNotificationComponent,\n    SBOverlayComponent,\n    SBIconOnFormComponent,\n    SBNotificationOverlayComponent,\n    SBPaginationComponent,\n    SBProgressBarComponent,\n    SBProgressBarETAComponent,\n    SBProgressBarPerfReportComponent,\n    SBModalComponent,\n    SBModalTOUComponent,\n    SBToastComponent,\n    SBToastVariantComponent,\n    SBToastAutoCloseComponent,\n    SBTooltipComponent,\n    SBBreadcrumbComponent,\n    SBBreadcrumbWithIconComponent,\n    SBDisableBreadcrumbItemComponent,\n    SBFooterComponent,\n    SBHeaderComponent,\n    SBMenuComponent,\n    SBHeaderWithAvatarComponent,\n    SBStepperComponent,\n    SBButtonComponent,\n    SBStateComponent,\n    SBTooltipPositionVariantComponent,\n    SBDisabledComponent,\n    SBFloatingButtonComponent,\n    SBDarkThemeComponent,\n    SBTabBarComponent,\n    SBWithCustomContentComponent,\n    SBTabBarComponent,\n    SBTableComponent,\n    SBDropdownComponent,\n    SBWithSelectComponent,\n    SBWithSearchBarComponent,\n    SBTabbedButtonComponent,\n    SBPinEntryComponent,\n    SBPinEntryDisabledComponent,\n    SBWithCustomLengthComponent,\n    SBErrorMessageComponent,\n    SBEmailValidationComponent,\n    SBNameValidationComponent,\n    SBNexusNotificationVariant,\n    SBInputComponent,\n    SBInputMaxLengthComponent,\n    SBInputPasswordComponent,\n    SBInputNumberComponent,\n    SBInputDateComponent,\n    SBInputReadOnlyComponent,\n    SBInputDisabledComponent,\n    SBFormFieldComponent,\n    SBFormFieldDisableComponent,\n    SBFormFieldMessageComponent,\n    SBFormFieldWithErrorComponent,\n    SBRadioComponent,\n    SBGroupComponent,\n    SBWithIconComponent,\n    SBVariantsComponent,\n    SBGroupDisabledComponent,\n    SBDisabledSelectedComponent,\n    SBSelectComponent,\n    SBCustomComponent,\n    SBMultiselectComponent,\n    SBFileUploadComponent,\n    SBUploadImageComponent,\n    SBSliderComponent,\n    SBSliderDisabledComponent,\n    SBToggleComponent,\n    SBSwitchDisabledComponent,\n    SBWithLabelComponent,\n    SBTypesComponent,\n    SBSwitchSizeComponent,\n    SBButtonSwitchComponent,\n    SBBarchartComponent,\n    SBLinechartComponent,\n    SBCheckboxComponent,\n    SBConfigurationComponent,\n    SBTextareaComponent,\n    SBCardComponent,\n    SBCardWithBackgroundColor,\n    SBCardFullBackgroundImage,\n    SBCardBodyWithBackgroundImage,\n    SBAccordionGroupWithTableSlotComponent,\n    SBTreeComponent,\n    SBAvatarComponent,\n    SBImageAndNameComponent,\n    SBAvatarInitialsComponent,\n    SBAvatarInitialsAndNameComponent,\n    SBInitialsNameAndNotificationComponent,\n    SBLogoAndNameComponent,\n    SBStatusComponent,\n    SBAvatarSizeComponent,\n    SBSearchComponent,\n    SBFilterTableComponent,\n    SBStepperStatusComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class SBAppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SBCardBodyWithBackgroundImage"
                        },
                        {
                            "name": "SBCardFullBackgroundImage"
                        },
                        {
                            "name": "SBCardWithBackgroundColor"
                        },
                        {
                            "name": "SBErrorMessageComponent"
                        },
                        {
                            "name": "SBNexusNotificationVariant"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/73",
                "status": "low"
            },
            {
                "filePath": "src/app/components/accordion-examples/accordion-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/accordion-examples/accordion-group-examples/accordion-group-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionGroupExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar-examples/avatar-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge-examples/badge-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/bar-chart/bar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "src/app/components/breadcrumb-example/breadcrumb-example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button-examples/button-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card-examples/card-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/carousel/carousel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CarouselComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox-examples/checkbox-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chip-examples/chip-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chip-group/chip-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dropdown-examples/dropdown-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/error-message/error-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field-examples/form-field-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon-examples/icon-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input-examples/input-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/line-chart/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/55",
                "status": "low"
            },
            {
                "filePath": "src/app/components/loader-examples/loader-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal-examples/modal-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pie-chart/pie-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/39",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pin-entry-examples/pin-entry-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PinEntryExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pin-entry/pin-entry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PinEntryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar-examples/progress-bar-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/radio-examples/radio-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search-examples/search-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select-example/select-example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/slider-examples/slider-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/stacked-bar-chart/stacked-bar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StackedBarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/60",
                "status": "low"
            },
            {
                "filePath": "src/app/components/stepper-examples/stepper-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab-bar/tab-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-examples/table-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toast-examples/toast-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toggle-examples/toggle-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tooltip-examples/tooltip-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tree/tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/playbook-component.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PlaybookDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/accordion/01_accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/accordion/02_accordionAlignment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionAlignmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/accordion/03_cardInsideAccordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardInsideAccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/accordion/04_accordionGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/accordion/05_accordionGroupWithTableSlot.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionGroupWithTableSlotComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/01_avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/02_imageAndName.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageAndNameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/03_initials.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarInitialsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/04_initialsAndName.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarInitialsAndNameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/05_initialsNameAndNotification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InitialsNameAndNotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/06_logoAndName.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoAndNameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/07_status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/avatar/08_size.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarSizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/badge/01_badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/badge/02_appearence.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppearenceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/badge/03_buttonOverlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonOverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/badge/04_iconOverlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconOverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/bar-chart/01_bar-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BarChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/39",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/breadcrumb/01_breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/breadcrumb/02_breadcrumbWithIcon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbWithIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/breadcrumb/03_disableBreadcrumbItem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DisableBreadcrumbItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/01_button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/02_size.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/03_state.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/04_darkTheme.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DarkThemeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/05_disabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DisabledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/06_floatingButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FloatingButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/button/07_tabbed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabbedButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/card/01_card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/card/02_backgroundColor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithBackgroundColorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/card/03_fullBackgroundImage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithFullBackgroundImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/card/04_bodyWithImage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithImageOnBodyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/carousel/01_carousel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CarouselComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/checkbox/01_checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/checkbox/02_setUp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigurationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/chip/01_chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/chip/02_variant.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipVariantComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/chip/03_group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/chip/04_removable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemovableChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/chip/05_darkTheme.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipOnDarkThemeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/dropdown/01_dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/dropdown/03_withSelect.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WithSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/dropdown/04_withSearchBar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WithSearchBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/error-message/01_errorMessage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SBErrorMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/error-message/02_emailValidation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/error-message/03_nameValidation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NameValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/file-upload/01_fileUpload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/file-upload/02_uploadImage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/footer/01_footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/form-field/01_formField.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/form-field/02_disabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldDisableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/form-field/03_withMessage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/form-field/04_withError.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldWithErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/header/01_header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/header/02_withAvatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderWithAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/icon/01_icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/icon/02_size.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconSizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/icon/03_overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/icon/04_iconOnForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconOnFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/01_input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/02_maxLength.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputMaxLengthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/03_withNumber.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/04_withPassword.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/05_withDate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/06_readOnly.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputReadOnlyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/input/07_disabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDisabledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/line-chart/01_line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/loader/01_loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/loader/02_overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderOverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/menu/01_menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/modal/01_modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/modal/02_termsOfUse.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalTOUComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/notification/01_notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/notification/02_overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationOverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/notification/03_variants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/pagination/01_pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/pin-entry/01_pin-entry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PinEntryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/pin-entry/02_pin-entryDisabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PinEntryDisabledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/pin-entry/03_withCustomLength.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WithCustomLengthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/progress-bar/01_progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/progress-bar/02_infinite.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarETAComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/progress-bar/03_reports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarPerfReportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/radio/01_radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/radio/02_group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/radio/03_withIcon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WithIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/radio/04_variants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VariantsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/radio/05_groupDisabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupDisabledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/radio/06_disabledSelected.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DisabledSelectedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/search/01_search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/search/02_filterTable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/select/01_select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/select/02_custom.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/select/03_multiselect.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiselectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/slider/01_slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/slider/02_disabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderDisabledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/slider/03_validation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/stepper/01_stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/stepper/02_status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/tab-bar/01_tab-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/tab-bar/02_withCustomContent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WithCustomContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/table/01_table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/table/02_tableBasic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableBasicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/textarea/01_textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toast/01_toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toast/02_variants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastVariantComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toast/03_autoClose.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastAutoCloseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toggle/01_toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toggle/02_switchDisabled.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchDisabledComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toggle/03_withLabel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WithLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toggle/04_types.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toggle/05_switchSize.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchSizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/toggle/06_buttonSize.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonSizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/tooltip/01_tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/tooltip/02_position.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipPositionVariantComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sb/components/tree/01_tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/index/index.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}